[
  {
    "text": "当一cache行已授权给某处理机核专有，而另外的处理机核企图读此行时，它将送出一个未命中指示给控制器",
    "id": 1519,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2268,
    "created_at": "2024-07-21T04:17:21.315610Z",
    "updated_at": "2024-07-21T04:17:21.315610Z",
    "lead_time": 235.675
  },
  {
    "text": "控制器则向持有此行的处理机核发布命令，要求它将此行写回到主存",
    "id": 1520,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2269,
    "created_at": "2024-07-21T04:17:28.976332Z",
    "updated_at": "2024-07-21T04:17:28.976332Z",
    "lead_time": 7.419
  },
  {
    "text": "于是，现在此行可被原先的处理机核和提出请求的处理机核读共享了",
    "id": 1521,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2270,
    "created_at": "2024-07-21T04:17:41.616062Z",
    "updated_at": "2024-07-21T04:17:41.617077Z",
    "lead_time": 12.393
  },
  {
    "text": "目录协议的缺点是存在中央瓶颈，且各cache控制器和中央控制器之间的通信开销也较大",
    "id": 1522,
    "label": [
      {
        "start": 17,
        "end": 25,
        "text": "cache控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "目录协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "中央控制器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2271,
    "created_at": "2024-07-21T04:17:54.295200Z",
    "updated_at": "2024-07-21T04:17:54.295200Z",
    "lead_time": 12.418
  },
  {
    "text": "然而，在采用了多条总线或某种另外的复杂互连机构的大型系统中，它们是很有效的",
    "id": 1523,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2272,
    "created_at": "2024-07-21T04:20:11.840252Z",
    "updated_at": "2024-07-21T04:20:11.841767Z",
    "lead_time": 136.879
  },
  {
    "text": "监听协议监听协议将维护cache一致性的责任分布到多核处理机中每个cache控制器上",
    "id": 1524,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "监听协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 41,
        "text": "cache控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "监听协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 19,
        "text": "cache一致性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2273,
    "created_at": "2024-07-21T04:20:26.662877Z",
    "updated_at": "2024-07-21T04:20:26.662877Z",
    "lead_time": 14.563
  },
  {
    "text": "一个cache必须知晓它保存的某个cache行何时会与其他cache共享",
    "id": 1525,
    "label": [
      {
        "start": 17,
        "end": 23,
        "text": "cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2274,
    "created_at": "2024-07-21T04:20:30.874352Z",
    "updated_at": "2024-07-21T04:20:30.874352Z",
    "lead_time": 3.928
  },
  {
    "text": "当对共享的cache行进行修改时，必须通过一种广播机制通知到所有其他cache",
    "id": 1526,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "广播",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2275,
    "created_at": "2024-07-21T04:20:37.828330Z",
    "updated_at": "2024-07-21T04:20:37.828330Z",
    "lead_time": 6.701
  },
  {
    "text": "各cache控制器应能监听网络，以得到这些广播通知，并做出相应的反应",
    "id": 1527,
    "label": [
      {
        "start": 1,
        "end": 9,
        "text": "cache控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "广播",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2276,
    "created_at": "2024-07-21T04:20:43.160257Z",
    "updated_at": "2024-07-21T04:20:43.160257Z",
    "lead_time": 4.991
  },
  {
    "text": "监听协议非常适合于基于总线的多核处理机，因为共享的总线能为广播和监听提供简洁的方式",
    "id": 1528,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "广播",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "监听协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2277,
    "created_at": "2024-07-21T04:20:57.991258Z",
    "updated_at": "2024-07-21T04:20:57.991258Z",
    "lead_time": 14.582
  },
  {
    "text": "然而，使用局部cache的目标之一就是希望避免或减少总线访问，因此必须小心设计以避免由于广播和监听而增加的总线传输抵消了使用局部cache的好处",
    "id": 1529,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "广播",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "总线传输",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 69,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2278,
    "created_at": "2024-07-21T04:21:13.548529Z",
    "updated_at": "2024-07-21T04:21:13.548529Z",
    "lead_time": 15.256
  },
  {
    "text": "监听协议已开发出两种基本方法：写作废writeinvalidate和写更新writeupdate",
    "id": 1530,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "监听协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "写作废",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "写更新",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2279,
    "created_at": "2024-07-21T04:21:20.564365Z",
    "updated_at": "2024-07-21T04:21:20.564365Z",
    "lead_time": 6.724
  },
  {
    "text": "使用写作废协议，系统任一时刻可有多个读者，但只能有一个写者",
    "id": 1531,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "写作废",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2280,
    "created_at": "2024-07-21T04:21:25.917367Z",
    "updated_at": "2024-07-21T04:21:25.917367Z",
    "lead_time": 5.093
  },
  {
    "text": "最初，一个数据可能在几个cache中处于读共享状态",
    "id": 1532,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "读共享",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2281,
    "created_at": "2024-07-21T04:21:31.890287Z",
    "updated_at": "2024-07-21T04:21:31.890287Z",
    "lead_time": 5.738
  },
  {
    "text": "当某个cache要对此行进行写操作时，它要先发出一个通知，以使其他cache中此行作废，使此行变为cache写独占状态",
    "id": 1533,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "写操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 54,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "写独占",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2282,
    "created_at": "2024-07-21T04:21:42.843196Z",
    "updated_at": "2024-07-21T04:21:42.843196Z",
    "lead_time": 10.705
  },
  {
    "text": "一旦行变为独占状态，拥有该行的处理机核就可进行本地写操作，直到某些其他处理机核请求该数据行",
    "id": 1534,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "写操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2283,
    "created_at": "2024-07-21T04:22:01.761450Z",
    "updated_at": "2024-07-21T04:22:01.761450Z",
    "lead_time": 18.67
  },
  {
    "text": "在写作废协议中，cache行的状态被分别标识为修改Modified、独占Exclusive、共享Shared和无效Invilid",
    "id": 1535,
    "label": [
      {
        "start": 8,
        "end": 14,
        "text": "cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "写作废协议",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2284,
    "created_at": "2024-07-21T04:24:45.180904Z",
    "updated_at": "2024-07-21T04:25:21.550462Z",
    "lead_time": 167.201
  },
  {
    "text": "故写作废协议也称为MESI协议",
    "id": 1536,
    "label": [
      {
        "start": 9,
        "end": 15,
        "text": "MESI协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "写作废协议",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2285,
    "created_at": "2024-07-21T04:24:54.867344Z",
    "updated_at": "2024-07-21T04:25:16.447736Z",
    "lead_time": 12.916999999999998
  },
  {
    "text": "写更新协议又称为写广播writebroadcast协议",
    "id": 1537,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "写广播",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "写更新协议",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2286,
    "created_at": "2024-07-21T04:25:11.314369Z",
    "updated_at": "2024-07-21T04:25:11.314369Z",
    "lead_time": 16.194
  },
  {
    "text": "采用该协议，系统中可有多个写者以及多个读者",
    "id": 1538,
    "annotator": 1,
    "annotation_id": 2287,
    "created_at": "2024-07-21T04:25:38.591511Z",
    "updated_at": "2024-07-21T04:25:38.591511Z",
    "lead_time": 3.63
  },
  {
    "text": "当一个处理机核打算修改一个共享cache行时，将被写入的字数据也被同时广播到所有其他cache，于是拥有该数据行副本的cache能同时进行写修改",
    "id": 1539,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "广播",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 64,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2288,
    "created_at": "2024-07-21T04:25:47.946709Z",
    "updated_at": "2024-07-21T04:25:47.946709Z",
    "lead_time": 9.112
  },
  {
    "text": "监听协议实现比较简单，但只适用于总线结构的多处理机系统，而且不管是写作废还是写更新，都要占用总线不少时间，所以只能用于处理机核数量不多的系统中",
    "id": 1540,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "监听协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "多处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "写作废",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "写更新",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2289,
    "created_at": "2024-07-21T04:26:09.072123Z",
    "updated_at": "2024-07-21T04:26:09.072123Z",
    "lead_time": 20.864
  },
  {
    "text": "通常总线上能连接的处理机核不能超过个",
    "id": 1541,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2290,
    "created_at": "2024-07-21T04:26:53.948457Z",
    "updated_at": "2024-07-21T04:26:53.948457Z",
    "lead_time": 44.59
  },
  {
    "text": "监听协议是应用广泛的cache一致性协议",
    "id": 1542,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "监听协议",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 18,
        "text": "cache一致性",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2291,
    "created_at": "2024-07-21T04:27:03.813686Z",
    "updated_at": "2024-07-21T04:27:03.813686Z",
    "lead_time": 9.617
  },
  {
    "text": "多核处理机的核间通信与同步技术多核处理机片内的多个核心虽然各自执行自己的代码，但是不同核心间需要进行数据的共享和同步，因此多核处理机硬件结构必须支持高效的核间通信，片上通信结构的性能也将直接影响处理机的性能",
    "id": 1543,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 66,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "核间通信",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 77,
        "end": 81,
        "text": "核间通信",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 97,
        "end": 100,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2292,
    "created_at": "2024-07-21T04:27:59.635574Z",
    "updated_at": "2024-07-21T04:27:59.635574Z",
    "lead_time": 55.468
  },
  {
    "text": "当前主流的片上通信方式有三种：总线共享cache结构、交叉开关互连结构和片上网络结构",
    "id": 1544,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "片上通信方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 26,
        "text": "总线共享cache结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 35,
        "text": "交叉开关互连结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 42,
        "text": "片上网络结构",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2293,
    "created_at": "2024-07-21T04:28:17.591652Z",
    "updated_at": "2024-07-21T04:28:17.591652Z",
    "lead_time": 17.689
  },
  {
    "text": "总线共享cache结构总线共享cache结构是指多核处理机核共享Lcache或Lcache，处理机片上核心、输入输出端口以及主存储器通过连接核心的总线进行通信",
    "id": 1545,
    "label": [
      {
        "start": 62,
        "end": 66,
        "text": "主存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 11,
        "text": "总线共享cache结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 22,
        "text": "总线共享cache结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2294,
    "created_at": "2024-07-21T04:30:11.026894Z",
    "updated_at": "2024-07-21T04:30:11.026894Z",
    "lead_time": 113.144
  },
  {
    "text": "这种方式的优点是结构简单、易于设计实现、通信速度高，但缺点是总线结构的可扩展性较差，只适用于核心数较少的情况",
    "id": 1546,
    "label": [
      {
        "start": 30,
        "end": 32,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2295,
    "created_at": "2024-07-21T04:30:34.818237Z",
    "updated_at": "2024-07-21T04:30:34.818237Z",
    "lead_time": 23.524
  },
  {
    "text": "采用总线共享结构的处理机有斯坦福大学研制的Hydra处理机、英特尔公司开发的酷睿Core处理机、IBM公司开发的Power处理机和Power处理机等",
    "id": 1547,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "斯坦福大学",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "英特尔公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "IBM公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 8,
        "text": "总线共享结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 29,
        "text": "Hydra处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 38,
        "end": 47,
        "text": "酷睿Core处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 56,
        "end": 64,
        "text": "Power处理机",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2296,
    "created_at": "2024-07-21T04:31:13.841884Z",
    "updated_at": "2024-07-21T04:31:13.841884Z",
    "lead_time": 38.776
  },
  {
    "text": "交叉开关互连结构总线采用分时复用的工作模式，因而在同一总线上同时只能有一个相互通信的过程",
    "id": 1548,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "分时复用",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2297,
    "created_at": "2024-07-21T04:31:37.501671Z",
    "updated_at": "2024-07-21T04:31:37.501671Z",
    "lead_time": 23.387
  },
  {
    "text": "交叉开关crossbarswitch结构则能够有效提高数据交换的带宽",
    "id": 1549,
    "label": [
      {
        "start": 32,
        "end": 34,
        "text": "带宽",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2298,
    "created_at": "2024-07-21T04:32:35.653301Z",
    "updated_at": "2024-07-21T04:32:35.653301Z",
    "lead_time": 57.84
  },
  {
    "text": "交叉开关是在传统电话交换机中沿用数十年的经典技术，它可以按照任意的次序把输入线路和输出线路连接起来",
    "id": 1550,
    "annotator": 1,
    "annotation_id": 2299,
    "created_at": "2024-07-21T04:32:40.503269Z",
    "updated_at": "2024-07-21T04:32:40.503269Z",
    "lead_time": 4.59
  },
  {
    "text": "图所示为连接个处理机核和个内存模块的交叉开关结构",
    "id": 1551,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 24,
        "text": "交叉开关结构",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2300,
    "created_at": "2024-07-21T04:32:45.909513Z",
    "updated_at": "2024-07-21T04:32:45.909513Z",
    "lead_time": 5.144
  },
  {
    "text": "图中左侧的每条水平线和每条垂直线的交点都是可控的交叉节点，可以根据控制信号的状态打开或闭合",
    "id": 1552,
    "label": [
      {
        "start": 33,
        "end": 37,
        "text": "控制信号",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2301,
    "created_at": "2024-07-21T04:32:50.306524Z",
    "updated_at": "2024-07-21T04:32:50.306524Z",
    "lead_time": 4.12
  },
  {
    "text": "闭合状态的交叉节点使其连接的垂直线和水平线处于连通状态",
    "id": 1553,
    "annotator": 1,
    "annotation_id": 2302,
    "created_at": "2024-07-21T04:32:52.924072Z",
    "updated_at": "2024-07-21T04:32:52.924072Z",
    "lead_time": 2.286
  },
  {
    "text": "图中黑色实心节点处于闭合状态，空心节点处于打开状态，图中右侧显示了放大的节点示意图",
    "id": 1554,
    "annotator": 1,
    "annotation_id": 2303,
    "created_at": "2024-07-21T04:32:54.310483Z",
    "updated_at": "2024-07-21T04:32:54.310483Z",
    "lead_time": 1.105
  },
  {
    "text": "图中显示有三个开关处于闭合状态，这意味着同时可以有三个处理机核分别与不同的存储器模块进行信息交互",
    "id": 1555,
    "label": [
      {
        "start": 37,
        "end": 40,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2304,
    "created_at": "2024-07-21T04:33:00.749389Z",
    "updated_at": "2024-07-21T04:33:00.749389Z",
    "lead_time": 6.152
  },
  {
    "text": "交叉开关网络是一种无阻塞的网络，这就意味着不会因为网络本身的限制导致处理机第章并行组织与结构核无法与内存模块建立连接",
    "id": 1556,
    "label": [
      {
        "start": 50,
        "end": 52,
        "text": "内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "交叉开关网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2305,
    "created_at": "2024-07-21T04:33:42.876065Z",
    "updated_at": "2024-07-21T04:33:47.903093Z",
    "lead_time": 45.204
  },
  {
    "text": "只要不存在存储器模块本身的冲突，图所示的交叉开关结构最多可以同时支持八个连接",
    "id": 1557,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 26,
        "text": "交叉开关结构",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2306,
    "created_at": "2024-07-21T04:35:03.310304Z",
    "updated_at": "2024-07-21T04:35:03.310304Z",
    "lead_time": 69.318
  },
  {
    "text": "与总线结构相比，交叉开关的优势是数据通道多、访问带宽更大，但缺点是交叉开关结构占用的片上面积也较大，因为nn的交叉开关需要n个交叉节点",
    "id": 1558,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "带宽",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 39,
        "text": "交叉开关结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "交叉开关",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 67,
        "text": "交叉节点",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "交叉开关",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2307,
    "created_at": "2024-07-21T04:35:34.577084Z",
    "updated_at": "2024-07-21T04:35:34.577084Z",
    "lead_time": 31.013
  },
  {
    "text": "而且随着核心数的增加，交叉开关结构的性能也会下降",
    "id": 1559,
    "label": [
      {
        "start": 11,
        "end": 17,
        "text": "交叉开关结构",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2308,
    "created_at": "2024-07-21T04:35:46.804117Z",
    "updated_at": "2024-07-21T04:35:46.804117Z",
    "lead_time": 11.899
  },
  {
    "text": "因此这种方式也只适用中等规模的系统",
    "id": 1560,
    "annotator": 1,
    "annotation_id": 2309,
    "created_at": "2024-07-21T04:35:49.033340Z",
    "updated_at": "2024-07-21T04:35:49.033340Z",
    "lead_time": 1.945
  },
  {
    "text": "AMD公司的速龙AthlonX双核处理机就是采用交叉开关来控制核心与外部通信的典型实例",
    "id": 1561,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "AMD公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "速龙",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "双核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "交叉开关",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2310,
    "created_at": "2024-07-21T04:36:07.106206Z",
    "updated_at": "2024-07-21T04:36:07.106206Z",
    "lead_time": 17.798
  },
  {
    "text": "片上网络结构片上网络networkonachip，NoC技术借鉴了并行计算机的互联网络，在单芯片上集成大量的计算资源以及连接这些资源的片上通信网络",
    "id": 1562,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "片上网络结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 73,
        "text": "片上通信网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2311,
    "created_at": "2024-07-21T04:37:00.570451Z",
    "updated_at": "2024-07-21T04:37:00.570451Z",
    "lead_time": 53.166
  },
  {
    "text": "每个处理机核心具有独立的处理单元及其私有的cache，并通过片上通信网络连接在一起，处理机核之间采用消息通信机制，用路由和分组交换技术替代传统的片上总线来完成通信任务，从而克服由总线互连所带来的各种瓶颈问题",
    "id": 1563,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "片上通信网络",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 56,
        "text": "消息通信机制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 67,
        "text": "分组交换技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 76,
        "text": "片上总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2312,
    "created_at": "2024-07-21T04:37:26.582151Z",
    "updated_at": "2024-07-21T04:37:26.582151Z",
    "lead_time": 25.751
  },
  {
    "text": "片上网络与传统分布式计算机网络有很多相似之处，但限于片上资源有限，设计时要考虑更多的开销限制，针对延时、功耗、面积等性能标准进行优化设计，为实现高性能片上系统提供高效的通信支持",
    "id": 1564,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "片上网络",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 15,
        "text": "分布式计算机网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2313,
    "created_at": "2024-07-21T04:38:20.996459Z",
    "updated_at": "2024-07-21T04:38:20.996459Z",
    "lead_time": 54.109
  },
  {
    "text": "片上网络可以采用多种拓扑结构，如环形拓扑、网状拓扑、树状拓扑等",
    "id": 1565,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "片上网络",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "拓扑结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "环形拓扑",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "网状拓扑",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "树状拓扑",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2314,
    "created_at": "2024-07-21T04:38:29.152261Z",
    "updated_at": "2024-07-21T04:38:29.152261Z",
    "lead_time": 7.9
  },
  {
    "text": "图显示了一种常用的二维网状网络DMesh片上网络结构",
    "id": 1566,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "片上网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2315,
    "created_at": "2024-07-21T04:38:34.703590Z",
    "updated_at": "2024-07-21T04:38:34.703590Z",
    "lead_time": 5.271
  },
  {
    "text": "片上网络包括计算子系统和通信子系统两部分",
    "id": 1567,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "计算子系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "通信子系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "片上网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2316,
    "created_at": "2024-07-21T04:38:37.831403Z",
    "updated_at": "2024-07-21T04:38:42.461119Z",
    "lead_time": 5.792
  },
  {
    "text": "计算子系统由处理单元processingelement，PE构成，完成计算任务，PE可以是处理机核心，也可以是各种专用功能的硬件部件或存储器阵列等",
    "id": 1568,
    "label": [
      {
        "start": 67,
        "end": 70,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "计算子系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 50,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2317,
    "created_at": "2024-07-21T04:50:09.958134Z",
    "updated_at": "2024-07-21T04:50:09.958134Z",
    "lead_time": 686.442
  },
  {
    "text": "通信子系统由交换switch节点图中缩写为“S”及节点间的互连线路组成，负责连接PE，实现计算资源之间的高速通信",
    "id": 1569,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "通信子系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2318,
    "created_at": "2024-07-21T04:50:17.001232Z",
    "updated_at": "2024-07-21T04:50:17.001232Z",
    "lead_time": 6.257
  },
  {
    "text": "通信节点及其间的互连线所构成的网络就是片上通信网络",
    "id": 1570,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "片上通信网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2319,
    "created_at": "2024-07-21T04:50:21.162959Z",
    "updated_at": "2024-07-21T04:50:21.162959Z",
    "lead_time": 3.367
  },
  {
    "text": "在二维网状网络结构中，每个PE与一个交换节点相连，而每个交换节点则与四个相邻的交换节点和一个PE相连，交换节点实现路由功能，并作为每个相邻的PE的网络接口",
    "id": 1571,
    "label": [
      {
        "start": 57,
        "end": 61,
        "text": "路由功能",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 73,
        "end": 77,
        "text": "网络接口",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2320,
    "created_at": "2024-07-21T04:50:33.125034Z",
    "updated_at": "2024-07-21T04:50:33.125034Z",
    "lead_time": 11.289
  },
  {
    "text": "与总线结构和交叉开关互连结构相比，片上网络可以连接更多的计算节点，可靠性高，可扩展性强，功耗也更低",
    "id": 1572,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 14,
        "text": "交叉开关互连结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "片上网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2321,
    "created_at": "2024-07-21T04:51:08.841281Z",
    "updated_at": "2024-07-21T04:51:08.841281Z",
    "lead_time": 35.049
  },
  {
    "text": "因此片上网络被认为是更加理想的大规模多核处理机核间互连技术",
    "id": 1573,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "片上网络",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2322,
    "created_at": "2024-07-21T04:51:21.053216Z",
    "updated_at": "2024-07-21T04:51:21.053216Z",
    "lead_time": 11.786
  },
  {
    "text": "这种结构的缺点是硬件结构复杂，且软件改动较大",
    "id": 1574,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2323,
    "created_at": "2024-07-21T04:51:23.781846Z",
    "updated_at": "2024-07-21T04:51:23.781846Z",
    "lead_time": 2.301
  },
  {
    "text": "这三种互连结构还可以相互融合，例如，在整体结构上采用片上网络方式，而在局部选择总线或交叉开关结构，以实现性能与复杂度的平衡",
    "id": 1575,
    "label": [
      {
        "start": 39,
        "end": 41,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "片上网络",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 48,
        "text": "交叉开关结构",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2324,
    "created_at": "2024-07-21T04:51:36.823534Z",
    "updated_at": "2024-07-21T04:51:36.823534Z",
    "lead_time": 12.647
  },
  {
    "text": "由于多核处理机内的各个处理机核之间需要通过中断方式进行通信，所以多核处理机的中断处理方式也和单核有很大不同",
    "id": 1576,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "中断方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 44,
        "text": "中断处理方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "单核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2325,
    "created_at": "2024-07-21T04:52:38.569970Z",
    "updated_at": "2024-07-21T04:52:38.569970Z",
    "lead_time": 61.315
  },
  {
    "text": "多个处理机核内部的本地中断控制器和负责仲裁各核之间中断分配的全局中断控制器也需要封装在芯片内部",
    "id": 1577,
    "label": [
      {
        "start": 43,
        "end": 45,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 37,
        "text": "全局中断控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 16,
        "text": "本地中断控制器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2326,
    "created_at": "2024-07-21T04:52:55.576194Z",
    "updated_at": "2024-07-21T04:52:55.576194Z",
    "lead_time": 16.533
  },
  {
    "text": "多核系统还需要解决的一个问题就是核之间的同步和互斥",
    "id": 1578,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "同步",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "多核系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "互斥",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2327,
    "created_at": "2024-07-21T04:53:06.404825Z",
    "updated_at": "2024-07-21T04:53:06.404825Z",
    "lead_time": 10.39
  },
  {
    "text": "多核处理机上运行的多个任务会竞争共享资源，因此需要操作系统和硬件配合提供核间同步机制与共享资源互斥访问机制",
    "id": 1579,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 42,
        "text": "核间同步机制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 53,
        "text": "共享资源互斥访问机制",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2328,
    "created_at": "2024-07-21T04:53:27.969000Z",
    "updated_at": "2024-07-21T04:53:27.969000Z",
    "lead_time": 21.115
  },
  {
    "text": "例如，多核系统硬件应提供“读修改写回”的原子操作或其他同步互斥机制，保证对共享资源的互斥访问",
    "id": 1580,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "原子操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "同步互斥机制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "互斥访问",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "多核系统硬件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2329,
    "created_at": "2024-07-21T04:53:56.521907Z",
    "updated_at": "2024-07-21T04:53:56.521907Z",
    "lead_time": 28.132
  },
  {
    "text": "低功耗设计随着环保理念的普及和移动计算应用的推广，对处理机和整个计算机系统的功耗的关注度越来越高",
    "id": 1581,
    "label": [
      {
        "start": 32,
        "end": 37,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2330,
    "created_at": "2024-07-21T04:54:02.497844Z",
    "updated_at": "2024-07-21T04:54:02.497844Z",
    "lead_time": 5.508
  },
  {
    "text": "低功耗设计是一个多层次的问题，需要同时在操作系统级、算法级、结构级、电路级等多个层次上综合考虑",
    "id": 1582,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "算法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2331,
    "created_at": "2024-07-21T04:54:09.193473Z",
    "updated_at": "2024-07-21T04:54:09.193473Z",
    "lead_time": 6.312
  },
  {
    "text": "在单处理机时代，低功耗技术主要在电路层次上进行低功耗设计，注重降低半导体电路的动态电能消耗和静态电能消耗",
    "id": 1583,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "单处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "半导体",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2332,
    "created_at": "2024-07-21T04:54:14.301869Z",
    "updated_at": "2024-07-21T04:54:14.301869Z",
    "lead_time": 4.695
  },
  {
    "text": "由于多核处理机在结构和实现上的特点，在多核处理机上可以采用异构结构设计、动态线程分派与转移技术等降低功耗",
    "id": 1584,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 35,
        "text": "异构结构设计",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 42,
        "text": "动态线程分派",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "转移技术",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2333,
    "created_at": "2024-07-21T04:54:38.090181Z",
    "updated_at": "2024-07-21T04:54:47.680489Z",
    "lead_time": 23.842
  },
  {
    "text": "异构结构设计就是利用异构多核结构对片上资源进行优化配置，使处理机在提高性能的同时降低功耗",
    "id": 1585,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "异构结构设计",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "异构多核结构",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2334,
    "created_at": "2024-07-21T04:55:10.826228Z",
    "updated_at": "2024-07-21T04:55:10.826228Z",
    "lead_time": 21.474
  },
  {
    "text": "动态线程分派与转移技术则是在程序运行时动态地将某个核心上较高的负载转移到负载较小的核心上，从而使处理机在不降低处理性能的情况下，降低处理机功耗",
    "id": 1586,
    "label": [
      {
        "start": 48,
        "end": 51,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "动态线程分派",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "转移技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2335,
    "created_at": "2024-07-21T04:55:24.124076Z",
    "updated_at": "2024-07-21T04:55:24.124076Z",
    "lead_time": 12.039
  },
  {
    "text": "当整体负载任务较少时，关闭某些核心或降低其处理机频率也可以使整个系统功耗降低",
    "id": 1587,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "处理机频率",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2336,
    "created_at": "2024-07-21T04:57:14.007746Z",
    "updated_at": "2024-07-21T04:57:14.007746Z",
    "lead_time": 109.3
  },
  {
    "text": "多核软件设计虽然多核技术与多处理机有许多相似之处，但二者之间的差别导致在许多情况下多处理机系统中的软件并不能直接拿到多核系统中运行",
    "id": 1588,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "多处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "多处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2337,
    "created_at": "2024-07-21T04:57:51.318129Z",
    "updated_at": "2024-07-21T04:57:51.318129Z",
    "lead_time": 37.043
  },
  {
    "text": "在多处理机系统中，各个处理机之间的界线是非常清晰的，每个处理机基本上都是独立运行的",
    "id": 1589,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "多处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2338,
    "created_at": "2024-07-21T04:58:01.070574Z",
    "updated_at": "2024-07-21T04:58:01.070574Z",
    "lead_time": 9.493
  },
  {
    "text": "而在多核系统中，资源的共享更加普遍",
    "id": 1590,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "多核系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2339,
    "created_at": "2024-07-21T04:58:09.284605Z",
    "updated_at": "2024-07-21T04:58:09.284605Z",
    "lead_time": 7.966
  },
  {
    "text": "由于多核处理机内部有多个核心，因而如何在多个处理机核之间分配任务是必须要解决的关键问题",
    "id": 1591,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2340,
    "created_at": "2024-07-21T04:58:19.365159Z",
    "updated_at": "2024-07-21T04:58:19.365159Z",
    "lead_time": 9.828
  },
  {
    "text": "因此，支持多核的操作系统必须解决任务分配、任务调度、仲裁以及负载平衡等问题，必要时还需要支持多核之间的动态任务迁移",
    "id": 1592,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "任务调度",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 57,
        "text": "动态任务迁移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "任务分配",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "负载平衡",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2341,
    "created_at": "2024-07-21T04:58:34.347185Z",
    "updated_at": "2024-07-21T04:58:34.347185Z",
    "lead_time": 14.723
  },
  {
    "text": "对于多核处理机，优化操作系统任务调度算法是保证效率的关键",
    "id": 1593,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "任务调度算法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2342,
    "created_at": "2024-07-21T04:58:42.003568Z",
    "updated_at": "2024-07-21T04:58:42.003568Z",
    "lead_time": 7.373
  },
  {
    "text": "当前关于多核的任务调度算法主要有全局队列调度和局部队列调度等算法",
    "id": 1594,
    "label": [
      {
        "start": 16,
        "end": 22,
        "text": "全局队列调度",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 13,
        "text": "任务调度算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 29,
        "text": "局部队列调度",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2343,
    "created_at": "2024-07-21T04:58:49.704788Z",
    "updated_at": "2024-07-21T04:58:49.704788Z",
    "lead_time": 7.428
  },
  {
    "text": "全局队列调度策略由操作系统维护一个全局的任务等待队列，当系统中有某个处理机核心空闲时，操作系统便从全局任务等待队列中选取就绪任务并开始在此核心上执行",
    "id": 1595,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 8,
        "text": "全局队列调度策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 26,
        "text": "任务等待队列",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 57,
        "text": "全局任务等待队列",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "就绪任务",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2344,
    "created_at": "2024-07-21T04:59:08.168841Z",
    "updated_at": "2024-07-21T04:59:08.169881Z",
    "lead_time": 18.218
  },
  {
    "text": "这种调度策略的优点是处理机核心的利用率较高",
    "id": 1596,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2345,
    "created_at": "2024-07-21T04:59:12.532404Z",
    "updated_at": "2024-07-21T04:59:12.532404Z",
    "lead_time": 4.053
  },
  {
    "text": "局部队列调度策略是操作系统为每个处理机核心维护一个局部的任务等待队列，当系统中有某个处理机核心空闲时，便从该核心的任务等待队列中选取恰当的任务执行",
    "id": 1597,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 8,
        "text": "局部队列调度策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 34,
        "text": "任务等待队列",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 63,
        "text": "任务等待队列",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2346,
    "created_at": "2024-07-21T04:59:26.886405Z",
    "updated_at": "2024-07-21T04:59:31.693838Z",
    "lead_time": 17.371
  },
  {
    "text": "局部队列调度策略的优点是任务基本上无需在多个处理机核心之间迁移，有利于提高处理机核心私有cache的命中率，缺点是处理机核心的利用率较低",
    "id": 1598,
    "label": [
      {
        "start": 37,
        "end": 42,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "命中率",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 8,
        "text": "局部队列调度策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 62,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2347,
    "created_at": "2024-07-21T04:59:43.978808Z",
    "updated_at": "2024-07-21T04:59:43.978808Z",
    "lead_time": 11.376
  },
  {
    "text": "目前，大多数支持多核的操作系统采用基于全局队列的任务调度算法",
    "id": 1599,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 30,
        "text": "任务调度算法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2348,
    "created_at": "2024-07-21T04:59:55.614460Z",
    "updated_at": "2024-07-21T04:59:55.614460Z",
    "lead_time": 11.358
  },
  {
    "text": "从某种程度上说，应用软件的设计是多核系统设计的难点",
    "id": 1600,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "应用软件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2349,
    "created_at": "2024-07-21T05:00:01.252830Z",
    "updated_at": "2024-07-21T05:00:01.252830Z",
    "lead_time": 5.366
  },
  {
    "text": "这是因为，人的自然思维模式是单任务串行化的，正所谓“一心不能二用”",
    "id": 1601,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "串行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2350,
    "created_at": "2024-07-21T05:00:04.529104Z",
    "updated_at": "2024-07-21T05:00:04.529104Z",
    "lead_time": 3.032
  },
  {
    "text": "而多核系统中运行的程序只有按照并行化的思想设计才可能最大限度地发挥多核处理机的潜能",
    "id": 1602,
    "label": [
      {
        "start": 33,
        "end": 38,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "多核系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2351,
    "created_at": "2024-07-21T05:00:14.058738Z",
    "updated_at": "2024-07-21T05:00:14.058738Z",
    "lead_time": 9.284
  },
  {
    "text": "并行编程困难的问题从并行计算机产生以来就存在，只是随着多核的主流化，问题更加突出了",
    "id": 1603,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "并行计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2352,
    "created_at": "2024-07-21T05:00:19.437521Z",
    "updated_at": "2024-07-21T05:00:19.437521Z",
    "lead_time": 5.119
  },
  {
    "text": "虽然多处理机技术和多计算机技术已经应用多年，但当前的多核计算机系统与以往的并行计算机系统有很大的不同，以往的并行计算机系统都是应用在服务器或者超级计算中心等适合进行大型并行计算的领域，这些领域很容易发挥并行计算的优势",
    "id": 1604,
    "label": [
      {
        "start": 71,
        "end": 77,
        "text": "超级计算中心",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 2,
        "end": 8,
        "text": "多处理机技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "多计算机技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 44,
        "text": "并行计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 33,
        "text": "多核计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 61,
        "text": "并行计算机系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2353,
    "created_at": "2024-07-21T05:01:04.999314Z",
    "updated_at": "2024-07-21T05:01:04.999314Z",
    "lead_time": 45.301
  },
  {
    "text": "而现在的多核计算机系统则是应用到普通用户的各个层面，甚至是嵌入式系统中，在这些应用场景中实现软件并行编程，难度可能比服务器和超级计算中心更高",
    "id": 1605,
    "label": [
      {
        "start": 62,
        "end": 68,
        "text": "超级计算中心",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 11,
        "text": "多核计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "嵌入式系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2354,
    "created_at": "2024-07-21T05:01:14.915893Z",
    "updated_at": "2024-07-21T05:01:14.915893Z",
    "lead_time": 9.646
  },
  {
    "text": "多核系统下的并行编程，必须充分发挥多核的线程级并行性，但是已有的编程语言不能完全适合多核环境，不能将多核的多线程并行潜力充分挖掘出来",
    "id": 1606,
    "label": [
      {
        "start": 32,
        "end": 36,
        "text": "编程语言",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "多核系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "线程级并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "多线程并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2355,
    "created_at": "2024-07-21T05:01:30.072631Z",
    "updated_at": "2024-07-21T05:01:37.366106Z",
    "lead_time": 20.643
  },
  {
    "text": "为此，需要针对多核环境下对并行编程应用的要求，对现有的并行编程模式和编程语言如OpenMP、MPI、并行C等进行改进和优化，希望利用编程工具尽可能地帮助程序设计者发掘并行性",
    "id": 1607,
    "label": [
      {
        "start": 76,
        "end": 80,
        "text": "程序设计",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "编程语言",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "并行编程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "并行编程",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2356,
    "created_at": "2024-07-21T05:01:50.965897Z",
    "updated_at": "2024-07-21T05:02:08.986678Z",
    "lead_time": 24.619999999999997
  },
  {
    "text": "除了并行编程工具之外，另一个重要问题是并行设计思想",
    "id": 1608,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "并行编程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "并行设计思想",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2357,
    "created_at": "2024-07-21T05:02:21.847801Z",
    "updated_at": "2024-07-21T05:02:21.847801Z",
    "lead_time": 11.387
  },
  {
    "text": "原来运行在单处理机上的众多应用程序并没有利用多核的性能潜力，其中很多应用程序的线程级加速潜力有限",
    "id": 1609,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "应用程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "单处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "线程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "应用程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2358,
    "created_at": "2024-07-21T05:02:32.676868Z",
    "updated_at": "2024-07-21T05:02:36.941294Z",
    "lead_time": 12.686
  },
  {
    "text": "改造这些依据串行化思想设计的程序不能单纯依赖并行编程工具，必须将其从单线程的编程模式改造为并行程序执行模式",
    "id": 1610,
    "label": [
      {
        "start": 22,
        "end": 28,
        "text": "并行编程工具",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "串行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "单线程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "并行程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2359,
    "created_at": "2024-07-21T05:02:54.635431Z",
    "updated_at": "2024-07-21T05:02:54.635431Z",
    "lead_time": 15.548
  },
  {
    "text": "所以对于这些应用程序，或者要重新编写并行代码，或者研发更加先进的面向多核结构的自动并行化工具，使得这些应用程序能在多核处理机系统中高效运行",
    "id": 1611,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "应用程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "应用程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 64,
        "text": "多核处理机系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2360,
    "created_at": "2024-07-21T05:03:13.733189Z",
    "updated_at": "2024-07-21T05:03:13.733189Z",
    "lead_time": 18.826
  },
  {
    "text": "平衡设计原则除了上面讨论的一些多核处理机的关键技术，多核系统设计还必须遵循一个重要的设计原则，就是平衡设计",
    "id": 1612,
    "label": [
      {
        "start": 49,
        "end": 53,
        "text": "平衡设计",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "平衡设计原则",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "多核系统设计",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2361,
    "created_at": "2024-07-21T05:03:34.359668Z",
    "updated_at": "2024-07-21T05:03:34.359668Z",
    "lead_time": 20.325
  },
  {
    "text": "与单处理机系统相比，多核计算机系统的设计复杂度大幅度提高",
    "id": 1613,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "单处理机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 17,
        "text": "多核计算机系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2362,
    "created_at": "2024-07-21T05:03:41.033198Z",
    "updated_at": "2024-07-21T05:03:41.033198Z",
    "lead_time": 6.373
  },
  {
    "text": "因为在解决某个方面问题的同时往往会带来其他方面的问题，所以多核处理机结构设计的重点不在于其中某一个细节采用什么复杂或性能表现较好的设计，而是在于整体设计目标",
    "id": 1614,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2363,
    "created_at": "2024-07-21T05:03:45.784242Z",
    "updated_at": "2024-07-21T05:03:45.784242Z",
    "lead_time": 4.322
  },
  {
    "text": "因此，在多核系统设计过程中必须仔细权衡对某些问题的解决方法，尽量采用简单、易于实现、成本低廉而且对整体性能影响不大的设计方案",
    "id": 1615,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "多核系统设计",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2364,
    "created_at": "2024-07-21T05:04:02.104254Z",
    "updated_at": "2024-07-21T05:04:02.104254Z",
    "lead_time": 15.844
  },
  {
    "text": "平衡设计原则是指在芯片的复杂度、内部结构、性能、功耗、扩展性、部件成本等各个方面做一定的权衡，不能为了单纯地获得某一方面的性能提升而导致其他方面的问题",
    "id": 1616,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "平衡设计原则",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2365,
    "created_at": "2024-07-21T05:04:08.389763Z",
    "updated_at": "2024-07-21T05:04:08.389763Z",
    "lead_time": 5.942
  },
  {
    "text": "在设计过程中要坚持从整体结构的角度去权衡具体的结构问题",
    "id": 1617,
    "annotator": 1,
    "annotation_id": 2366,
    "created_at": "2024-07-21T05:04:10.898699Z",
    "updated_at": "2024-07-21T05:04:10.898699Z",
    "lead_time": 2.144
  },
  {
    "text": "要得到在一个通常情况下，逻辑结构简单并且对大多数应用程序而言性能优良的处理机结构，为了整体目标往往要牺牲某些局部的最佳设计方案",
    "id": 1618,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "应用程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2367,
    "created_at": "2024-07-21T05:04:14.454216Z",
    "updated_at": "2024-07-21T05:04:14.454216Z",
    "lead_time": 3.269
  },
  {
    "text": "CortexAMPCore处理机是ARM公司年月推出的ARMvA体系结构的多核产品",
    "id": 1619,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "ARM公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2368,
    "created_at": "2024-07-21T07:50:24.278304Z",
    "updated_at": "2024-07-21T07:50:24.278304Z",
    "lead_time": 15.412
  },
  {
    "text": "借助先进的多核处理机架构，CortexAMPCore处理机在高性能产品应用中的运行主频最高可达GHz，在提供强大的计算性能的同时，又保持着ARM特有的低功耗特性",
    "id": 1620,
    "label": [
      {
        "start": 41,
        "end": 43,
        "text": "主频",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "GHz",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2369,
    "created_at": "2024-07-21T07:51:46.434034Z",
    "updated_at": "2024-07-21T07:51:46.434034Z",
    "lead_time": 81.613
  },
  {
    "text": "该处理机有非常强的可扩展性scalability，支持单片至个处理机内核，可广泛应用在移动计算、高端数字家电、无线基站和企业级基础设施产品等领域",
    "id": 1621,
    "label": [
      {
        "start": 31,
        "end": 36,
        "text": "处理机内核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2370,
    "created_at": "2024-07-21T07:53:08.777702Z",
    "updated_at": "2024-07-21T07:53:08.777702Z",
    "lead_time": 81.804
  },
  {
    "text": "ARMCortexA处理机的整体结构图显示了ARMCortexAMPCore四核处理机的整体结构",
    "id": 1622,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "四核处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2371,
    "created_at": "2024-07-21T07:53:26.022827Z",
    "updated_at": "2024-07-21T07:53:26.022827Z",
    "lead_time": 16.551
  },
  {
    "text": "每个核内部包含支持ARMvA体系结构的位CPU，采用超标量、可变长、乱序执行流水线结构",
    "id": 1623,
    "label": [
      {
        "start": 38,
        "end": 41,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2372,
    "created_at": "2024-07-21T07:53:37.083932Z",
    "updated_at": "2024-07-21T07:53:37.083932Z",
    "lead_time": 10.137
  },
  {
    "text": "指令流水线为至级，其中级为按序执行，另外至级为乱序执行",
    "id": 1624,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2373,
    "created_at": "2024-07-21T07:54:37.078123Z",
    "updated_at": "2024-07-21T07:54:37.078123Z",
    "lead_time": 59.393
  },
  {
    "text": "CortexA处理机另外配备支持IEEE标准的向量浮点运算单元FPU，对半精度、单精度和双精度浮点算法中的浮点操作提供硬件支持",
    "id": 1625,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "双精度浮点",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2374,
    "created_at": "2024-07-21T07:55:18.939872Z",
    "updated_at": "2024-07-21T07:55:18.939872Z",
    "lead_time": 41.356
  },
  {
    "text": "ARM处理机独有的NEON媒体处理引擎则为消费类多媒体应用提供灵活强大的加速功能",
    "id": 1626,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "ARM处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 9,
        "end": 19,
        "text": "NEON媒体处理引擎",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2375,
    "created_at": "2024-07-21T07:55:28.820289Z",
    "updated_at": "2024-07-21T07:55:34.795494Z",
    "lead_time": 13.222000000000001
  },
  {
    "text": "NEON是ARMCortexA系列处理机上的位单指令流多数据流SIMD体系结构扩展技术，媒体处理引擎扩展了CortexA处理机的浮点运算单元，支持整数和浮点向量的SIMD运算",
    "id": 1627,
    "label": [
      {
        "start": 44,
        "end": 50,
        "text": "媒体处理引擎",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 31,
        "text": "单指令流多数据流",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "SIMD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 81,
        "end": 85,
        "text": "SIMD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 70,
        "text": "浮点运算单元",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2376,
    "created_at": "2024-07-21T07:59:25.510494Z",
    "updated_at": "2024-07-21T07:59:25.510494Z",
    "lead_time": 228.508
  },
  {
    "text": "NEON通用SIMD引擎旨在加速视频编解码、DD图形、游戏、音频和语音处理、图像处理、电话和声音合成等多媒体和信号处理算法，从而明显改善用户体验",
    "id": 1628,
    "label": [
      {
        "start": 0,
        "end": 12,
        "text": "NEON通用SIMD引擎",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2377,
    "created_at": "2024-07-21T07:59:51.096576Z",
    "updated_at": "2024-07-21T07:59:51.096576Z",
    "lead_time": 17.595
  },
  {
    "text": "CortexA还为每个处理机核配备了程序跟踪宏单元接口programtracemacrocellinterface，PTMIF，连接至多核调试和跟踪部件",
    "id": 1629,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 58,
        "end": 63,
        "text": "PTMIF",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "宏单元接口",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2378,
    "created_at": "2024-07-21T08:02:38.743848Z",
    "updated_at": "2024-07-21T08:02:38.743848Z",
    "lead_time": 167.205
  },
  {
    "text": "CortexA的每个处理机核内包含KB的L指令cache和KB的L数据cache，Lcache专门针对性能和功耗进行了优化",
    "id": 1630,
    "label": [
      {
        "start": 33,
        "end": 40,
        "text": "数据cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 28,
        "text": "指令cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2379,
    "created_at": "2024-07-21T08:04:56.731402Z",
    "updated_at": "2024-07-21T08:04:56.731402Z",
    "lead_time": 137.372
  },
  {
    "text": "在高性能应用中，可以通过可配置的KBMB的共享Lcache实现对内存的低延迟、高带宽访问",
    "id": 1631,
    "label": [
      {
        "start": 32,
        "end": 34,
        "text": "内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "带宽",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2380,
    "created_at": "2024-07-21T08:05:06.042038Z",
    "updated_at": "2024-07-21T08:05:06.042038Z",
    "lead_time": 8.729
  },
  {
    "text": "L指令cache支持奇偶校验功能，L数据cache和Lcache则支持可选的纠错编码errorcorrectioncode，ECC功能，可纠正单比特错误、检测双比特错误",
    "id": 1632,
    "label": [
      {
        "start": 18,
        "end": 25,
        "text": "数据cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 8,
        "text": "指令cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "奇偶校验",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "纠错编码",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2381,
    "created_at": "2024-07-21T08:05:23.705686Z",
    "updated_at": "2024-07-21T08:05:23.705686Z",
    "lead_time": 17.178
  },
  {
    "text": "处理机内还集成了三个独立的表项全相联L转换后援缓冲器TLB，分别用于取指令、读数据和写数据",
    "id": 1633,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "TLB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "取指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "缓冲器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2382,
    "created_at": "2024-07-21T08:06:57.189729Z",
    "updated_at": "2024-07-21T08:06:57.189729Z",
    "lead_time": 93.032
  },
  {
    "text": "每个处理机内还包含表项的路组相联LTLB",
    "id": 1634,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "TLB",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2383,
    "created_at": "2024-07-21T08:07:06.826222Z",
    "updated_at": "2024-07-21T08:07:06.826222Z",
    "lead_time": 9.199
  },
  {
    "text": "CortexA为主存提供了超大寻址空间，位物理地址可支持TB的主存空间",
    "id": 1635,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "主存空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "TB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "寻址空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2384,
    "created_at": "2024-07-21T08:07:18.741284Z",
    "updated_at": "2024-07-21T08:07:18.741284Z",
    "lead_time": 11.43
  },
  {
    "text": "ARMCortexA的多核支持功能CortexA处理机利用被广泛认可的ARMMPCore多核技术，支持性能可扩展性和动态功耗控制功能",
    "id": 1636,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2385,
    "created_at": "2024-07-21T08:07:26.954502Z",
    "updated_at": "2024-07-21T08:07:26.954502Z",
    "lead_time": 7.723
  },
  {
    "text": "动态功耗控制当配备该处理机的设备需要高性能时，片内的所有处理机核可以全速运行，满足运算需求，但核间任务分担机制可以平衡各个核的工作负载，以保持尽可能低的功耗",
    "id": 1637,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2386,
    "created_at": "2024-07-21T08:07:39.614413Z",
    "updated_at": "2024-07-21T08:07:39.614413Z",
    "lead_time": 12.202
  },
  {
    "text": "当设备不需要满负荷运行时，四个处理机核中的任何一个都可以被动态关闭，以降低功耗",
    "id": 1638,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2387,
    "created_at": "2024-07-21T08:07:45.254298Z",
    "updated_at": "2024-07-21T08:07:45.254298Z",
    "lead_time": 5.263
  },
  {
    "text": "监听控制单元监听控制单元snoopcontrolunit，SCU提供系统一致性管理功能，负责管理cache之间以及cache与系统主存之间的互连和通信，并解决cache一致性问题、实现数据传输优先级仲裁以及其他相关的功能",
    "id": 1639,
    "label": [
      {
        "start": 96,
        "end": 101,
        "text": "优先级仲裁",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 62,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 79,
        "end": 87,
        "text": "cache一致性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "监听控制单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "监听控制单元",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2388,
    "created_at": "2024-07-21T08:09:00.076600Z",
    "updated_at": "2024-07-21T08:09:00.076600Z",
    "lead_time": 74.278
  },
  {
    "text": "除了处理机核，CortexAMPCore处理机内的其他系统加速器如FPU和NEON和支持非缓冲DMA访问的外设也能够利用监听控制单元提供的支持，以便提高系统级的性能并降低功耗",
    "id": 1640,
    "label": [
      {
        "start": 53,
        "end": 55,
        "text": "外设",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "DMA",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 66,
        "text": "监听控制单元",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2389,
    "created_at": "2024-07-21T08:09:20.812046Z",
    "updated_at": "2024-07-21T08:09:20.812046Z",
    "lead_time": 20.171
  },
  {
    "text": "监听控制单元提供的系统一致性管理功能还可降低在各个操作系统驱动程序中维持软件一致性的软件复杂度",
    "id": 1641,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "监听控制单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "驱动程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2390,
    "created_at": "2024-07-21T08:09:38.083066Z",
    "updated_at": "2024-07-21T08:09:38.083066Z",
    "lead_time": 16.821
  },
  {
    "text": "加速器一致性端口加速器一致性端口是监听控制单元上提供的支持AMBAAXI高级可扩展接口，ARM推出的第四代AMBA接口规范规范的从设备接口，能够让主设备直接连接到CortexA处理机",
    "id": 1642,
    "label": [
      {
        "start": 73,
        "end": 76,
        "text": "主设备",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 8,
        "text": "加速器一致性端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 16,
        "text": "加速器一致性端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 23,
        "text": "监听控制单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "接口规范",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 69,
        "text": "从设备接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 91,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2391,
    "created_at": "2024-07-21T08:31:42.334860Z",
    "updated_at": "2024-07-21T08:31:42.334860Z",
    "lead_time": 1323.834
  },
  {
    "text": "该接口支持所有标准读操作和写操作，而不需要特别考虑一致性问题",
    "id": 1643,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "读操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "写操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "接口",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2392,
    "created_at": "2024-07-21T08:31:46.061045Z",
    "updated_at": "2024-07-21T08:31:46.061045Z",
    "lead_time": 3.132
  },
  {
    "text": "不过，针对主存一致区域的任何读操作都必须首先与监听控制单元交互，以确认被访问的信息是否已存储在Lcache中",
    "id": 1644,
    "label": [
      {
        "start": 48,
        "end": 53,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "读操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 29,
        "text": "监听控制单元",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2393,
    "created_at": "2024-07-21T08:31:51.201033Z",
    "updated_at": "2024-07-21T08:31:55.514397Z",
    "lead_time": 7.176
  },
  {
    "text": "任何写操作也将首先由监听控制单元进行一致性处理，然后才提交给存储系统并可在Lcache中分配空间，从而消除直接写入片外主存空间对功耗和性能的影响",
    "id": 1645,
    "label": [
      {
        "start": 30,
        "end": 34,
        "text": "存储系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "主存空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "写操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "监听控制单元",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2394,
    "created_at": "2024-07-21T08:33:12.013977Z",
    "updated_at": "2024-07-21T08:33:12.013977Z",
    "lead_time": 75.375
  },
  {
    "text": "通用中断控制器标准化和结构化的通用中断控制器可以灵活地支持处理机核间通信功能，实现系统中断的优先级仲裁及其在处理机核之间的分配",
    "id": 1646,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "通用中断控制器",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 22,
        "text": "通用中断控制器",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "系统中断",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "核间通信",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "优先级仲裁",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2395,
    "created_at": "2024-07-21T08:34:26.625338Z",
    "updated_at": "2024-07-21T08:34:26.625338Z",
    "lead_time": 74.031
  },
  {
    "text": "中断控制器最多支持个独立中断源",
    "id": 1647,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "中断控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "中断源",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2396,
    "created_at": "2024-07-21T08:34:30.566772Z",
    "updated_at": "2024-07-21T08:34:30.566772Z",
    "lead_time": 3.436
  },
  {
    "text": "在软件控制下，每个中断均可在处理机核之间调配，进行硬件优先级排队",
    "id": 1648,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "中断",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "优先级",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2397,
    "created_at": "2024-07-21T08:34:44.220021Z",
    "updated_at": "2024-07-21T08:34:47.058646Z",
    "lead_time": 14.414
  },
  {
    "text": "年月，英特尔在北京发布了多款基于IvyBridge简称IVB微架构microarchitecture的第三代智能酷睿Corei系列处理机，是当时业界制造工艺最为先进的处理机",
    "id": 1649,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "英特尔",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "北京",
        "labels": [
          "LOC"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 63,
        "text": "酷睿Corei",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2398,
    "created_at": "2024-07-21T08:35:03.825451Z",
    "updated_at": "2024-07-21T08:35:03.825451Z",
    "lead_time": 15.431
  },
  {
    "text": "年推出的采用nm半导体工艺的第二代智能酷睿处理机微架构SandyBridge处理机实现了处理机核、图形核心、视频引擎的单芯片封装",
    "id": 1650,
    "label": [
      {
        "start": 17,
        "end": 24,
        "text": "智能酷睿处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "芯片封装",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "半导体",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2399,
    "created_at": "2024-07-21T08:35:29.779382Z",
    "updated_at": "2024-07-21T08:35:36.274029Z",
    "lead_time": 21.581
  },
  {
    "text": "与SandyBridge简称SNB相比，IvyBridge对处理机架构没有做太大调整，但采用更加先进的nm制造工艺，并结合D晶体管技术，在大幅度提高晶体管密度的同时，处理机片上的图形核心的执行单元的数量翻一番，核芯显卡等部分性能有了一倍以上的提升",
    "id": 1651,
    "label": [
      {
        "start": 105,
        "end": 109,
        "text": "核芯显卡",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 94,
        "end": 98,
        "text": "执行单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "晶体管",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "晶体管",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2400,
    "created_at": "2024-07-21T08:37:22.104985Z",
    "updated_at": "2024-07-21T08:37:22.104985Z",
    "lead_time": 104.157
  },
  {
    "text": "制造工艺的改进带来更小的核心面积、更低的功耗以及更加容易控制的发热量",
    "id": 1652,
    "annotator": 1,
    "annotation_id": 2401,
    "created_at": "2024-07-21T08:37:25.856771Z",
    "updated_at": "2024-07-21T08:37:25.856771Z",
    "lead_time": 3.023
  },
  {
    "text": "酷睿多核处理机的整体结构IvyBridge微架构处理机由处理核心、三级cache、图形核心、内存控制器、系统助手systemagent、显示控制器、显示接口、PCIEIO控制器、DMI总线控制器等众多模块整合而成",
    "id": 1653,
    "label": [
      {
        "start": 89,
        "end": 97,
        "text": "DMI总线控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 73,
        "text": "显示控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 79,
        "end": 83,
        "text": "PCIE",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 78,
        "text": "接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 83,
        "end": 88,
        "text": "IO控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "内存控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "处理核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2402,
    "created_at": "2024-07-21T08:39:18.040193Z",
    "updated_at": "2024-07-21T08:39:18.040193Z",
    "lead_time": 111.586
  },
  {
    "text": "IvyBridge微架构处理机采用模块化设计，有很强的可扩展性，支持多种不同主处理机核心数、不同性能的图形核心和cache容量的组合配置",
    "id": 1654,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 61,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 44,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2403,
    "created_at": "2024-07-21T08:39:30.620971Z",
    "updated_at": "2024-07-21T08:39:30.620971Z",
    "lead_time": 11.953
  },
  {
    "text": "从SandyBridge微架构开始，每个处理机内部处理除了中央处理机核之外，还集成了图形处理单元GPU核",
    "id": 1655,
    "label": [
      {
        "start": 48,
        "end": 52,
        "text": "GPU核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 35,
        "text": "中央处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2404,
    "created_at": "2024-07-21T08:39:45.515955Z",
    "updated_at": "2024-07-21T08:39:45.515955Z",
    "lead_time": 14.45
  },
  {
    "text": "这种与中央处理机封装在同一芯片上的图形处理单元又称为核芯显卡",
    "id": 1656,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "核芯显卡",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "中央处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2405,
    "created_at": "2024-07-21T08:40:27.999770Z",
    "updated_at": "2024-07-21T08:40:27.999770Z",
    "lead_time": 41.948
  },
  {
    "text": "SandyBridge和IvyBridge处理机上的处理机核和图形处理核采用完全融合的方式，在同一块晶圆中分别划分出CPU区域和GPU区域，CPU和GPU各自承担数据处理与图形处理任务",
    "id": 1657,
    "label": [
      {
        "start": 31,
        "end": 36,
        "text": "图形处理核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 70,
        "end": 73,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2406,
    "created_at": "2024-07-21T08:42:30.080459Z",
    "updated_at": "2024-07-21T08:42:30.080459Z",
    "lead_time": 121.483
  },
  {
    "text": "这种整合设计大大降低了处理机核、图形处理核、内存及内存控制器间的数据周转时间，可有效提升处理效能并大幅降低芯片组的整体功耗",
    "id": 1658,
    "label": [
      {
        "start": 53,
        "end": 55,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "图形处理核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "内存控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 38,
        "text": "数据周转时间",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2407,
    "created_at": "2024-07-21T08:42:41.322879Z",
    "updated_at": "2024-07-21T08:42:41.322879Z",
    "lead_time": 10.26
  },
  {
    "text": "在IvyBridge系列处理机中包含了两种集成GPU核：GT和GT",
    "id": 1659,
    "label": [
      {
        "start": 1,
        "end": 12,
        "text": "IvyBridge系列",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "GPU核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2408,
    "created_at": "2024-07-21T08:43:09.871513Z",
    "updated_at": "2024-07-21T08:43:09.871513Z",
    "lead_time": 27.902
  },
  {
    "text": "GT有个执行单元executionunit，EU和个算术逻辑单元ALU及一个纹理单元",
    "id": 1660,
    "label": [
      {
        "start": 38,
        "end": 42,
        "text": "纹理单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "执行单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "ALU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "算术逻辑单元",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2409,
    "created_at": "2024-07-21T08:43:32.446051Z",
    "updated_at": "2024-07-21T08:43:32.446051Z",
    "lead_time": 21.914
  },
  {
    "text": "GT有个执行单元、个ALU和个纹理单元",
    "id": 1661,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "执行单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "纹理单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "ALU",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2410,
    "created_at": "2024-07-21T08:43:36.309801Z",
    "updated_at": "2024-07-21T08:43:36.309801Z",
    "lead_time": 3.168
  },
  {
    "text": "处理机内的各个CPU核之外还集成了最后一级cachelastlevelCache，LLC，即与主存储器直接相连的Lcache",
    "id": 1662,
    "label": [
      {
        "start": 47,
        "end": 51,
        "text": "主存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "CPU核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2411,
    "created_at": "2024-07-21T08:43:51.425173Z",
    "updated_at": "2024-07-21T08:43:51.425173Z",
    "lead_time": 14.517
  },
  {
    "text": "目前发布的IvyBridge微架构有种设计版本：个中央处理机核心MB缓存GT图形核心；个中央处理机核心MB缓存GT图形核心；个中央处理机核心MB缓存GT图形核心；个中央处理机核心MB缓存GT图形核心",
    "id": 1663,
    "label": [
      {
        "start": 32,
        "end": 34,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 17,
        "text": "IvyBridge微架构",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 25,
        "end": 32,
        "text": "中央处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "图形核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 51,
        "text": "中央处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "图形核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 70,
        "text": "中央处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "缓存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "缓存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "缓存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 80,
        "text": "图形核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 82,
        "end": 89,
        "text": "中央处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 93,
        "text": "缓存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 95,
        "end": 99,
        "text": "图形核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2412,
    "created_at": "2024-07-21T08:47:26.183005Z",
    "updated_at": "2024-07-21T08:47:26.183005Z",
    "lead_time": 214.211
  },
  {
    "text": "图ad分别显示了IvyBridge微架构支持的四种配置",
    "id": 1664,
    "label": [
      {
        "start": 8,
        "end": 20,
        "text": "IvyBridge微架构",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2413,
    "created_at": "2024-07-21T08:47:30.092355Z",
    "updated_at": "2024-07-21T08:47:30.092355Z",
    "lead_time": 3.306
  },
  {
    "text": "酷睿多核处理机的环形总线图显示了IvyBridge四核处理机的完整体系结构",
    "id": 1665,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "酷睿",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "四核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 25,
        "text": "IvyBridge",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2414,
    "created_at": "2024-07-21T08:48:10.266912Z",
    "updated_at": "2024-07-21T08:48:10.266912Z",
    "lead_time": 39.622
  },
  {
    "text": "图中可以看出，IvyBridge微架构使用全新的环形总线ringbus结构连接各个CPU核、最后一级cache、图形处理单元GPU以及系统助手等模块",
    "id": 1666,
    "label": [
      {
        "start": 7,
        "end": 19,
        "text": "IvyBridge微架构",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 56,
        "end": 65,
        "text": "图形处理单元GPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 55,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "CPU核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2415,
    "created_at": "2024-07-21T08:48:29.914041Z",
    "updated_at": "2024-07-21T08:48:29.914041Z",
    "lead_time": 18.948
  },
  {
    "text": "系统助手从功能上类似以前的北桥芯片，但包含了更为丰富的功能，包括集成内存控制器、支持条PCIE通道的PCIE控制器、显示控制器、电源控制单元PCU以及DMI总线英特尔开发用于连接主板南北桥的总线的IO接口等",
    "id": 1667,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "北桥芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 80,
        "end": 83,
        "text": "英特尔",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 58,
        "end": 63,
        "text": "显示控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 98,
        "end": 102,
        "text": "IO接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "内存控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 57,
        "text": "PCIE控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 49,
        "text": "PCIE通道",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 70,
        "text": "电源控制单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 80,
        "text": "DMI总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 95,
        "end": 97,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2416,
    "created_at": "2024-07-21T08:49:23.344964Z",
    "updated_at": "2024-07-21T08:49:23.344964Z",
    "lead_time": 52.8
  },
  {
    "text": "环形总线由四条独立的环组成，分别是数据环dataring、请求环requestring、响应环acknowledgering和监听环snoopring",
    "id": 1668,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2417,
    "created_at": "2024-07-21T08:50:35.754245Z",
    "updated_at": "2024-07-21T08:50:35.754245Z",
    "lead_time": 71.151
  },
  {
    "text": "借助于环形总线，CPU与GPU可以共享LLCcache，从而大幅度提升GPU的性能",
    "id": 1669,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2418,
    "created_at": "2024-07-21T08:50:44.135781Z",
    "updated_at": "2024-07-21T08:50:44.135781Z",
    "lead_time": 7.825
  },
  {
    "text": "在环形总线上分布着多个环节点ringstop",
    "id": 1670,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2419,
    "created_at": "2024-07-21T08:50:48.038908Z",
    "updated_at": "2024-07-21T08:50:48.038908Z",
    "lead_time": 3.267
  },
  {
    "text": "环节点在每个CPU核、GPU核或最后一级cache上有两个连接点",
    "id": 1671,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "CPU核",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "GPU核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2420,
    "created_at": "2024-07-21T08:50:58.971055Z",
    "updated_at": "2024-07-21T08:50:58.972052Z",
    "lead_time": 10.386
  },
  {
    "text": "在以往的产品中，多个核心共享一个最后一级cache，核心需要访问cache时必须先经过流水线发送请求，再进行优先级排队后才能进行",
    "id": 1672,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "优先级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2421,
    "created_at": "2024-07-21T08:53:18.319844Z",
    "updated_at": "2024-07-21T08:53:18.319844Z",
    "lead_time": 138.799
  },
  {
    "text": "环形总线则可以大大减少核心访问最后一级cache的时间延迟",
    "id": 1673,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2422,
    "created_at": "2024-07-21T08:53:22.470994Z",
    "updated_at": "2024-07-21T08:53:22.470994Z",
    "lead_time": 3.701
  },
  {
    "text": "环形总线将最后一级cache分割成了若干部分，环形总线上的每个节点与其相邻的另两个节点采用点到点的连接方式，故环形总线是由多个子环组成的",
    "id": 1674,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2423,
    "created_at": "2024-07-21T08:53:28.455708Z",
    "updated_at": "2024-07-21T08:53:28.455708Z",
    "lead_time": 5.52
  },
  {
    "text": "借助于每个环节点，核心可以快速访问最后一级cache",
    "id": 1675,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2424,
    "created_at": "2024-07-21T08:53:32.559713Z",
    "updated_at": "2024-07-21T08:53:32.559713Z",
    "lead_time": 3.562
  },
  {
    "text": "又由于每个核心与最后一级cache之间可以实现并行访问，使得整体带宽可以显著提升",
    "id": 1676,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "带宽",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2425,
    "created_at": "2024-07-21T08:53:36.187972Z",
    "updated_at": "2024-07-21T08:53:36.187972Z",
    "lead_time": 3.234
  },
  {
    "text": "为了满足人类社会对计算性能的无止境需求，处理机内部的核心数量不断增加",
    "id": 1677,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2426,
    "created_at": "2024-07-21T08:53:39.329162Z",
    "updated_at": "2024-07-21T08:53:39.329162Z",
    "lead_time": 2.694
  },
  {
    "text": "当处理机内的核心的数量超过个时，称为众核manycore处理机",
    "id": 1678,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "众核",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2427,
    "created_at": "2024-07-21T08:54:03.934241Z",
    "updated_at": "2024-07-21T08:54:03.934241Z",
    "lead_time": 24.175
  },
  {
    "text": "年，英特尔公司发布了基于英特尔集成众核manyintegratedcore，MIC架构的至强融核XEONphi产品",
    "id": 1679,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "英特尔公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "IC",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 19,
        "text": "英特尔集成众核",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "至强融核",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2428,
    "created_at": "2024-07-21T08:54:25.269837Z",
    "updated_at": "2024-07-21T08:54:25.269837Z",
    "lead_time": 20.86
  },
  {
    "text": "英特尔集成众核处理机可作为中央处理机的协处理机工作，可通过PCIE总线连接到配置英特尔至强XEON处理机的主机上，是高度优化、高度并行的协处理机，其运算性能超过每秒一百万亿次浮点双精度持续计算",
    "id": 1680,
    "label": [
      {
        "start": 0,
        "end": 10,
        "text": "英特尔集成众核处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "中央处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "主机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 35,
        "text": "PCIE总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 40,
        "end": 52,
        "text": "英特尔至强XEON处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "协处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2429,
    "created_at": "2024-07-21T08:55:27.225957Z",
    "updated_at": "2024-07-21T08:55:27.225957Z",
    "lead_time": 61.435
  },
  {
    "text": "至强融核使用开源Linux操作系统和通用源代码，可运行完整的应用程序，用于高度并行的计算密集型负荷，采用和至强处理机一致的通用编程模型与软件工具",
    "id": 1681,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "至强融核",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "应用程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 17,
        "text": "Linux操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "计算密集型",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "至强处理机",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2430,
    "created_at": "2024-07-21T08:55:55.326059Z",
    "updated_at": "2024-07-21T08:55:55.326059Z",
    "lead_time": 27.398
  },
  {
    "text": "至强处理机与一颗或多颗至强融核处理机构成异构多处理机架构，而至强融核本身则在单芯片内集成了个处理核心向量IA内核",
    "id": 1682,
    "label": [
      {
        "start": 46,
        "end": 56,
        "text": "处理核心向量IA内核",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "至强处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "至强融核",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 22,
        "end": 28,
        "text": "多处理机架构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "至强融核处理机",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2431,
    "created_at": "2024-07-21T08:56:30.845777Z",
    "updated_at": "2024-07-21T08:56:30.846783Z",
    "lead_time": 34.824
  },
  {
    "text": "图显示了至强融核众核处理机的微架构",
    "id": 1683,
    "label": [
      {
        "start": 4,
        "end": 13,
        "text": "至强融核众核处理机",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2432,
    "created_at": "2024-07-21T09:01:09.121366Z",
    "updated_at": "2024-07-21T09:01:09.121366Z",
    "lead_time": 277.714
  },
  {
    "text": "处理机片上环形互连总线连接众多的计算核心、个支持GDDR的存储器控制器MC和个PCIE终端逻辑单元PCIeclientlogic",
    "id": 1684,
    "label": [
      {
        "start": 39,
        "end": 43,
        "text": "PCIE",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 35,
        "text": "存储器控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "PCIe",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "DDR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2433,
    "created_at": "2024-07-21T09:02:06.807101Z",
    "updated_at": "2024-07-21T09:02:06.807101Z",
    "lead_time": 57.164
  },
  {
    "text": "每个计算核心支持四个硬件线程，支持U、V两条七级指令流水线，双指令发射、按序执行，故每个时钟周期可以执行两条指令",
    "id": 1685,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "时钟周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "硬件线程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "计算核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2434,
    "created_at": "2024-07-21T09:02:44.905730Z",
    "updated_at": "2024-07-21T09:02:55.099000Z",
    "lead_time": 41.597
  },
  {
    "text": "计算核心通过环形总线接口CRI与互连总线相连",
    "id": 1686,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "计算核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2435,
    "created_at": "2024-07-21T09:03:01.330100Z",
    "updated_at": "2024-07-21T09:03:01.330100Z",
    "lead_time": 4.893
  },
  {
    "text": "环形总线接口由Lcache和分布式标签目录tagdirectoryTD组成，后者为每个核心的Lcache建立标识目录副本，从而全局监视所有核心的Lcache，确保cache一致性",
    "id": 1687,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "环形总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 81,
        "end": 89,
        "text": "cache一致性",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2436,
    "created_at": "2024-07-21T09:03:36.326845Z",
    "updated_at": "2024-07-21T09:03:36.326845Z",
    "lead_time": 34.349
  },
  {
    "text": "虽然至强融核处理机的每个计算核心的主频只有GHz，处理能力不算强大，但在运行高性能计算应用时，可以将高度并行的计算任务分解成更小的子任务，采用SIMD方式分布到众多核心中并行运行，而高速的至强处理机主机上则可运行最低限度的串行代码",
    "id": 1688,
    "label": [
      {
        "start": 71,
        "end": 75,
        "text": "SIMD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 113,
        "text": "串行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "主频",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 9,
        "text": "至强融核处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "GHz",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 94,
        "end": 99,
        "text": "至强处理机",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2437,
    "created_at": "2024-07-21T09:09:26.364185Z",
    "updated_at": "2024-07-21T09:09:26.364185Z",
    "lead_time": 349.211
  },
  {
    "text": "依靠众核架构，系统能够获得额外的性能提升",
    "id": 1689,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "众核",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2438,
    "created_at": "2024-07-21T09:10:10.374731Z",
    "updated_at": "2024-07-21T09:10:10.375731Z",
    "lead_time": 43.127
  },
  {
    "text": "龙芯Loongson号是中国科学院计算技术研究所研发的国产多核处理机系列产品，集高性能、低成本和低功耗于一身，主要面向服务器和高性能计算应用",
    "id": 1690,
    "label": [
      {
        "start": 12,
        "end": 24,
        "text": "中国科学院计算技术研究所",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2439,
    "created_at": "2024-07-21T09:11:02.754709Z",
    "updated_at": "2024-07-21T09:11:02.754709Z",
    "lead_time": 51.297
  },
  {
    "text": "龙芯号单芯片内集成多个高性能位超标量通用处理机核以及大容量Lcache，并通过高速IO接口实现多芯片互连，以组成更大规模的系统",
    "id": 1691,
    "label": [
      {
        "start": 30,
        "end": 35,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "IO接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2440,
    "created_at": "2024-07-21T09:11:29.533163Z",
    "updated_at": "2024-07-21T09:11:29.533163Z",
    "lead_time": 26.033
  },
  {
    "text": "龙芯号尤其可以满足国家安全需求",
    "id": 1692,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "龙芯号",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2441,
    "created_at": "2024-07-21T09:11:33.339784Z",
    "updated_at": "2024-07-21T09:11:33.339784Z",
    "lead_time": 3.101
  },
  {
    "text": "首台采用龙芯A处理机的万亿次高性能计算机KD于年月通过鉴定，实现了我国高性能计算机国产化的重大突破",
    "id": 1693,
    "label": [
      {
        "start": 14,
        "end": 20,
        "text": "高性能计算机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "龙芯A处理机",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2442,
    "created_at": "2024-07-21T09:11:45.217471Z",
    "updated_at": "2024-07-21T09:11:45.217471Z",
    "lead_time": 11.308
  },
  {
    "text": "龙芯A处理机的整体结构龙芯A是龙芯号多核处理机系列的第一款产品，每个处理机芯片集成颗位的四发射超标量GS高性能处理机核，最高工作主频为GHz",
    "id": 1694,
    "label": [
      {
        "start": 37,
        "end": 39,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "主频",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "龙芯A处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "龙芯A",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "龙芯号",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "多核处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "处理机核",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "GHz",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2443,
    "created_at": "2024-07-21T09:12:16.569986Z",
    "updated_at": "2024-07-21T09:12:16.569986Z",
    "lead_time": 30.671
  },
  {
    "text": "片内集成MB的分体共享Lcache由个体模块组成，每个体模块容量为MB",
    "id": 1695,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2444,
    "created_at": "2024-07-21T09:13:57.846650Z",
    "updated_at": "2024-07-21T09:13:57.846650Z",
    "lead_time": 100.522
  },
  {
    "text": "处理机内部通过目录协议维护多核及IODMA访问的cache一致性",
    "id": 1696,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "IO",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "DMA",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 32,
        "text": "cache一致性",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2445,
    "created_at": "2024-07-21T09:14:16.089063Z",
    "updated_at": "2024-07-21T09:14:16.089063Z",
    "lead_time": 17.662
  },
  {
    "text": "处理机芯片内还集成了DDRDDR存储器控制器、HyperTransportHT控制器、PCIXPCI总线控制器、LPC、UART、SPI等外围接口部件",
    "id": 1697,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "PCI",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "DDR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "SPI",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 55,
        "text": "PCI总线控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 75,
        "text": "外围接口部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2446,
    "created_at": "2024-07-21T09:14:45.923022Z",
    "updated_at": "2024-07-21T09:14:45.923022Z",
    "lead_time": 29.088
  },
  {
    "text": "图显示了龙芯A四核处理机的整体结构",
    "id": 1698,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "龙芯A",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "四核处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2447,
    "created_at": "2024-07-21T09:14:57.354475Z",
    "updated_at": "2024-07-21T09:14:57.354475Z",
    "lead_time": 10.789
  },
  {
    "text": "每个处理机有两级AXI交叉开关",
    "id": 1699,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2448,
    "created_at": "2024-07-21T09:15:02.092454Z",
    "updated_at": "2024-07-21T09:15:02.092454Z",
    "lead_time": 4.213
  },
  {
    "text": "第一级互连采用的AXI交叉开关XSwitch，连接P、P、P和P四个处理机核心作为主设备，统一编址的S、S、S和S四个Lcache模块作为从设备，以及两个IO端口每个端口使用一个主端口和一个从端口",
    "id": 1700,
    "label": [
      {
        "start": 60,
        "end": 65,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 77,
        "end": 81,
        "text": "IO端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "从设备",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "主设备",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "统一编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 83,
        "end": 85,
        "text": "端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 92,
        "text": "主端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 95,
        "end": 98,
        "text": "从端口",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2449,
    "created_at": "2024-07-21T09:15:26.090479Z",
    "updated_at": "2024-07-21T09:15:26.090479Z",
    "lead_time": 23.472
  },
  {
    "text": "每个IO端口通过一个DMA控制器连接一个位的HT控制器每个位的HT端口可以拆分成两个位的HT端口使用",
    "id": 1701,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "DMA控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "IO端口",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2450,
    "created_at": "2024-07-21T09:15:40.873631Z",
    "updated_at": "2024-07-21T09:15:40.873631Z",
    "lead_time": 14.191
  },
  {
    "text": "第二级互连采用的交叉开关XSwitch，连接四个Lcache第章并行组织与结构模块、两个DDR存储器控制器MC和IO接口包括PCI、LPC、SPI等以及芯片内部的控制寄存器模块",
    "id": 1702,
    "label": [
      {
        "start": 47,
        "end": 50,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 81,
        "end": 86,
        "text": "控制寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "IO接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "PCI",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "DDR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 70,
        "end": 73,
        "text": "SPI",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 78,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2451,
    "created_at": "2024-07-21T09:15:55.671153Z",
    "updated_at": "2024-07-21T09:15:55.671153Z",
    "lead_time": 14.214
  },
  {
    "text": "两级互连开关都采用读写分离的数据通道，数据通道宽度为位，工作频率与处理机核相同，用于提供高速的片上数据传输",
    "id": 1703,
    "label": [
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "数据通道宽度",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "处理机核",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2452,
    "created_at": "2024-07-21T09:16:14.789616Z",
    "updated_at": "2024-07-21T09:16:14.789616Z",
    "lead_time": 18.3
  },
  {
    "text": "龙芯号的GS处理机核心GS是一款实现位MIPS指令系统及龙芯扩展指令系统的通用RISC处理机IP核",
    "id": 1704,
    "label": [
      {
        "start": 39,
        "end": 46,
        "text": "RISC处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "龙芯号",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "MIPS",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "指令系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2453,
    "created_at": "2024-07-21T09:16:47.908957Z",
    "updated_at": "2024-07-21T09:16:47.908957Z",
    "lead_time": 32.469
  },
  {
    "text": "GS有两个定点运算部件、两个浮点运算部件和一个访存部件",
    "id": 1705,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "访存部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "浮点运算部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 11,
        "text": "定点运算部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2454,
    "created_at": "2024-07-21T09:17:01.585500Z",
    "updated_at": "2024-07-21T09:17:01.585500Z",
    "lead_time": 13.081
  },
  {
    "text": "每个浮点部件都可以全流水地执行位双精度浮点乘加操作",
    "id": 1706,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "双精度浮点",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "流水",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2455,
    "created_at": "2024-07-21T09:17:09.665448Z",
    "updated_at": "2024-07-21T09:17:09.665448Z",
    "lead_time": 7.386
  },
  {
    "text": "GS的指令流水线在每个时钟周期取四条指令进行译码，并且动态地发射到五个全流水的功能部件中",
    "id": 1707,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "时钟周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "流水",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2456,
    "created_at": "2024-07-21T09:17:26.592769Z",
    "updated_at": "2024-07-21T09:17:26.592769Z",
    "lead_time": 16.334
  },
  {
    "text": "指令按序发射，乱序执行",
    "id": 1708,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2457,
    "created_at": "2024-07-21T09:17:28.657203Z",
    "updated_at": "2024-07-21T09:17:28.657203Z",
    "lead_time": 1.519
  },
  {
    "text": "GS的基本结构如图所示",
    "id": 1709,
    "annotator": 1,
    "annotation_id": 2458,
    "created_at": "2024-07-21T09:17:31.237800Z",
    "updated_at": "2024-07-21T09:17:31.237800Z",
    "lead_time": 1.905
  },
  {
    "text": "GS的基本流水线包括取指、预译码、译码、寄存器重命名、调度、发射、读寄存器、执行、提交等级，各个流水级的功能如下",
    "id": 1710,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "取指",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "预译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "流水级",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2459,
    "created_at": "2024-07-21T09:17:51.829488Z",
    "updated_at": "2024-07-21T09:17:51.829488Z",
    "lead_time": 18.892
  },
  {
    "text": "取指流水级：根据程序计数器PC的值访问指令cache和指令TLB，如果指令cache和指令TLB都命中，则把四条新的指令取到指令寄存器IR中",
    "id": 1711,
    "label": [
      {
        "start": 62,
        "end": 67,
        "text": "指令寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 15,
        "text": "程序计数器PC",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 26,
        "text": "指令cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "IR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "指令TLB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 42,
        "text": "指令cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "指令TLB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "取指流水级",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2460,
    "created_at": "2024-07-21T09:18:19.039155Z",
    "updated_at": "2024-07-21T09:18:26.341616Z",
    "lead_time": 29.939999999999998
  },
  {
    "text": "预译码流水级：主要对转移指令进行译码并预测跳转的方向",
    "id": 1712,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "预译码流水级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "转移指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "译码",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2461,
    "created_at": "2024-07-21T09:18:33.819164Z",
    "updated_at": "2024-07-21T09:18:33.819164Z",
    "lead_time": 5.566
  },
  {
    "text": "译码流水级：把IR中的四条指令转换成GS内部指令格式送往寄存器重命名模块",
    "id": 1713,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "指令格式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "IR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "译码流水级",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2462,
    "created_at": "2024-07-21T09:18:45.940466Z",
    "updated_at": "2024-07-21T09:18:45.940466Z",
    "lead_time": 11.46
  },
  {
    "text": "寄存器重命名流水级：为逻辑目标寄存器分配新的物理寄存器，并将逻辑源寄存器映射到最近分配给该逻辑寄存器的物理寄存器",
    "id": 1714,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "目标寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "源寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 9,
        "text": "寄存器重命名流水级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "物理寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 50,
        "text": "逻辑寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 56,
        "text": "物理寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2463,
    "created_at": "2024-07-21T09:19:04.377514Z",
    "updated_at": "2024-07-21T09:19:04.377514Z",
    "lead_time": 17.778
  },
  {
    "text": "调度流水级：将重命名的指令分配到定点或浮点保留站中等待执行，同时送到重排序队列中用于执行后的顺序提交；此外，转移指令和访存指令还分别被送往转移队列和访存队列",
    "id": 1715,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "调度流水级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "访存指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "转移指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "队列",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "定点",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2464,
    "created_at": "2024-07-21T09:19:16.422524Z",
    "updated_at": "2024-07-21T09:19:16.422524Z",
    "lead_time": 11.337
  },
  {
    "text": "发射流水级：从定点或浮点保留站中为每个功能部件选出一条所有操作数都准备好的指令；在重命名时操作数没准备好的指令将等待其操作数准备好",
    "id": 1716,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "发射流水级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "定点",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "操作数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2465,
    "created_at": "2024-07-21T09:19:31.108480Z",
    "updated_at": "2024-07-21T09:19:31.108480Z",
    "lead_time": 14.134
  },
  {
    "text": "读寄存器流水级：为发射的指令从物理寄存器堆中读取相应的源操作数送到相应的功能部件",
    "id": 1717,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "源操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "寄存器堆",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "读寄存器流水级",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2466,
    "created_at": "2024-07-21T09:19:45.621623Z",
    "updated_at": "2024-07-21T09:19:45.621623Z",
    "lead_time": 13.886
  },
  {
    "text": "执行流水级：根据指令的类型执行指令并把计算结果写回寄存器堆",
    "id": 1718,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "寄存器堆",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "执行流水级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2467,
    "created_at": "2024-07-21T09:19:51.165423Z",
    "updated_at": "2024-07-21T09:19:57.159421Z",
    "lead_time": 9.195
  },
  {
    "text": "提交流水级：按照重排序队列记录的指令顺序提交已经执行完的指令，GS最多每拍可以提交四条指令",
    "id": 1719,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "队列",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "提交流水级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2468,
    "created_at": "2024-07-21T09:20:09.884649Z",
    "updated_at": "2024-07-21T09:20:09.884649Z",
    "lead_time": 11.338
  },
  {
    "text": "GS的Lcache由KB的指令cache和KB的数据cache组成，均采用四路组相联结构",
    "id": 1720,
    "label": [
      {
        "start": 24,
        "end": 31,
        "text": "数据cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 20,
        "text": "指令cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "四路组相联",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2469,
    "created_at": "2024-07-21T09:20:24.601886Z",
    "updated_at": "2024-07-21T09:20:24.601886Z",
    "lead_time": 14.191
  },
  {
    "text": "GS的TLB有项，采用全相联结构",
    "id": 1721,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "全相联结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "TLB",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2470,
    "created_at": "2024-07-21T09:20:27.728128Z",
    "updated_at": "2024-07-21T09:20:27.728128Z",
    "lead_time": 2.52
  },
  {
    "text": "GS支持位的访存操作，其虚地址和物理地址均为位",
    "id": 1722,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2471,
    "created_at": "2024-07-21T09:20:30.963544Z",
    "updated_at": "2024-07-21T09:20:30.963544Z",
    "lead_time": 2.74
  },
  {
    "text": "龙芯A处理机的互连结构龙芯A采用可扩展的互连结构，片内二维Mesh网络利用AXI交叉开关进行片内核间互连，片间通过HT接口进行可伸缩互连，构建多处理机系统",
    "id": 1723,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "龙芯A",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "接口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "龙芯A处理机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 71,
        "end": 77,
        "text": "多处理机系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2472,
    "created_at": "2024-07-21T09:20:45.763478Z",
    "updated_at": "2024-07-21T09:20:45.763478Z",
    "lead_time": 14.342
  },
  {
    "text": "图显示了四颗龙芯A处理机构成的Mesh网络结构",
    "id": 1724,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "龙芯A处理机",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2473,
    "created_at": "2024-07-22T07:06:08.462532Z",
    "updated_at": "2024-07-22T07:06:08.462532Z",
    "lead_time": 9.107
  },
  {
    "text": "系统由个处理机核心构成",
    "id": 1725,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "处理机核心",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2474,
    "created_at": "2024-07-22T07:06:43.811610Z",
    "updated_at": "2024-07-22T07:06:43.811610Z",
    "lead_time": 28.267
  },
  {
    "text": "全系统统一编址，硬件自动维护各处理机间的数据一致性",
    "id": 1726,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "统一编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "数据一致性",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2475,
    "created_at": "2024-07-22T07:09:13.835010Z",
    "updated_at": "2024-07-22T07:09:13.835010Z",
    "lead_time": 149.476
  },
  {
    "text": "互连系统的物理实现对软件透明，不同配置的系统可以运行相同的操作系统",
    "id": 1727,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2476,
    "created_at": "2024-07-22T07:09:18.849333Z",
    "updated_at": "2024-07-22T07:09:18.849333Z",
    "lead_time": 4.325
  },
  {
    "text": "本章小结并行性是指计算机系统具有同时进行运算或操作的特性，它包括同时性两个以上事件在同一时刻发生与并发性两个以上事件在同一时间间隔内发生两种含义",
    "id": 1728,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "并行性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "并发性",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2477,
    "created_at": "2024-07-22T07:10:05.444768Z",
    "updated_at": "2024-07-22T07:10:05.444768Z",
    "lead_time": 45.809
  },
  {
    "text": "并行性的种技术是：时间并行时间重叠；空间并行资源重复；时间并行空间并行；资源共享软件方法",
    "id": 1729,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "并行性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2478,
    "created_at": "2024-07-22T07:12:57.508189Z",
    "updated_at": "2024-07-22T07:12:57.508189Z",
    "lead_time": 170.724
  },
  {
    "text": "Flynn将计算机体系结构分为SISD、SIMD、MISD和MIMD四种类型",
    "id": 1730,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "SISD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "SIMD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "MISD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "MIMD",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2479,
    "created_at": "2024-07-22T07:14:39.993582Z",
    "updated_at": "2024-07-22T07:14:39.993582Z",
    "lead_time": 101.464
  },
  {
    "text": "虽然MISD没有实际机器，但是四种类型的分类方法确实纲目清晰，有利于认识计算机系统的总体结构",
    "id": 1731,
    "label": [
      {
        "start": 36,
        "end": 41,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "MISD",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2480,
    "created_at": "2024-07-22T07:14:47.707259Z",
    "updated_at": "2024-07-22T07:14:47.707259Z",
    "lead_time": 7.008
  },
  {
    "text": "传统单处理机依靠超标量技术和超长指令字技术提高指令级并行性，而多线程技术和超线程技术则把重点放在线程级并行性上，在处理机内部增加少量部件，将一个物理处理机模拟成多个逻辑处理机，从而减少访存延迟造成的执行部件浪费，提高处理机内部资源的使用率",
    "id": 1732,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "单处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 82,
        "end": 87,
        "text": "逻辑处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "超标量技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 21,
        "text": "超长指令字技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "并行性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "多线程技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "超线程技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 54,
        "text": "线程级并行性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 77,
        "text": "物理处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 108,
        "end": 111,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2481,
    "created_at": "2024-07-22T07:15:20.841202Z",
    "updated_at": "2024-07-22T07:15:20.841202Z",
    "lead_time": 32.504
  },
  {
    "text": "多处理机属于MIMD结构，是传统上为提高作业级或任务级并行性所采用的并行体系结构",
    "id": 1733,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "MIMD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "并行性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "多处理机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2482,
    "created_at": "2024-07-22T07:15:31.311404Z",
    "updated_at": "2024-07-22T07:15:37.676748Z",
    "lead_time": 13.68
  },
  {
    "text": "计算机的分类电子计算机从总体上来说分为两大类：电子模拟计算机特点是数值由连续量来表示，运算过程也是连续的",
    "id": 1734,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "电子计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 30,
        "text": "电子模拟计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2483,
    "created_at": "2024-07-22T07:15:43.756442Z",
    "updated_at": "2024-07-22T07:15:43.756442Z",
    "lead_time": 4.438
  },
  {
    "text": "电子数字计算机主要特点是按位运算，并且不连续地跳动计算",
    "id": 1735,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "电子数字计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2484,
    "created_at": "2024-07-22T07:19:29.229834Z",
    "updated_at": "2024-07-22T07:19:29.229834Z",
    "lead_time": 224.827
  },
  {
    "text": "年完成的我国自行研制的模拟计算机红旗，慈云桂年，我国自行设计的第一台电子数字计算机机中科院计算机夏培肃领导研制她也是我国计算机事业的奠基者现在计算机中的一些术语和专业名词都是她翻译的",
    "id": 1736,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "慈云桂",
        "labels": [
          "PER"
        ]
      },
      {
        "start": 42,
        "end": 48,
        "text": "中科院计算机",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "夏培肃",
        "labels": [
          "PER"
        ]
      },
      {
        "start": 34,
        "end": 41,
        "text": "电子数字计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2485,
    "created_at": "2024-07-22T07:20:00.568420Z",
    "updated_at": "2024-07-22T07:20:00.568420Z",
    "lead_time": 30.7
  },
  {
    "text": "中国计算机之母计算机的分类根据性能、经济性和适应性，可以划分为两类：专用计算机：专用机是最有效、最经济和最快速的计算机，但是它的适应性很差",
    "id": 1737,
    "label": [
      {
        "start": 34,
        "end": 39,
        "text": "专用计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2486,
    "created_at": "2024-07-22T07:20:09.612845Z",
    "updated_at": "2024-07-22T07:20:09.612845Z",
    "lead_time": 8.144
  },
  {
    "text": "通用计算机：通用计算机适应性很大，但是牺牲了效率、速度和经济性",
    "id": 1738,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "通用计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "通用计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2487,
    "created_at": "2024-07-22T07:20:17.794914Z",
    "updated_at": "2024-07-22T07:20:17.794914Z",
    "lead_time": 7.093
  },
  {
    "text": "通用计算机分类可以分为：超级计算机大型机服务器工作站微型机单片机区别在于：体积、简易性、功耗、性能指标、数据存储容量、指令系统规模和机器价格等计算机发展简史计算机的五代变化年，电子管计算机：数据处理年，晶体管计算机：工业控制年，中小规模集成电路计算机：小型计算机年，大规模和超大规模集成电路计算机：微型计算机年至今，甚大规模集成电路计算机：单片机半导体存储器的发展世纪年代，所有计算机存储器都是由微小的铁磁体环构成年，仙童半导体公司生产出了第一个较大容量半导体存储器从年起，半导体存储器经历了若干代：单个芯片KBMBGB",
    "id": 1739,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "超级计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 26,
        "text": "大型机服务器工作站",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "微型机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "单片机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 173,
        "end": 179,
        "text": "半导体存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 209,
        "end": 216,
        "text": "仙童半导体公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 173,
        "end": 179,
        "text": "半导体存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "通用计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "存储容量",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "性能指标",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "指令系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 252,
        "end": 254,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 256,
        "end": 258,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 254,
        "end": 256,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 258,
        "end": 260,
        "text": "GB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 78,
        "end": 81,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 94,
        "text": "电子管计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 101,
        "end": 107,
        "text": "晶体管计算机",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 114,
        "end": 125,
        "text": "中小规模集成电路计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 137,
        "end": 148,
        "text": "超大规模集成电路计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 149,
        "end": 154,
        "text": "微型计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 159,
        "end": 169,
        "text": "大规模集成电路计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 170,
        "end": 173,
        "text": "单片机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 189,
        "end": 192,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 192,
        "end": 195,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 227,
        "end": 233,
        "text": "半导体存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 237,
        "end": 243,
        "text": "半导体存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2488,
    "created_at": "2024-07-22T07:22:51.761076Z",
    "updated_at": "2024-07-22T07:22:51.761076Z",
    "lead_time": 152.83
  },
  {
    "text": "其中KMKGMbit表示个二进制位，Bbit规范的二进制位计数：KiMiGi微处理器的发展年Intel公司开发出",
    "id": 1740,
    "label": [
      {
        "start": 46,
        "end": 53,
        "text": "Intel公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "微处理器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "bit",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "二进制位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "二进制位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2489,
    "created_at": "2024-07-22T07:23:11.446276Z",
    "updated_at": "2024-07-22T07:23:11.446276Z",
    "lead_time": 18.43
  },
  {
    "text": "年出现的，这是第一个位微处理器年出现了，这是第一个通用微处理器",
    "id": 1741,
    "label": [
      {
        "start": 25,
        "end": 31,
        "text": "通用微处理器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "微处理器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2490,
    "created_at": "2024-07-22T07:23:19.043137Z",
    "updated_at": "2024-07-22T07:23:19.044137Z",
    "lead_time": 6.547
  },
  {
    "text": "TOPS描述芯片MACMultiplyAccumulate，乘积累加运算的运算能力，并没有指定数据类型，具体算力评估需要结合数据类型及精度",
    "id": 1742,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2491,
    "created_at": "2024-07-22T07:23:25.641801Z",
    "updated_at": "2024-07-22T07:23:25.641801Z",
    "lead_time": 5.663
  },
  {
    "text": "MAC运算包括相乘和相加aabc",
    "id": 1743,
    "annotator": 1,
    "annotation_id": 2492,
    "created_at": "2024-07-22T07:24:45.958285Z",
    "updated_at": "2024-07-22T07:24:45.958285Z",
    "lead_time": 79.383
  },
  {
    "text": "对于卷积、点积、矩阵等运算而言，MAC指令可以大幅提高运算效率",
    "id": 1744,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "MAC指令",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2493,
    "created_at": "2024-07-22T07:24:58.573375Z",
    "updated_at": "2024-07-22T07:24:58.573375Z",
    "lead_time": 11.762
  },
  {
    "text": "TOPS计算公式：理论峰值MAC矩阵行MAC矩阵列主频现代GPU集群极度耗电",
    "id": 1745,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "主频",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2494,
    "created_at": "2024-07-22T07:25:46.457103Z",
    "updated_at": "2024-07-22T07:25:46.457103Z",
    "lead_time": 47.001
  },
  {
    "text": "GPT在训练过程中使用了约GWh的能量",
    "id": 1746,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "GPT",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2495,
    "created_at": "2024-07-22T07:25:58.737149Z",
    "updated_at": "2024-07-22T07:25:58.737149Z",
    "lead_time": 11.593
  },
  {
    "text": "相当于辆普通汽车环绕地球次",
    "id": 1747,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "普通汽车",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2496,
    "created_at": "2024-07-22T07:26:01.847855Z",
    "updated_at": "2024-07-22T07:26:01.847855Z",
    "lead_time": 2.307
  },
  {
    "text": "谷歌表示一次搜索使用瓦时，而与谷歌搜索相比，GoogleGPT使用的能量大约是谷歌搜索的四倍",
    "id": 1748,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "谷歌",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "谷歌搜索",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "谷歌搜索",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2497,
    "created_at": "2024-07-22T07:27:45.218095Z",
    "updated_at": "2024-07-22T07:27:45.218095Z",
    "lead_time": 102.236
  },
  {
    "text": "SM（StreamingMultiprocessors）称为流式多处理器，是NVIDIAGPU的基本构建模块",
    "id": 1749,
    "label": [
      {
        "start": 30,
        "end": 36,
        "text": "流式多处理器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 44,
        "text": "NVIDIA",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2498,
    "created_at": "2024-07-22T07:28:33.411982Z",
    "updated_at": "2024-07-22T07:28:33.411982Z",
    "lead_time": 47.465
  },
  {
    "text": "解：将进制数展开后，可得二制数格式为指数e阶码包括隐藏位的尾数M于是xSMe浮点数的表示方法例将数转换成标准的位浮点数的二进制存储格式（进制表示）",
    "id": 1750,
    "label": [
      {
        "start": 60,
        "end": 63,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2499,
    "created_at": "2024-07-22T07:29:17.010198Z",
    "updated_at": "2024-07-22T07:29:17.010198Z",
    "lead_time": 42.407
  },
  {
    "text": "解首先分别将整数和分数部分转换成二进制数：规格化，尾数右移位e，于是得到：SEM最后得到位浮点数的二进制存储格式为：AC真值的机器数（机器零）阶码E，尾数M正：S，负：S非规格化浮点数：阶码E，尾数M规格化浮点数：阶码E（）无穷大的机器数阶码E全（），尾数M：S，：SNaN（notanumber，不是一个数）阶码E全（），尾数M用来通知异常情况IEEE标准位单精度浮点数单精度IEEE浮点数区间EEEMMMM规格化浮点数的范围正或负正负无穷大NaN非规格化数浮点数的表示范围浮点数所表示的范围远比定点数大一般计算机中同时采用定点、浮点表示",
    "id": 1751,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "规格化",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 266,
        "end": 270,
        "text": "浮点表示",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 255,
        "end": 258,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 249,
        "end": 252,
        "text": "定点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "机器零",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 85,
        "end": 92,
        "text": "非规格化浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 97,
        "end": 99,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 93,
        "end": 95,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 100,
        "end": 106,
        "text": "规格化浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 107,
        "end": 109,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 116,
        "end": 119,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 119,
        "end": 121,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 128,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 155,
        "end": 157,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 162,
        "end": 164,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 180,
        "end": 186,
        "text": "单精度浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 193,
        "end": 196,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 205,
        "end": 211,
        "text": "规格化浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 238,
        "end": 241,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 230,
        "end": 233,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2500,
    "created_at": "2024-07-22T07:36:01.462576Z",
    "updated_at": "2024-07-22T07:36:17.018537Z",
    "lead_time": 414.243
  },
  {
    "text": "单片机中多采用定点表示",
    "id": 1752,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "单片机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "定点",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2501,
    "created_at": "2024-07-22T07:37:39.730492Z",
    "updated_at": "2024-07-22T07:37:39.730492Z",
    "lead_time": 78.235
  },
  {
    "text": "IEEE单精度在线转换httpswwwhschmidtnetFloatConverterIEEEhtml十进制数串的表示方法有时十进制数在计算机中需要以十进制的方式进行运算，需要对十进制进行编码二十进制编码（BCD码）每个十进制符号由位二进制数表示有权码名称表示每一位的位权（、、、）每位的数码与相应的位权相乘，再求和，得到它所代表的十进制数码表示：数的机器码表示一般书写表示的数，称为真值计算机中表示的数，称为机器数在计算机中，为了妥善的处理好符号位问题，主要是负数的运算问题，引入种表示方法：原码、补码、反码、移码",
    "id": 1753,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "单精度",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 206,
        "end": 209,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 108,
        "text": "BCD码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 118,
        "end": 121,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 223,
        "end": 226,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 177,
        "end": 180,
        "text": "机器码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 193,
        "end": 195,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 254,
        "end": 256,
        "text": "反码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 248,
        "end": 250,
        "text": "原码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 95,
        "end": 97,
        "text": "编码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 257,
        "end": 259,
        "text": "移码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 251,
        "end": 253,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 117,
        "end": 118,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 79,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 97,
        "end": 103,
        "text": "二十进制编码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 167,
        "end": 170,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 210,
        "end": 213,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 195,
        "end": 198,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2502,
    "created_at": "2024-07-22T07:38:19.135563Z",
    "updated_at": "2024-07-22T07:38:19.135563Z",
    "lead_time": 38.375
  },
  {
    "text": "原码表示法定点整数的原码形式为xnxnxx字长位：X，则X原X，则X原使用原码有两种表达形式原原原码表示法特点：表示简单，易于同真值之间进行转换，实现乘除运算简单",
    "id": 1754,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "原码表示法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "定点整数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "原码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "原码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "原码表示法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2503,
    "created_at": "2024-07-22T07:39:40.542346Z",
    "updated_at": "2024-07-22T07:39:40.542346Z",
    "lead_time": 79.834
  },
  {
    "text": "进行减法运算麻烦",
    "id": 1755,
    "annotator": 1,
    "annotation_id": 2504,
    "created_at": "2024-07-22T07:40:46.302579Z",
    "updated_at": "2024-07-22T07:40:46.302579Z",
    "lead_time": 63.992
  },
  {
    "text": "要比较绝对值的大小，然后绝对值大的数减去绝对值小数，最后给结果选择符号",
    "id": 1756,
    "annotator": 1,
    "annotation_id": 2505,
    "created_at": "2024-07-22T07:40:50.039064Z",
    "updated_at": "2024-07-22T07:40:50.039064Z",
    "lead_time": 3.046
  },
  {
    "text": "为了解决这些矛盾，找到了补码表示法",
    "id": 1757,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "补码表示法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2506,
    "created_at": "2024-07-22T07:40:53.181987Z",
    "updated_at": "2024-07-22T07:40:53.181987Z",
    "lead_time": 2.069
  },
  {
    "text": "写成运算表达式，则为其中符号表示对补作包括符号位在内的求反操作例设字长位，已知求：补补补补",
    "id": 1758,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2507,
    "created_at": "2024-07-22T07:41:11.691579Z",
    "updated_at": "2024-07-22T07:41:11.691579Z",
    "lead_time": 17.408
  },
  {
    "text": "解补补补补补补例设字长位，求",
    "id": 1759,
    "annotator": 1,
    "annotation_id": 2508,
    "created_at": "2024-07-22T07:41:18.176255Z",
    "updated_at": "2024-07-22T07:41:18.176255Z",
    "lead_time": 5.781
  },
  {
    "text": "解补补补补补补所以练习设字长位，求",
    "id": 1760,
    "annotator": 1,
    "annotation_id": 2509,
    "created_at": "2024-07-22T07:41:21.811696Z",
    "updated_at": "2024-07-22T07:41:21.811696Z",
    "lead_time": 2.834
  },
  {
    "text": "解补补补补补补所以例求",
    "id": 1761,
    "annotator": 1,
    "annotation_id": 2510,
    "created_at": "2024-07-22T07:41:24.667610Z",
    "updated_at": "2024-07-22T07:41:24.667610Z",
    "lead_time": 1.802
  },
  {
    "text": "解补补补补补两个正数相加的结果成为负数这显然是错误的",
    "id": 1762,
    "annotator": 1,
    "annotation_id": 2511,
    "created_at": "2024-07-22T07:41:29.441263Z",
    "updated_at": "2024-07-22T07:41:29.441263Z",
    "lead_time": 3.653
  },
  {
    "text": "例求",
    "id": 1763,
    "annotator": 1,
    "annotation_id": 2512,
    "created_at": "2024-07-22T07:43:37.349228Z",
    "updated_at": "2024-07-22T07:43:37.350232Z",
    "lead_time": 126.899
  },
  {
    "text": "解补补补补补两个负数相加的结果成为正数这同样是错误的",
    "id": 1764,
    "annotator": 1,
    "annotation_id": 2513,
    "created_at": "2024-07-22T07:43:40.599571Z",
    "updated_at": "2024-07-22T07:43:40.599571Z",
    "lead_time": 2.553
  },
  {
    "text": "溢出的概念与检测方法溢出的概念与检测方法溢出的检测方法单符号位法和双符号位法双符号位法：用两个符号位表示一个数据，也称为“变形补码”两个符号位一样参与运算最高符号位产生的进位要丢弃溢出的概念与检测方法用双符号位法检测溢出结果的两个符号位一致则没有溢出如果两个符号位不一致则发生溢出判断溢出的逻辑表达式为VSfSf可以用异或门来实现溢出的概念与检测方法二、检验举例：求求结果出现了或的情况就为溢出例设字长位求",
    "id": 1765,
    "label": [
      {
        "start": 27,
        "end": 32,
        "text": "单符号位法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "溢出",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "双符号位法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 145,
        "end": 150,
        "text": "逻辑表达式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "变形补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 159,
        "end": 162,
        "text": "异或门",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "双符号位法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 90,
        "end": 92,
        "text": "溢出",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 101,
        "end": 106,
        "text": "双符号位法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 108,
        "end": 110,
        "text": "溢出",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 123,
        "end": 125,
        "text": "溢出",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 138,
        "end": 142,
        "text": "溢出判断",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 142,
        "end": 144,
        "text": "溢出",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 165,
        "end": 167,
        "text": "溢出",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 195,
        "end": 197,
        "text": "溢出",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2514,
    "created_at": "2024-07-22T07:44:42.057272Z",
    "updated_at": "2024-07-22T07:44:42.057272Z",
    "lead_time": 60.795
  },
  {
    "text": "多模块交叉存储器设存储器由M个的独立的存储模块组成，每个模块有相同的容量和存取速度存储模块就是存储芯片存储器地址的编排方式：顺序方式和交叉方式",
    "id": 1766,
    "label": [
      {
        "start": 47,
        "end": 51,
        "text": "存储芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "交叉存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "存取速度",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2515,
    "created_at": "2024-07-22T07:50:54.150623Z",
    "updated_at": "2024-07-22T07:50:54.150623Z",
    "lead_time": 371.305
  },
  {
    "text": "顺序方式：地址按顺序分配给一个模块后，又按顺序为下个模块分配内存地址模块bit字bitMMMM数据总线顺序方式位地址：高位选模块，低位选块内地址故障隔离扩充容量比较方便连续地址单元在同一个模块，各模块串行工作带宽没有提升多模块交叉存储器交叉方式：两个相邻地址的物理单元不属于同一个存储模块，一般在相邻的存储模块中；同一个存储模块内的地址都不连续",
    "id": 1767,
    "label": [
      {
        "start": 86,
        "end": 90,
        "text": "地址单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 140,
        "end": 144,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "bit",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 100,
        "end": 102,
        "text": "串行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 106,
        "text": "带宽",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 130,
        "end": 134,
        "text": "物理单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 151,
        "end": 155,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 160,
        "end": 164,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 118,
        "text": "多模块交叉存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "内存地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2516,
    "created_at": "2024-07-22T07:53:49.066080Z",
    "updated_at": "2024-07-22T07:53:49.066080Z",
    "lead_time": 174.167
  },
  {
    "text": "内存地址模块bit字bitMMMM数据总线交叉方式位地址：高位选块内地址，低位选模块连续地址单元在不同同模块，各模块并行工作存储对齐（软件）交叉编址（硬件）可以系统运行速度并行存储器地址总线ABUSMMMM单字长数据总线DBUS交叉编址ARARARARCPU每个模块独立工作各模块分时使用数据总线进行信息传递",
    "id": 1768,
    "label": [
      {
        "start": 70,
        "end": 74,
        "text": "交叉编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "内存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 95,
        "text": "地址总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 129,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "bit",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 106,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "地址单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 144,
        "end": 148,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 86,
        "end": 91,
        "text": "并行存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 114,
        "end": 118,
        "text": "交叉编址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2517,
    "created_at": "2024-07-22T07:58:54.221495Z",
    "updated_at": "2024-07-22T07:58:54.221495Z",
    "lead_time": 304.352
  },
  {
    "text": "流水线方式数据总线是瓶颈多体交叉存储器流水线方式存取示意图连续读取m个字所需的时间为模块内访问一个存储单元（字）的存储周期是T多体并行存储器地址总线ABUSMMMM多字长数据总线DBUS交叉编址ARARARARCPU也称为多通道优化瓶颈多模块应用两条G内存条单条G内存条性能差异？双通道内存实例bit双通道内存性能评测SiSoftwareSandraProBusinessHPDLGIntelSandyBridge新型存储器PCRAM相变储存器又称PCM和CRAM，它利用相变材料作为储存介质",
    "id": 1769,
    "label": [
      {
        "start": 12,
        "end": 19,
        "text": "多体交叉存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "存储单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 70,
        "text": "多体并行存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 217,
        "end": 222,
        "text": "相变储存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 191,
        "end": 196,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "存储周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 70,
        "end": 74,
        "text": "地址总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 105,
        "end": 108,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "多通道",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 147,
        "end": 150,
        "text": "bit",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 83,
        "end": 85,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 85,
        "end": 89,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 93,
        "end": 97,
        "text": "交叉编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 132,
        "end": 135,
        "text": "内存条",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 129,
        "text": "内存条",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 140,
        "end": 145,
        "text": "双通道内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 150,
        "end": 155,
        "text": "双通道内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 209,
        "end": 212,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 212,
        "end": 217,
        "text": "PCRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 228,
        "end": 232,
        "text": "CRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 224,
        "end": 227,
        "text": "PCM",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2518,
    "created_at": "2024-07-22T08:01:09.270833Z",
    "updated_at": "2024-07-22T08:01:09.271846Z",
    "lead_time": 134.116
  },
  {
    "text": "相变材料在非晶相态时具有较高的电阻值；在结晶相态时具有较低的电阻值非易失性存储器对相变材料施加不同时长的电脉冲，使相变材料呈现出不同的结晶状态，并在两种状态之间快速切换储存密度较DRAM更高新型存储器ReRAM电阻式存储器也称RRAM，是以非导性材料（金属氧化物）为存储介质的非易失性存储器施加电压，材料的电阻在高阻态和低阻态间发生相应变化，并利用这种性质储存各种信息",
    "id": 1770,
    "label": [
      {
        "start": 33,
        "end": 40,
        "text": "非易失性存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 93,
        "text": "DRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 133,
        "end": 137,
        "text": "存储介质",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 97,
        "end": 100,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 100,
        "end": 111,
        "text": "ReRAM电阻式存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 113,
        "end": 117,
        "text": "RRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 138,
        "end": 145,
        "text": "非易失性存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2519,
    "created_at": "2024-07-22T08:01:31.387141Z",
    "updated_at": "2024-07-22T08:01:31.387141Z",
    "lead_time": 21.267
  },
  {
    "text": "RRAM不仅高读写速度和高存储密度，同时延迟更低新型存储器MRAM和FRAMMRAM是一种利用磁性工作的非易失性随机存储器",
    "id": 1771,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "存储密度",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 61,
        "text": "非易失性随机存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "MRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "FRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "MRAM",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2520,
    "created_at": "2024-07-22T08:03:35.930173Z",
    "updated_at": "2024-07-22T08:03:35.930173Z",
    "lead_time": 123.796
  },
  {
    "text": "基于两个铁磁层磁化状态来存储信息，当电流流过时会表现出不同的阻值",
    "id": 1772,
    "annotator": 1,
    "annotation_id": 2521,
    "created_at": "2024-07-22T08:03:44.887013Z",
    "updated_at": "2024-07-22T08:03:44.887013Z",
    "lead_time": 8.138
  },
  {
    "text": "FRAM，采用铅锆钛形成结晶体存储数据",
    "id": 1773,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "FRAM",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2522,
    "created_at": "2024-07-22T08:03:51.104172Z",
    "updated_at": "2024-07-22T08:03:51.104172Z",
    "lead_time": 5.62
  },
  {
    "text": "主存多少块？块地址多少位？Cache多少行？主存块：KK，块地址占位Cache行：K用直接映射时，Cache标记几位？位块地址中，低位定位Cache行，高位为标记用全相联映射，Cache标记几位？位例：某计算机的Cache有行，采用二路组相联映射方式，每个主存块大小为字节，按字节编址",
    "id": 1774,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 118,
        "end": 125,
        "text": "组相联映射方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 82,
        "end": 87,
        "text": "全相联映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "直接映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "块地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "主存块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 102,
        "end": 105,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 140,
        "end": 142,
        "text": "编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 136,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "块地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 56,
        "text": "Cache标记",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "块地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 75,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 95,
        "text": "Cache标记",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 111,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2523,
    "created_at": "2024-07-22T08:04:41.832496Z",
    "updated_at": "2024-07-22T08:04:41.833257Z",
    "lead_time": 31.881
  },
  {
    "text": "则主存号单元的主存块装如Cache的组号是：A、B、C、D、解：二路组相联，共有组，组号占位",
    "id": 1775,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "主存块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "二路组相联",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2524,
    "created_at": "2024-07-22T08:07:32.164139Z",
    "updated_at": "2024-07-22T08:07:32.164139Z",
    "lead_time": 169.477
  },
  {
    "text": "每块字节，所以块内地址占位",
    "id": 1776,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "块内地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2525,
    "created_at": "2024-07-22T08:08:02.794646Z",
    "updated_at": "2024-07-22T08:08:02.794646Z",
    "lead_time": 29.954
  },
  {
    "text": "转化为二进制：：前位为组号，组号为",
    "id": 1777,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "组号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "组号",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2526,
    "created_at": "2024-07-22T08:08:19.153878Z",
    "updated_at": "2024-07-22T08:08:19.153878Z",
    "lead_time": 15.63
  },
  {
    "text": "，mod块地址块号块内偏移块内地址字地址字号替换策略当从主存向Cache传送一个新块，而Cache中可用位置已被占满时，就会产生替换问题直接映射：替换Cache中指定的一行全相联和组相联：从所有行或组内所有行中选取一行换出Cache的常用替换算法：最不经常使用LFU算法近期最少使用LRU算法随机替换策略最不经常使用LFULeastFrequentlyUsed算法每行设置一个计数器，开始计数每访问一次，被访行的计数器增",
    "id": 1778,
    "label": [
      {
        "start": 68,
        "end": 72,
        "text": "直接映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "地址块号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 188,
        "end": 191,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "字地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "块内偏移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "块内地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 80,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 86,
        "end": 89,
        "text": "全相联",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "组相联",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 116,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 124,
        "end": 135,
        "text": "最不经常使用LFU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 135,
        "end": 146,
        "text": "近期最少使用LRU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 146,
        "end": 152,
        "text": "随机替换策略",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2527,
    "created_at": "2024-07-22T08:11:34.045605Z",
    "updated_at": "2024-07-22T08:11:34.045605Z",
    "lead_time": 194.173
  },
  {
    "text": "当需要替换时，将计数值最小的行换出，同时将该行的计数器都清零",
    "id": 1779,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2528,
    "created_at": "2024-07-22T08:11:41.612799Z",
    "updated_at": "2024-07-22T08:11:41.612799Z",
    "lead_time": 6.874
  },
  {
    "text": "不能严格反映近期访问情况",
    "id": 1780,
    "annotator": 1,
    "annotation_id": 2529,
    "created_at": "2024-07-22T08:11:46.246318Z",
    "updated_at": "2024-07-22T08:11:46.246318Z",
    "lead_time": 4.02
  },
  {
    "text": "刚调入Cache的新行很容易被换出替换策略例子：设Cache有、、、共行全相联映射，a、b、c、d、e等为主存中的块访问顺序一次如下：a、b、c、d、c、b、c、e、d、d、ae",
    "id": 1781,
    "label": [
      {
        "start": 36,
        "end": 41,
        "text": "全相联映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2530,
    "created_at": "2024-07-22T08:11:54.356149Z",
    "updated_at": "2024-07-22T08:11:54.356149Z",
    "lead_time": 7.525
  },
  {
    "text": "）采用LFU算法替换计数器从开始计数每访问一次，该行的计数器增",
    "id": 1782,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "LFU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2531,
    "created_at": "2024-07-22T08:12:03.378461Z",
    "updated_at": "2024-07-22T08:12:03.378461Z",
    "lead_time": 8.321
  },
  {
    "text": "将计数值最小的行换出，该行计数器清零",
    "id": 1783,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2532,
    "created_at": "2024-07-22T08:12:09.531999Z",
    "updated_at": "2024-07-22T08:12:09.531999Z",
    "lead_time": 5.56
  },
  {
    "text": "替换策略近期最少使用LRULeastRecentlyUsed的算法将近期内长久未被访问过的行换出每行设置一个计数器访问时，命中行的计数器清零，其它各行的计数器增替换时，将计数值最大的行换出保护了刚拷贝到Cache中的新行，提高了命中率随机替换随机地选取一行换出命中行的计数器清零，其它各行的计数器增将计数值最大的行换出",
    "id": 1784,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "替换策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 117,
        "end": 121,
        "text": "随机替换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 114,
        "end": 117,
        "text": "命中率",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 79,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 101,
        "end": 106,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 137,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 145,
        "end": 148,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2533,
    "created_at": "2024-07-22T08:12:55.133498Z",
    "updated_at": "2024-07-22T08:12:55.133498Z",
    "lead_time": 44.936
  },
  {
    "text": "Cache的写操作策略Cache的内容只是主存部分内容的副本对Cache的写入导致与主存内容的不一致三种写策略写回法（WriteBack）全写法（WriteThrough、写穿透、写直达）写一次法（WriteOnce）考虑写命中和写不命中两种情况写回法写命中：修改Cache的内容，而不立即写入主存只有当此行被替换时才写回主写未命中：首先将内存中对应块调入Cache，然后对其修改当此行换出时，写回主存特点减少了访问主存的次数存在不一致的隐患每行配置一个修改位，以反映此行是否被CPU修改过",
    "id": 1785,
    "label": [
      {
        "start": 239,
        "end": 242,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 170,
        "end": 172,
        "text": "内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "写操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 94,
        "end": 98,
        "text": "写一次法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 68,
        "text": "WriteBack",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 73,
        "end": 85,
        "text": "WriteThrough",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 99,
        "end": 108,
        "text": "WriteOnce",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 123,
        "end": 126,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 132,
        "end": 137,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 147,
        "end": 149,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 178,
        "end": 183,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 199,
        "end": 201,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 208,
        "end": 210,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 227,
        "end": 230,
        "text": "修改位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2534,
    "created_at": "2024-07-22T08:14:45.867537Z",
    "updated_at": "2024-07-22T08:14:45.867537Z",
    "lead_time": 109.929
  },
  {
    "text": "被修改过的行称为脏行（dirty）例题全写法写命中时：同时写入Cache与主存写未命中时：直接向主存进行写入特点：无需增加修改位写Cache和写主存同步进行，不存在数据不一致的情况一定程度上降低了Cache的性能写一次法写回法全写法写命中时：第一次：采取全写法不是第一次：采取写回法写未命中时：与写回法相同主要用于多处理器系统InteliCache结构例题主存地址空间大小为MB，按字节编址",
    "id": 1786,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 163,
        "end": 168,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 157,
        "end": 161,
        "text": "多处理器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 193,
        "end": 195,
        "text": "编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 191,
        "end": 193,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 187,
        "end": 189,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "脏行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "修改位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 70,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 138,
        "end": 141,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 98,
        "end": 103,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "写一次法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 113,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 113,
        "end": 116,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 178,
        "end": 184,
        "text": "主存地址空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 148,
        "end": 151,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 127,
        "end": 130,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2535,
    "created_at": "2024-07-22T08:20:11.062273Z",
    "updated_at": "2024-07-22T08:20:11.062273Z",
    "lead_time": 324.362
  },
  {
    "text": "指令数据Cache，均有行，Cache行大小为B，数据Cache直接相联",
    "id": 1787,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2536,
    "created_at": "2024-07-22T08:20:25.665613Z",
    "updated_at": "2024-07-22T08:20:25.665613Z",
    "lead_time": 13.883
  },
  {
    "text": "现有两功能相同的程序A，B，其伪代码如下所示：假定int型数据为位补码，程序编译时ijsum均分配在寄存器中，数组a按行优先方式存放，首地址为（十进制）",
    "id": 1788,
    "label": [
      {
        "start": 50,
        "end": 53,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "首地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 75,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "编译",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 64,
        "text": "行优先方式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2537,
    "created_at": "2024-07-22T08:21:14.927637Z",
    "updated_at": "2024-07-22T08:21:14.927637Z",
    "lead_time": 48.612
  },
  {
    "text": "）数组元素aa所在主存块对应的Cache行分别是多少，行号从零开始",
    "id": 1789,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "主存块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2538,
    "created_at": "2024-07-22T08:21:31.086684Z",
    "updated_at": "2024-07-22T08:21:31.086684Z",
    "lead_time": 15.478
  },
  {
    "text": "虚存地址分为两个字段：逻辑页号页内行地址",
    "id": 1790,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "逻辑页号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "虚存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "页内行地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2539,
    "created_at": "2024-07-22T08:22:11.380645Z",
    "updated_at": "2024-07-22T08:22:25.415761Z",
    "lead_time": 42.035
  },
  {
    "text": "实存地址也分两个字段：物理页号页内行地址",
    "id": 1791,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "物理页号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "页内行地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "实存地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2540,
    "created_at": "2024-07-22T08:22:28.598911Z",
    "updated_at": "2024-07-22T08:22:28.598911Z",
    "lead_time": 10.026
  },
  {
    "text": "页表中每一个虚存逻辑页号有一个表目，表目内容包含该逻辑页所在的主存页面地址物理页号，用它作为实存地址的高字段，与虚存地址的页内行地址字段相拼接，产生完整的实主存地址，据此来访问主存页式虚拟存储器结构页表通常在主存中，也至少要访问两次物理存储器才能实现一次访存，这将使虚拟存储器的存取时间加倍",
    "id": 1792,
    "label": [
      {
        "start": 88,
        "end": 97,
        "text": "主存页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 116,
        "end": 121,
        "text": "物理存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "实存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "虚存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "物理页号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 139,
        "end": 143,
        "text": "存取时间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "虚存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "页面地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 66,
        "text": "页内行地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 77,
        "end": 82,
        "text": "实主存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 99,
        "end": 101,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 106,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 133,
        "end": 138,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2541,
    "created_at": "2024-07-22T08:23:06.518024Z",
    "updated_at": "2024-07-22T08:23:06.518024Z",
    "lead_time": 36.928
  },
  {
    "text": "为了避免对主存访问次数的增多，把页表中的最活跃的部分存放在高速存储器中，这个专用于页表缓存的高速存储部件通常称为转换后援缓冲器TLB",
    "id": 1793,
    "label": [
      {
        "start": 46,
        "end": 52,
        "text": "高速存储部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "高速存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "TLB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 63,
        "text": "转换后援缓冲器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2542,
    "created_at": "2024-07-22T08:23:21.720830Z",
    "updated_at": "2024-07-22T08:23:21.720830Z",
    "lead_time": 14.462
  },
  {
    "text": "保存在主存中的完整页表则称为慢表",
    "id": 1794,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "慢表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2543,
    "created_at": "2024-07-22T08:23:24.879580Z",
    "updated_at": "2024-07-22T08:23:24.879580Z",
    "lead_time": 2.401
  },
  {
    "text": "页式虚拟存储器TLB的地址映射过程段式虚拟存储器和段页式虚拟存储器、段式虚拟存储器段是按照程序的自然分界划分的长度可以动态改变的区域",
    "id": 1795,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 24,
        "text": "段式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 33,
        "text": "段页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "地址映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "TLB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 41,
        "text": "段式虚拟存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2544,
    "created_at": "2024-07-22T08:25:47.874727Z",
    "updated_at": "2024-07-22T08:25:47.874727Z",
    "lead_time": 142.394
  },
  {
    "text": "子程序、操作数和常数等划分到不同的段中，并且每个程序可以有多个相同类型的段",
    "id": 1796,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2545,
    "created_at": "2024-07-22T08:27:37.051113Z",
    "updated_at": "2024-07-22T08:27:37.051113Z",
    "lead_time": 108.337
  },
  {
    "text": "虚地址由段号和段内地址（偏移量）组成",
    "id": 1797,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "段内地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "偏移量",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "段号",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2546,
    "created_at": "2024-07-22T08:28:14.786765Z",
    "updated_at": "2024-07-22T08:28:14.786765Z",
    "lead_time": 36.966
  },
  {
    "text": "虚地址到实主存地址的变换通过段表实现",
    "id": 1798,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "主存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2547,
    "created_at": "2024-07-22T08:29:33.157817Z",
    "updated_at": "2024-07-22T08:29:38.904625Z",
    "lead_time": 81.41199999999999
  },
  {
    "text": "段式虚拟存储器地址变换段页式虚拟存储器是段式虚拟存储器和页式虚拟存储器的结合",
    "id": 1799,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "段式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 19,
        "text": "段页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 27,
        "text": "段式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 35,
        "text": "页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2548,
    "created_at": "2024-07-22T08:29:50.741081Z",
    "updated_at": "2024-07-22T08:29:50.742067Z",
    "lead_time": 10.043
  },
  {
    "text": "它把程序按逻辑单位分段以后，再把每段分成固定大小的页",
    "id": 1800,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "分段",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2549,
    "created_at": "2024-07-22T08:36:01.052982Z",
    "updated_at": "2024-07-22T08:36:01.052982Z",
    "lead_time": 369.744
  },
  {
    "text": "程序对主存的调入调出是按页面进行的，但它又可以按段实现共享和保护，兼备页式和段式的优点",
    "id": 1801,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2550,
    "created_at": "2024-07-22T08:36:21.925810Z",
    "updated_at": "2024-07-22T08:36:21.925810Z",
    "lead_time": 20.513
  },
  {
    "text": "缺点是在映象过程中需要多次查表",
    "id": 1802,
    "annotator": 1,
    "annotation_id": 2551,
    "created_at": "2024-07-22T08:36:41.394768Z",
    "updated_at": "2024-07-22T08:36:41.394768Z",
    "lead_time": 19.131
  },
  {
    "text": "段页式虚拟存储器在段页式虚拟存储系统中，每道程序是通过一个段表和一组页表来进行定位的",
    "id": 1803,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "段页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 18,
        "text": "段页式虚拟存储系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2552,
    "created_at": "2024-07-22T08:36:53.330006Z",
    "updated_at": "2024-07-22T08:36:53.330006Z",
    "lead_time": 11.622
  },
  {
    "text": "段表中的每个表目对应一个段，每个表目有一个指向该段的页表起始地址及该段的控制保护信息",
    "id": 1804,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "起始地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2553,
    "created_at": "2024-07-22T08:38:26.959426Z",
    "updated_at": "2024-07-22T08:38:26.959426Z",
    "lead_time": 93.29
  },
  {
    "text": "如果有多个用户在机器上运行，多道程序的每一道需要一个基号，由它指明该道程序的段表起始地址",
    "id": 1805,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "起始地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2554,
    "created_at": "2024-07-22T08:38:50.337653Z",
    "updated_at": "2024-07-22T08:38:50.337653Z",
    "lead_time": 23.038
  },
  {
    "text": "虚拟地址格式如下：段页式虚拟存储器例假设有三道程序用户标志号为A，B，C，其基址寄存器内容分别为SA，SB，SC，逻辑地址到物理地址的变换过程如下图所示",
    "id": 1806,
    "label": [
      {
        "start": 38,
        "end": 43,
        "text": "基址寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 62,
        "end": 66,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "逻辑地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 17,
        "text": "段页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2555,
    "created_at": "2024-07-22T08:39:05.887926Z",
    "updated_at": "2024-07-22T08:39:05.887926Z",
    "lead_time": 15.221
  },
  {
    "text": "在主存中，每道程序都有一张段表，A程序有段，C程序有段",
    "id": 1807,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2556,
    "created_at": "2024-07-22T08:39:16.587759Z",
    "updated_at": "2024-07-22T08:39:16.587759Z",
    "lead_time": 10.345
  },
  {
    "text": "每段应有一张页表，段表的每行就表示相应页表的起始位置，而页表内的每行即为相应的物理页号",
    "id": 1808,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "物理页号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2557,
    "created_at": "2024-07-22T08:39:24.913016Z",
    "updated_at": "2024-07-22T08:39:24.913016Z",
    "lead_time": 8.013
  },
  {
    "text": "请说明虚实地址变换过程",
    "id": 1809,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2558,
    "created_at": "2024-07-22T08:43:06.128833Z",
    "updated_at": "2024-07-22T08:43:06.128833Z",
    "lead_time": 220.868
  },
  {
    "text": "替换算法虚拟存储器中的页面替换策略和cache中的行替换策略有很多相似之处，但有三点显著不同：缺页至少要涉及一次磁盘存取，读取所缺的页，缺页使系统蒙受的损失要比cache未命中大得多",
    "id": 1810,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "缺页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "磁盘",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "页面替换策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "行替换策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "缺页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 80,
        "end": 85,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2559,
    "created_at": "2024-07-22T08:43:24.560693Z",
    "updated_at": "2024-07-22T08:43:24.560693Z",
    "lead_time": 18.125
  },
  {
    "text": "页面替换是由操作系统软件实现的",
    "id": 1811,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "页面替换",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2560,
    "created_at": "2024-07-22T08:45:09.251287Z",
    "updated_at": "2024-07-22T08:45:09.251287Z",
    "lead_time": 104.313
  },
  {
    "text": "页面替换的选择余地很大，属于一个进程的页面都可替换",
    "id": 1812,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "进程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "页面替换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2561,
    "created_at": "2024-07-22T08:46:02.211763Z",
    "updated_at": "2024-07-22T08:46:02.211763Z",
    "lead_time": 52.63
  },
  {
    "text": "虚拟存储器中的替换策略一般采用LRU算法、LFU算法、FIFO算法，或将两种算法结合起来使用",
    "id": 1813,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "FIFO算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "LFU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "LRU算法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2562,
    "created_at": "2024-07-22T08:46:32.627366Z",
    "updated_at": "2024-07-22T08:46:32.627366Z",
    "lead_time": 30.061
  },
  {
    "text": "对于将被替换出去的页面，假如该页调入主存后没有被修改，就不必进行处理，否则就把该页重新写入外存，以保证外存中数据的正确性",
    "id": 1814,
    "label": [
      {
        "start": 45,
        "end": 47,
        "text": "外存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "外存",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2563,
    "created_at": "2024-07-22T08:46:44.540896Z",
    "updated_at": "2024-07-22T08:46:44.540896Z",
    "lead_time": 11.557
  },
  {
    "text": "为此，在页表的每一行应设置一修改位",
    "id": 1815,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "修改位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2564,
    "created_at": "2024-07-22T08:46:55.971175Z",
    "updated_at": "2024-07-22T08:46:55.971175Z",
    "lead_time": 11.07
  },
  {
    "text": "例假设主存只有abc三个页框，组成a进c出的FIFO队列，进程访问页面的序列是，，，，，，，，，，号",
    "id": 1816,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "FIFO",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "队列",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "进程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2565,
    "created_at": "2024-07-22T08:47:28.750265Z",
    "updated_at": "2024-07-22T08:47:28.750265Z",
    "lead_time": 32.454
  },
  {
    "text": "若采用FIFO算法，FIFO算法LRU算法，用列表法分别求两种替换策略情况下的命中率",
    "id": 1817,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "LRU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "FIFO算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "命中率",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "FIFO算法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2566,
    "created_at": "2024-07-22T08:47:42.500059Z",
    "updated_at": "2024-07-22T08:47:42.500059Z",
    "lead_time": 13.395
  },
  {
    "text": "虚拟存储器实例奔腾PC机的虚地址模式奔腾PC的存储管理部件MMU包括分段部件SU和分页部件PU两部份，可允许SU，PU单独工作或同时工作",
    "id": 1818,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "奔腾PC",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 23,
        "end": 29,
        "text": "存储管理部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "分页部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "虚地址模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "奔腾PC",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "分段部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2567,
    "created_at": "2024-07-22T08:48:13.951344Z",
    "updated_at": "2024-07-22T08:48:13.951344Z",
    "lead_time": 31.092
  },
  {
    "text": "分段不分页模式：虚拟地址由一个位的段参照和一个位的偏移组成",
    "id": 1819,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "分段不分页模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2568,
    "created_at": "2024-07-22T08:50:06.009160Z",
    "updated_at": "2024-07-22T08:50:06.009160Z",
    "lead_time": 110.986
  },
  {
    "text": "分段部件SU将二维的分段虚拟地址转换成一维的位线性地址",
    "id": 1820,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "线性地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "分段部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2569,
    "created_at": "2024-07-22T08:50:24.730119Z",
    "updated_at": "2024-07-22T08:50:24.730119Z",
    "lead_time": 18.399
  },
  {
    "text": "优点是无需访问页目录和页表，地址转换速度快",
    "id": 1821,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "页目录",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "地址转换",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2570,
    "created_at": "2024-07-22T08:50:36.803878Z",
    "updated_at": "2024-07-22T08:50:36.803878Z",
    "lead_time": 11.749
  },
  {
    "text": "对段提供的一些保护定义可以一直贯通到段的单个字节级",
    "id": 1822,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2571,
    "created_at": "2024-07-22T08:50:40.600411Z",
    "updated_at": "2024-07-22T08:50:40.600411Z",
    "lead_time": 3.467
  },
  {
    "text": "分段分页模式：在分段基础上增加分页存储管理的模式",
    "id": 1823,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "分段分页模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "分页存储管理",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2572,
    "created_at": "2024-07-22T08:50:53.198446Z",
    "updated_at": "2024-07-22T08:50:53.198446Z",
    "lead_time": 12.279
  },
  {
    "text": "即将SU部件转换后的位线性地址看成由页目录、页表、页内偏移三个字段组成，再由PU部件完成两级页表的查找，将其转换成位物理地址",
    "id": 1824,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "线性地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "页目录",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "页内偏移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 58,
        "end": 62,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2573,
    "created_at": "2024-07-22T08:51:19.549323Z",
    "updated_at": "2024-07-22T08:51:19.549323Z",
    "lead_time": 26.018
  },
  {
    "text": "兼顾了分段和分页两种方式的优点",
    "id": 1825,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "分页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "分段",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2574,
    "created_at": "2024-07-22T08:51:22.659777Z",
    "updated_at": "2024-07-22T08:51:22.659777Z",
    "lead_time": 2.765
  },
  {
    "text": "不分段分页模式：这种模式下SU不工作，只是分页部件PU工作",
    "id": 1826,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "不分段分页模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "分页部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2575,
    "created_at": "2024-07-22T08:51:26.730983Z",
    "updated_at": "2024-07-22T08:51:26.730983Z",
    "lead_time": 3.761
  },
  {
    "text": "程序也不提供段参照，寄存器提供的位地址被看成是由页目录、页表、页内偏移三个字段组成",
    "id": 1827,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "页目录",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "页内偏移",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2576,
    "created_at": "2024-07-22T08:51:40.400270Z",
    "updated_at": "2024-07-22T08:51:40.400270Z",
    "lead_time": 13.334
  },
  {
    "text": "由PU完成虚拟地址到物理地址的转换",
    "id": 1828,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2577,
    "created_at": "2024-07-22T08:51:53.946142Z",
    "updated_at": "2024-07-22T08:51:53.946142Z",
    "lead_time": 13.173
  },
  {
    "text": "这种模式减少了虚拟空间，但能提供保护机制，比分段模式具有更大的灵活性",
    "id": 1829,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "分段",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "虚拟空间",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2578,
    "created_at": "2024-07-22T08:52:04.962046Z",
    "updated_at": "2024-07-22T08:52:04.962046Z",
    "lead_time": 10.701
  },
  {
    "text": "保护模式的分页地址转换奔腾页面大小为MB使用单级页表",
    "id": 1830,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "地址转换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "单级页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "分页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2579,
    "created_at": "2024-07-22T08:53:05.670419Z",
    "updated_at": "2024-07-22T08:53:05.670419Z",
    "lead_time": 60.363
  },
  {
    "text": "位线性地址分为高位的页面和低位的页内偏移两个字段",
    "id": 1831,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "页内偏移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "线性地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2580,
    "created_at": "2024-07-22T08:53:18.425844Z",
    "updated_at": "2024-07-22T08:53:18.427354Z",
    "lead_time": 12.403
  },
  {
    "text": "页表项的I位指示页面大小，P位为出现位，A位为访问过位，D位为修改过位",
    "id": 1832,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2581,
    "created_at": "2024-07-22T08:54:24.699868Z",
    "updated_at": "2024-07-22T08:54:24.699868Z",
    "lead_time": 65.937
  },
  {
    "text": "RW位用于读写控制，US位用于用户监督控制，PCD位用于页cache禁止的控制，PWT位用于页全写法的控制",
    "id": 1833,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2582,
    "created_at": "2024-07-22T08:54:34.893032Z",
    "updated_at": "2024-07-22T08:54:34.893032Z",
    "lead_time": 9.846
  },
  {
    "text": "奔腾MB分页方式地址变换存储保护当多个用户共享主存时，就有多个用户和系统软件存于主存中，为使系统能正常工作，应防止由于一个用户程序出错而破坏其他用户的程序和系统软件，还要防止一个用户程序不合法地访问不是分配给它的主存区域",
    "id": 1834,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "奔腾MB",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 78,
        "end": 82,
        "text": "系统软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "分页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 93,
        "text": "用户程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 108,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "用户程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "系统软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2583,
    "created_at": "2024-07-22T08:56:51.226134Z",
    "updated_at": "2024-07-22T08:56:51.226134Z",
    "lead_time": 135.982
  },
  {
    "text": "为此，系统应提供存储保护",
    "id": 1835,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "存储保护",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2584,
    "created_at": "2024-07-22T08:56:54.725785Z",
    "updated_at": "2024-07-22T08:56:54.725785Z",
    "lead_time": 2.991
  },
  {
    "text": "通常采用的方式是：存储区域保护访问方式保护存储区域保护非虚拟存储器的主存系统可采用界限寄存器方式",
    "id": 1836,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "界限寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2585,
    "created_at": "2024-07-22T08:57:36.463153Z",
    "updated_at": "2024-07-22T08:57:36.463153Z",
    "lead_time": 41.412
  },
  {
    "text": "由系统软件经特权指令设置上、下界寄存器，为每个程序划定存储区域，禁止越界访问",
    "id": 1837,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "系统软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "特权指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "越界访问",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2586,
    "created_at": "2024-07-22T08:57:54.177035Z",
    "updated_at": "2024-07-22T08:57:54.177035Z",
    "lead_time": 15.157
  },
  {
    "text": "界限寄存器方式只适用于每个用户占用一个或几个连续的主存区域",
    "id": 1838,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "界限寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2587,
    "created_at": "2024-07-22T08:58:06.977371Z",
    "updated_at": "2024-07-22T08:58:06.977371Z",
    "lead_time": 12.46
  },
  {
    "text": "在虚拟存储系统中，通常采用页表保护、段表保护和键式保护方法",
    "id": 1839,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "虚拟存储系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "页表保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "段表保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "键式保护",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2588,
    "created_at": "2024-07-22T09:00:15.624779Z",
    "updated_at": "2024-07-22T09:00:24.920143Z",
    "lead_time": 134.812
  },
  {
    "text": "页表保护和段表保护每个程序的段表和页表本身都有自己的保护功能",
    "id": 1840,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "页表保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "段表保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2589,
    "created_at": "2024-07-22T09:00:31.312147Z",
    "updated_at": "2024-07-22T09:00:31.312147Z",
    "lead_time": 5.245
  },
  {
    "text": "每个程序的虚页号是固定的，经过虚地址向实地址变换后的实存页号也就固定了",
    "id": 1841,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "虚页号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "实存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页号",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2590,
    "created_at": "2024-07-22T09:01:44.734939Z",
    "updated_at": "2024-07-22T09:01:44.734939Z",
    "lead_time": 73.066
  },
  {
    "text": "那么不论虚地址如何出错，也只能影响到相对的几个主存页面",
    "id": 1842,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2591,
    "created_at": "2024-07-22T09:01:48.001058Z",
    "updated_at": "2024-07-22T09:01:48.001058Z",
    "lead_time": 2.902
  },
  {
    "text": "不会侵犯其他程序空间",
    "id": 1843,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2592,
    "created_at": "2024-07-22T09:01:51.132929Z",
    "updated_at": "2024-07-22T09:01:51.132929Z",
    "lead_time": 2.804
  },
  {
    "text": "段表和页表的保护功能相同，但段表中除包括段表起点外，还包括段长",
    "id": 1844,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2593,
    "created_at": "2024-07-22T09:01:57.887957Z",
    "updated_at": "2024-07-22T09:01:57.887957Z",
    "lead_time": 6.448
  },
  {
    "text": "键保护方式为主存的每一页配一个键，称为存储键每个用户的实存页面的键都相同",
    "id": 1845,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储键",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "键保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "实存页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2594,
    "created_at": "2024-07-22T09:02:26.021495Z",
    "updated_at": "2024-07-22T09:02:26.021495Z",
    "lead_time": 27.752
  },
  {
    "text": "为了打开这个锁必须有钥匙，称为访问键",
    "id": 1846,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "访问键",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2595,
    "created_at": "2024-07-22T09:02:29.204742Z",
    "updated_at": "2024-07-22T09:02:29.204742Z",
    "lead_time": 2.849
  },
  {
    "text": "访问键赋予每道程序，并保存在该道程序的状态寄存器中",
    "id": 1847,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "状态寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2596,
    "created_at": "2024-07-22T09:02:39.900103Z",
    "updated_at": "2024-07-22T09:02:49.341241Z",
    "lead_time": 15.498000000000001
  },
  {
    "text": "当数据要写入主存的某一页时，访问键要与存储键相比较",
    "id": 1848,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储键",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "访问键",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2597,
    "created_at": "2024-07-22T09:02:58.514994Z",
    "updated_at": "2024-07-22T09:02:58.514994Z",
    "lead_time": 8.058
  },
  {
    "text": "若两键相符，则允许访问该页，否则拒绝访问",
    "id": 1849,
    "annotator": 1,
    "annotation_id": 2598,
    "created_at": "2024-07-22T09:03:02.601064Z",
    "updated_at": "2024-07-22T09:03:02.601064Z",
    "lead_time": 3.745
  },
  {
    "text": "环保护方式对正在执行的程序本身的核心部分或关键部分进行保护",
    "id": 1850,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2599,
    "created_at": "2024-07-22T09:03:06.692219Z",
    "updated_at": "2024-07-22T09:03:06.692219Z",
    "lead_time": 3.771
  },
  {
    "text": "它是按程序的重要性及对整个系统的正常运行的影响程度进行分层，每一层叫做一个环",
    "id": 1851,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2600,
    "created_at": "2024-07-22T09:04:07.527735Z",
    "updated_at": "2024-07-22T09:04:07.527735Z",
    "lead_time": 60.49
  },
  {
    "text": "在现行程序运行前由操作系统定好程序各页的环号，并置入页表中",
    "id": 1852,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2601,
    "created_at": "2024-07-22T09:04:15.155925Z",
    "updated_at": "2024-07-22T09:04:15.155925Z",
    "lead_time": 7.289
  },
  {
    "text": "然后把该道程序的开始环号送入CPU的现行环号寄存器",
    "id": 1853,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "环号寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2602,
    "created_at": "2024-07-22T09:04:23.537784Z",
    "updated_at": "2024-07-22T09:04:23.537784Z",
    "lead_time": 8.044
  },
  {
    "text": "采用单字长指令格式，指令各字段定义如图，转移地址采用相对寻址方式，相对偏移量用补码表示",
    "id": 1854,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "转移地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "单字长指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "相对寻址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "相对偏移量",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2603,
    "created_at": "2024-07-22T09:06:47.369370Z",
    "updated_at": "2024-07-22T09:06:47.369370Z",
    "lead_time": 143.485
  },
  {
    "text": "寻址方式如图",
    "id": 1855,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2604,
    "created_at": "2024-07-22T09:06:51.204159Z",
    "updated_at": "2024-07-22T09:06:51.204159Z",
    "lead_time": 3.464
  },
  {
    "text": "注x表示存储器地址x或寄存器x的内容（）该指令系统最多可有多少条指令？该计算机最多有多少个通用寄存器？存储器地址寄存器MAR和存储器数据寄存器MDR至少需要多少位？研究生统考例题注x表示存储器地址x或寄存器x的内容（）转移指令的目标地址范围是多少？例某计算机字长为位，主存地址空间大小为KB，按字编址",
    "id": 1856,
    "label": [
      {
        "start": 45,
        "end": 50,
        "text": "通用寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 59,
        "text": "存储器地址寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 71,
        "text": "存储器数据寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 109,
        "end": 113,
        "text": "转移指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "指令系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 114,
        "end": 118,
        "text": "目标地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 148,
        "end": 150,
        "text": "编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 143,
        "end": 145,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "MAR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "MDR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 93,
        "end": 96,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 100,
        "end": 103,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 129,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 129,
        "end": 131,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 140,
        "text": "主存地址空间",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2605,
    "created_at": "2024-07-22T09:08:28.907675Z",
    "updated_at": "2024-07-22T09:08:28.907675Z",
    "lead_time": 97.126
  },
  {
    "text": "采用单字长指令格式，指令各字段定义如图，转移地址采用相对寻址方式，相对偏移量用补码表示",
    "id": 1857,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "转移地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "单字长指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "相对寻址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "相对偏移量",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2606,
    "created_at": "2024-07-22T09:08:50.216803Z",
    "updated_at": "2024-07-22T09:08:50.216803Z",
    "lead_time": 19.754
  },
  {
    "text": "寻址方式如表",
    "id": 1858,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2607,
    "created_at": "2024-07-22T09:14:05.515806Z",
    "updated_at": "2024-07-22T09:14:05.515806Z",
    "lead_time": 314.597
  },
  {
    "text": "研究生统考例题注x表示存储器地址x或寄存器x的内容（）若操作码B表示加法操作，助记符为add，寄存器R，R的编号分别为B和B，R的内容为H，R的内容为H，地址H中的内容为H，地址H中的内容为H，则汇编语句addRR逗号前为源操作数，逗号后为目的操作数，对应的机器码是多少？用十六进制表示",
    "id": 1859,
    "label": [
      {
        "start": 111,
        "end": 115,
        "text": "源操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 137,
        "end": 141,
        "text": "十六进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 129,
        "end": 132,
        "text": "机器码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "操作码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "存储器地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 98,
        "end": 102,
        "text": "汇编语句",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 120,
        "end": 125,
        "text": "目的操作数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2608,
    "created_at": "2024-07-22T09:15:18.012606Z",
    "updated_at": "2024-07-22T09:15:18.012606Z",
    "lead_time": 72.164
  },
  {
    "text": "该指令执行以后，哪些寄存器和存储单元的内容会发生改变？改变后的内容是什么？例某计算机字长为位，主存地址空间大小为KB，按字编址",
    "id": 1860,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "地址空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "存储单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 46,
        "text": "位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2609,
    "created_at": "2024-07-22T09:15:22.270739Z",
    "updated_at": "2024-07-22T09:15:22.270739Z",
    "lead_time": 3.866
  },
  {
    "text": "采用单字长指令格式，指令各字段定义如图，转移地址采用相对寻址方式，相对偏移量用补码表示",
    "id": 1861,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "转移地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "单字长指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "相对寻址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "相对偏移量",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2610,
    "created_at": "2024-07-22T09:15:33.947203Z",
    "updated_at": "2024-07-22T09:15:33.947203Z",
    "lead_time": 11.306
  },
  {
    "text": "支持指令流水并强调指令流水的优化使用",
    "id": 1862,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "指令流水",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "指令流水",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2611,
    "created_at": "2024-07-22T09:18:02.060137Z",
    "updated_at": "2024-07-22T09:18:02.060137Z",
    "lead_time": 147.685
  },
  {
    "text": "RISC技术的复杂性在它的编译程序RISC与CISC的主要特征对比MIPSAptiv框图硬布线控制器指令缓存数据缓存总线接口内存管理单元算术与逻辑运算器协处理器指令译码器通用寄存器浮点运算器ARM处理器框图平均微程序为条微指令本章重点内容CPU的功能（控制器的功能、类寄存器）指令周期基本概念设计指令周期，画指令周期流程图时序产生器和控制方式基本原理微程序控制器工作原理微程序设计基本概念硬连线控制器基本概念本章容易混淆的一些概念周期表示一段时间",
    "id": 1863,
    "label": [
      {
        "start": 44,
        "end": 50,
        "text": "硬布线控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 85,
        "end": 90,
        "text": "通用寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 175,
        "end": 181,
        "text": "微程序控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 194,
        "end": 200,
        "text": "硬连线控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 161,
        "end": 166,
        "text": "时序产生器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 90,
        "end": 95,
        "text": "浮点运算器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 185,
        "end": 190,
        "text": "微程序设计",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 80,
        "end": 85,
        "text": "指令译码器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "CISC",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "编译程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RISC",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 138,
        "end": 142,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 77,
        "end": 80,
        "text": "处理器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 113,
        "text": "微指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 105,
        "end": 108,
        "text": "微程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 119,
        "end": 122,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "RISC",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "MIPS",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 129,
        "text": "控制器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 137,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 148,
        "end": 152,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 154,
        "end": 158,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2612,
    "created_at": "2024-07-22T09:21:19.546762Z",
    "updated_at": "2024-07-22T09:21:19.546762Z",
    "lead_time": 197.061
  },
  {
    "text": "指令周期指机器指令从取指到执行完成所花的时间，包括取指周期和执行周期",
    "id": 1864,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "取指周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "执行周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "取指",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "机器指令",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2613,
    "created_at": "2024-07-22T09:21:26.991699Z",
    "updated_at": "2024-07-22T09:21:26.991699Z",
    "lead_time": 7.029
  },
  {
    "text": "CPU周期机器周期，一个CPU周期包括多个节拍脉冲",
    "id": 1865,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "CPU周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "节拍脉冲",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "机器周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "CPU周期",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2614,
    "created_at": "2024-07-22T09:21:40.969596Z",
    "updated_at": "2024-07-22T09:21:40.969596Z",
    "lead_time": 5.124
  },
  {
    "text": "节拍脉冲T周期，处理操作的最基本单位指令周期CPU机器周期节拍脉冲数据通路举例某机字长位，指令位定长；指令ADDR，R的功能为RRR，即将R中数据与R内容所指向的主存单元的数据相加，并将结果送入R内容所指向的主存单元中；数据通路图中控制信号为表示有效，假设MAR输出一直处于使能状态；数据通路举例取指令周期CCCMARMDRPCIR下表为取指令和译码阶段每个节拍时钟周期的功能和控制信号，请按相同方式给出执行阶段各节拍的功能和有效控制信号",
    "id": 1866,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "节拍脉冲",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 81,
        "end": 85,
        "text": "主存单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "数据通路",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "机器周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 116,
        "end": 120,
        "text": "控制信号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "ADD",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 173,
        "end": 175,
        "text": "译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "节拍脉冲",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 108,
        "text": "主存单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 114,
        "text": "数据通路",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 142,
        "end": 146,
        "text": "数据通路",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 148,
        "end": 153,
        "text": "取指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 169,
        "end": 172,
        "text": "取指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 181,
        "end": 185,
        "text": "时钟周期",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2615,
    "created_at": "2024-07-22T09:22:27.227176Z",
    "updated_at": "2024-07-22T09:22:27.227176Z",
    "lead_time": 45.913
  },
  {
    "text": "数据通路举例执行指令周期CCCMARMDRARA数据通路举例执行指令周期CCMARMDRAACRRR流水CPU并行处理技术流水CPU的结构流水线中的主要问题PentiumCPU并行处理技术并行性的两种含义：同时性指两个以上事件在同一时刻发生；并发性指两个以上事件在同一时间间隔内发生",
    "id": 1867,
    "label": [
      {
        "start": 78,
        "end": 85,
        "text": "Pentium",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 50,
        "end": 55,
        "text": "流水CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "数据通路",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "数据通路",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 66,
        "text": "流水CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 121,
        "end": 124,
        "text": "并发性",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 94,
        "end": 97,
        "text": "并行性",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2616,
    "created_at": "2024-07-22T09:24:53.038524Z",
    "updated_at": "2024-07-22T09:24:53.038524Z",
    "lead_time": 145.389
  },
  {
    "text": "计算机的并行处理技术主要有以下三种形式：时间并行空间并行时间并行空间并行时间并行让多个处理过程在时间上相互错开，轮流重叠地使用同一套硬件设备的各个部分，以加快硬件周转而赢得速度",
    "id": 1868,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 79,
        "end": 81,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2617,
    "created_at": "2024-07-22T09:25:12.329884Z",
    "updated_at": "2024-07-22T09:25:12.329884Z",
    "lead_time": 18.901
  },
  {
    "text": "实现方式是采用流水处理部件",
    "id": 1869,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "流水处理部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2618,
    "created_at": "2024-07-22T09:25:16.332004Z",
    "updated_at": "2024-07-22T09:25:16.332004Z",
    "lead_time": 3.638
  },
  {
    "text": "目前的高性能微型机几乎无一例外地使用了流水技术",
    "id": 1870,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "微型机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "流水",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2619,
    "created_at": "2024-07-22T09:25:31.499944Z",
    "updated_at": "2024-07-22T09:25:31.499944Z",
    "lead_time": 14.858
  },
  {
    "text": "并行处理技术并行处理技术空间并行指资源重复（空间因素），以“数量取胜”VLSI为其提供了技术保证",
    "id": 1871,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "并行处理技术",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2620,
    "created_at": "2024-07-22T09:25:38.512935Z",
    "updated_at": "2024-07-22T09:25:38.512935Z",
    "lead_time": 6.698
  },
  {
    "text": "时间并行空间并行指时间重叠和资源重复的综合应用流水线原理时间并行把任务分成若干子任务，使子任务在流水线的各阶段并发地执行空间并行资源重复多处理器系统和多计算机系统时间并行空间并行时间重叠和资源重复的综合应用",
    "id": 1872,
    "label": [
      {
        "start": 68,
        "end": 74,
        "text": "多处理器系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "流水线",
        "labels": [
          "CW"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "并发",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 81,
        "text": "多计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 81,
        "end": 85,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 85,
        "end": 89,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2621,
    "created_at": "2024-07-22T09:26:17.329017Z",
    "updated_at": "2024-07-22T09:26:17.329017Z",
    "lead_time": 38.484
  },
  {
    "text": "奔腾CPU采用超标量流水技术，一个机器周期执行两条指令",
    "id": 1873,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "奔腾CPU",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "机器周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 14,
        "text": "超标量流水技术",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2622,
    "created_at": "2024-07-22T09:27:12.741903Z",
    "updated_at": "2024-07-22T09:27:12.741903Z",
    "lead_time": 54.978
  },
  {
    "text": "指令周期细分取指令IFInstructionFetch指令译码IDInstructionDecode执行运算EXExecution访存阶段MEM结果写回WBWriteBack一条指令不一定经历所有阶段IFIDEXMEMWB非流水线时空图流水线时空图完成N条指令需要的时间n超标量流水线时空图时间TIFIDEXWB空间SIIIIIIIIIIIIIIIIII具有两条以上的指令流水线",
    "id": 1874,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "取指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 136,
        "end": 142,
        "text": "超标量流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 184,
        "end": 189,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "指令译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 112,
        "end": 115,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 115,
        "end": 118,
        "text": "时空图",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2623,
    "created_at": "2024-07-22T09:27:30.381816Z",
    "updated_at": "2024-07-22T09:27:30.381816Z",
    "lead_time": 17.301
  },
  {
    "text": "满载时，每一时钟周期可以执行条指令II流水线分类指令流水线取指译码取数执行算术流水线加法器乘法器快速傅里叶变换器处理机流水线由一串级连的处理机组成每台处理机负责某一特定任务一个计算机系统可以在不同的并行等级上采用流水线常见流水线有：处理机流水线：程序步骤的并行由一串级联的处理机构成流水线的各个过程段，每台处理机负责某一特定的任务",
    "id": 1875,
    "label": [
      {
        "start": 39,
        "end": 45,
        "text": "流水线加法器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 56,
        "text": "快速傅里叶变换器",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "时钟周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "乘法器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 123,
        "end": 125,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "取指",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 99,
        "end": 101,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 109,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 116,
        "end": 122,
        "text": "处理机流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 141,
        "end": 144,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 153,
        "end": 156,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 78,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 93,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 136,
        "end": 139,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2624,
    "created_at": "2024-07-22T09:31:16.749193Z",
    "updated_at": "2024-07-22T09:31:16.749193Z",
    "lead_time": 225.987
  },
  {
    "text": "处理机流水线应用在多机系统中",
    "id": 1876,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "处理机流水线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2625,
    "created_at": "2024-07-22T09:31:23.370048Z",
    "updated_at": "2024-07-22T09:31:23.370048Z",
    "lead_time": 6.253
  },
  {
    "text": "指令流水线：指令步骤的并行将指令流处理过程分为取指令、译码、执行、写回等几个并行处理过程段",
    "id": 1877,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "取指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "指令流",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2626,
    "created_at": "2024-07-22T09:31:39.026515Z",
    "updated_at": "2024-07-22T09:31:39.026515Z",
    "lead_time": 15.342
  },
  {
    "text": "源程序可执行程序目标程序编辑程序汇编或编译程序联接程序高级语言软件的发展演变系统软件的发展操作系统：用来管理计算机软硬件资源和自动用户作业调度，而使多个用户能有效地共用一套计算机系统",
    "id": 1878,
    "label": [
      {
        "start": 45,
        "end": 49,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 86,
        "end": 91,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "编译程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "源程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "可执行程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "目标程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "系统软件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2627,
    "created_at": "2024-07-22T09:35:09.677469Z",
    "updated_at": "2024-07-22T09:35:09.677469Z",
    "lead_time": 210.097
  },
  {
    "text": "数据库管理系统：数据库和数据库管理软件分布式系统软件计算机系统的层次结构计算机是一个硬、软件结合而成的整体",
    "id": 1879,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "数据库管理系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "分布式系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2628,
    "created_at": "2024-07-22T09:35:51.804716Z",
    "updated_at": "2024-07-22T09:35:51.804716Z",
    "lead_time": 41.024
  },
  {
    "text": "它通常由五级组成",
    "id": 1880,
    "annotator": 1,
    "annotation_id": 2629,
    "created_at": "2024-07-22T09:35:53.993828Z",
    "updated_at": "2024-07-22T09:35:53.993828Z",
    "lead_time": 1.489
  },
  {
    "text": "不同的计算机使用者看到的计算机的形式是不同的计算机系统的层次结构高级语言级：方便用户编写应用程序，由各种高级语言编译程序支持和执行",
    "id": 1881,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "应用程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "编译程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2630,
    "created_at": "2024-07-22T09:36:02.297924Z",
    "updated_at": "2024-07-22T09:36:02.297924Z",
    "lead_time": 7.657
  },
  {
    "text": "汇编语言级：提供一种符号形式语言，以便能够精确地操作控制硬件",
    "id": 1882,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "汇编语言级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2631,
    "created_at": "2024-07-22T09:44:37.374508Z",
    "updated_at": "2024-07-22T09:44:37.374508Z",
    "lead_time": 514.4
  },
  {
    "text": "操作系统级：它由操作系统程序实现，管理所有的硬件资源计算机系统的层次结构一般机器级：由微程序解释机器指令系统",
    "id": 1883,
    "label": [
      {
        "start": 48,
        "end": 54,
        "text": "机器指令系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "微程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "操作系统级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2632,
    "created_at": "2024-07-22T09:45:31.143582Z",
    "updated_at": "2024-07-22T09:45:31.144566Z",
    "lead_time": 42.04
  },
  {
    "text": "微程序设计级：实际执行指令、处理数据的数字电路",
    "id": 1884,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "微程序设计级",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "数字电路",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2633,
    "created_at": "2024-07-22T09:45:41.301408Z",
    "updated_at": "2024-07-22T09:45:41.301408Z",
    "lead_time": 8.067
  },
  {
    "text": "软件与硬件逻辑等价性随着大规模集成电路技术的发展任何操作可以由软件来实现，也可以由硬件来实现；采用哪种方案？应综合考虑各个因素：价格、速度、可靠性、存储容量、变更周期固件：介于传统的软件和硬件间的实体",
    "id": 1885,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "集成电路",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 74,
        "end": 78,
        "text": "存储容量",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 93,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 94,
        "end": 96,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2634,
    "created_at": "2024-07-22T09:46:02.884800Z",
    "updated_at": "2024-07-22T09:46:02.884800Z",
    "lead_time": 19.858
  },
  {
    "text": "谷歌表示一次搜索使用瓦时，而与谷歌搜索相比，GoogleGPT使用的能量大约是谷歌搜索的四倍",
    "id": 1886,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "谷歌",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 22,
        "end": 31,
        "text": "GoogleGPT",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "谷歌搜索",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "谷歌搜索",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2635,
    "created_at": "2024-07-22T09:46:26.979547Z",
    "updated_at": "2024-07-22T09:46:26.979547Z",
    "lead_time": 22.192
  },
  {
    "text": "SM（StreamingMultiprocessors）称为流式多处理器，是NVIDIAGPU的基本构建模块",
    "id": 1887,
    "label": [
      {
        "start": 38,
        "end": 44,
        "text": "NVIDIA",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "流式多处理器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2636,
    "created_at": "2024-07-22T09:47:32.484642Z",
    "updated_at": "2024-07-22T09:47:32.484642Z",
    "lead_time": 63.804
  },
  {
    "text": "每个SM包含CUDA核心（用于通用计算的处理单元）、张量核心（专门用于AI工作负载）以及其他用于图形和计算操作的组件",
    "id": 1888,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "张量核心",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "CUDA核心",
        "labels": [
          "PROD"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2637,
    "created_at": "2024-07-22T09:47:46.117244Z",
    "updated_at": "2024-07-22T09:47:46.117244Z",
    "lead_time": 12.186
  },
  {
    "text": "SM具有高度并行性，使GPU能够同时执行许多操作",
    "id": 1889,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "GPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "并行性",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2638,
    "created_at": "2024-07-22T09:47:53.156826Z",
    "updated_at": "2024-07-22T09:47:53.156826Z",
    "lead_time": 5.51
  },
  {
    "text": "主芯片上共有个SM",
    "id": 1890,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2639,
    "created_at": "2024-07-22T09:50:05.546703Z",
    "updated_at": "2024-07-22T09:50:05.546703Z",
    "lead_time": 130.852
  },
  {
    "text": "但它们的参数产量约为，这意味着我们可以使用大约个",
    "id": 1891,
    "annotator": 1,
    "annotation_id": 2640,
    "created_at": "2024-07-22T09:50:08.951702Z",
    "updated_at": "2024-07-22T09:50:08.951702Z",
    "lead_time": 2.262
  },
  {
    "text": "在生产过程中发生故障的部分会被关闭",
    "id": 1892,
    "annotator": 1,
    "annotation_id": 2641,
    "created_at": "2024-07-22T09:50:29.943394Z",
    "updated_at": "2024-07-22T09:50:29.943394Z",
    "lead_time": 19.77
  },
  {
    "text": "此外，如果看一下主芯片的尺寸，那是一个相当大的芯片，非常接近现代工厂机器的限制",
    "id": 1893,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "芯片",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2642,
    "created_at": "2024-07-22T09:50:36.557310Z",
    "updated_at": "2024-07-22T09:50:36.557310Z",
    "lead_time": 5.207
  },
  {
    "text": "规格化表示：当尾数不为，尾数左移位（小数点右移位），同时阶码减（左规）尾数右移位（小数点左移位），同时阶码加（右规）IEEE标准一个规格化的位浮点数x的真值表示为xSME位的浮点数（双精度浮点数）符号位位，阶码域位，尾数域位，指数偏移值是",
    "id": 1894,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "规格化",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 78,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "右移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "规格化",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 87,
        "end": 90,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 97,
        "text": "双精度浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 103,
        "end": 105,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 108,
        "end": 110,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2643,
    "created_at": "2024-07-22T09:51:26.701797Z",
    "updated_at": "2024-07-22T09:51:26.701797Z",
    "lead_time": 48.716
  },
  {
    "text": "规格化的位浮点数x的真值为：xSME浮点数的表示方法例若浮点数x的标准存储格式为，求其浮点数的十进制数值",
    "id": 1895,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "规格化",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2644,
    "created_at": "2024-07-22T09:51:54.496263Z",
    "updated_at": "2024-07-22T09:51:54.496263Z",
    "lead_time": 26.088
  },
  {
    "text": "解：将进制数展开后，可得二制数格式为指数e阶码包括隐藏位的尾数M于是xSMe浮点数的表示方法例将数转换成标准的位浮点数的二进制存储格式（进制表示）",
    "id": 1896,
    "label": [
      {
        "start": 60,
        "end": 63,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2645,
    "created_at": "2024-07-22T09:52:10.055618Z",
    "updated_at": "2024-07-22T09:52:10.055618Z",
    "lead_time": 13.983
  },
  {
    "text": "解首先分别将整数和分数部分转换成二进制数：规格化，尾数右移位e，于是得到：SEM最后得到位浮点数的二进制存储格式为：AC真值的机器数（机器零）阶码E，尾数M正：S，负：S非规格化浮点数：阶码E，尾数M规格化浮点数：阶码E（）无穷大的机器数阶码E全（），尾数M：S，：SNaN（notanumber，不是一个数）阶码E全（），尾数M用来通知异常情况IEEE标准位单精度浮点数单精度IEEE浮点数区间EEEMMMM规格化浮点数的范围正或负正负无穷大NaN非规格化数浮点数的表示范围浮点数所表示的范围远比定点数大一般计算机中同时采用定点、浮点表示",
    "id": 1897,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "规格化",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 266,
        "end": 270,
        "text": "浮点表示",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 255,
        "end": 258,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 249,
        "end": 252,
        "text": "定点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "机器零",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 86,
        "end": 92,
        "text": "规格化浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 93,
        "end": 95,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 97,
        "end": 99,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 100,
        "end": 106,
        "text": "规格化浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 107,
        "end": 109,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 116,
        "end": 119,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 119,
        "end": 121,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 128,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 155,
        "end": 157,
        "text": "阶码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 162,
        "end": 164,
        "text": "尾数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 180,
        "end": 186,
        "text": "单精度浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 193,
        "end": 196,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 205,
        "end": 211,
        "text": "规格化浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 226,
        "end": 230,
        "text": "规格化数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 230,
        "end": 233,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 238,
        "end": 241,
        "text": "浮点数",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2646,
    "created_at": "2024-07-22T09:53:36.518697Z",
    "updated_at": "2024-07-22T09:53:36.518697Z",
    "lead_time": 84.85
  },
  {
    "text": "单片机中多采用定点表示",
    "id": 1898,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "单片机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "定点表示",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2647,
    "created_at": "2024-07-22T09:53:42.121326Z",
    "updated_at": "2024-07-22T09:53:42.121326Z",
    "lead_time": 4.318
  },
  {
    "text": "IEEE单精度在线转换httpswwwhschmidtnetFloatConverterIEEEhtml十进制数串的表示方法有时十进制数在计算机中需要以十进制的方式进行运算，需要对十进制进行编码二十进制编码（BCD码）每个十进制符号由位二进制数表示有权码名称表示每一位的位权（、、、）每位的数码与相应的位权相乘，再求和，得到它所代表的十进制数码表示：数的机器码表示一般书写表示的数，称为真值计算机中表示的数，称为机器数在计算机中，为了妥善的处理好符号位问题，主要是负数的运算问题，引入种表示方法：原码、补码、反码、移码",
    "id": 1899,
    "label": [
      {
        "start": 206,
        "end": 209,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 108,
        "text": "BCD码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 118,
        "end": 121,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 223,
        "end": 226,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 177,
        "end": 180,
        "text": "机器码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 193,
        "end": 195,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 254,
        "end": 256,
        "text": "反码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 248,
        "end": 250,
        "text": "原码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 95,
        "end": 97,
        "text": "编码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 257,
        "end": 259,
        "text": "移码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 251,
        "end": 253,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 117,
        "end": 118,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 79,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 97,
        "end": 101,
        "text": "二十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 167,
        "end": 170,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 195,
        "end": 198,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 210,
        "end": 213,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2648,
    "created_at": "2024-07-22T10:23:31.027007Z",
    "updated_at": "2024-07-22T10:23:31.027007Z",
    "lead_time": 1787.515
  },
  {
    "text": "原码表示法定点整数的原码形式为xnxnxx字长位：X，则X原X，则X原使用原码有两种表达形式原原原码表示法特点：表示简单，易于同真值之间进行转换，实现乘除运算简单",
    "id": 1900,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "原码表示法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "定点整数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "原码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "原码表示法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2649,
    "created_at": "2024-07-22T10:23:48.199769Z",
    "updated_at": "2024-07-22T10:23:48.199769Z",
    "lead_time": 16.278
  },
  {
    "text": "进行减法运算麻烦",
    "id": 1901,
    "annotator": 1,
    "annotation_id": 2650,
    "created_at": "2024-07-22T10:23:50.521924Z",
    "updated_at": "2024-07-22T10:23:50.521924Z",
    "lead_time": 1.446
  },
  {
    "text": "字形编码法：将汉字的字形信息分解归类而给出的编码",
    "id": 1902,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "字形编码法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2651,
    "created_at": "2024-07-22T10:23:56.172649Z",
    "updated_at": "2024-07-22T10:23:56.172649Z",
    "lead_time": 4.895
  },
  {
    "text": "具有重码少的优点",
    "id": 1903,
    "annotator": 1,
    "annotation_id": 2652,
    "created_at": "2024-07-22T10:23:59.974010Z",
    "updated_at": "2024-07-22T10:23:59.974010Z",
    "lead_time": 3.02
  },
  {
    "text": "常用的有表五笔字型、郑码等",
    "id": 1904,
    "annotator": 1,
    "annotation_id": 2653,
    "created_at": "2024-07-22T10:24:04.110872Z",
    "updated_at": "2024-07-22T10:24:04.110872Z",
    "lead_time": 3.309
  },
  {
    "text": "音形编码法：音形编码吸取了音码和形码的优点，使编码规则简化重码少",
    "id": 1905,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "音形编码法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2654,
    "created_at": "2024-07-22T10:24:07.223830Z",
    "updated_at": "2024-07-22T10:24:07.223830Z",
    "lead_time": 2.375
  },
  {
    "text": "常用的有全息码等",
    "id": 1906,
    "annotator": 1,
    "annotation_id": 2655,
    "created_at": "2024-07-22T10:24:09.298616Z",
    "updated_at": "2024-07-22T10:24:09.298616Z",
    "lead_time": 1.215
  },
  {
    "text": "汉字的表示方法汉字内码汉字内码是汉字的机内代码",
    "id": 1907,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "汉字内码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "汉字",
        "labels": [
          "CW"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "汉字内码",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2656,
    "created_at": "2024-07-22T10:24:26.506735Z",
    "updated_at": "2024-07-22T10:24:26.506735Z",
    "lead_time": 16.317
  },
  {
    "text": "一般采用两个字节表示",
    "id": 1908,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2657,
    "created_at": "2024-07-22T10:24:31.539780Z",
    "updated_at": "2024-07-22T10:24:31.539780Z",
    "lead_time": 4.147
  },
  {
    "text": "为了与ASCII区别，汉字内码中两个字节的MSB规定为“”",
    "id": 1909,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "ASCII",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "汉字内码",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2658,
    "created_at": "2024-07-22T10:24:35.507642Z",
    "updated_at": "2024-07-22T10:24:42.633945Z",
    "lead_time": 7.111
  },
  {
    "text": "解补补补补补所以补码加法的特点，一是符号位要作为数的一部分参加运算二是符号位的进位要丢掉补码减法数用补码表示时，减法运算的公式为补补补补补只要证明补补上式即得证",
    "id": 1910,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2659,
    "created_at": "2024-07-22T10:24:58.037219Z",
    "updated_at": "2024-07-22T10:25:13.673984Z",
    "lead_time": 20.108
  },
  {
    "text": "现证明如下：补补补模n补补补又补补补补补补补将式与相加得补补补补补补补补补补补补故补补模n从补求补的法则：对补包括符号位“按位求反且加”，即可得到补",
    "id": 1911,
    "label": [
      {
        "start": 57,
        "end": 60,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2660,
    "created_at": "2024-07-22T10:25:37.020023Z",
    "updated_at": "2024-07-22T10:25:37.020023Z",
    "lead_time": 3.649
  },
  {
    "text": "写成运算表达式，则为其中符号表示对补作包括符号位在内的求反操作例设字长位，已知求：补补补补",
    "id": 1912,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "字长位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2661,
    "created_at": "2024-07-22T10:25:46.821067Z",
    "updated_at": "2024-07-22T10:25:46.821067Z",
    "lead_time": 9.069
  },
  {
    "text": "解补补补补补补例设字长位，求",
    "id": 1913,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "字长位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2662,
    "created_at": "2024-07-22T10:25:52.087603Z",
    "updated_at": "2024-07-22T10:25:52.087603Z",
    "lead_time": 4.456
  },
  {
    "text": "解补补补补补补所以练习设字长位，求",
    "id": 1914,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "字长位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2663,
    "created_at": "2024-07-22T10:25:57.367666Z",
    "updated_at": "2024-07-22T10:25:57.367666Z",
    "lead_time": 4.471
  },
  {
    "text": "解补补补补补补所以例求",
    "id": 1915,
    "annotator": 1,
    "annotation_id": 2664,
    "created_at": "2024-07-22T10:26:00.879441Z",
    "updated_at": "2024-07-22T10:26:00.879441Z",
    "lead_time": 2.729
  },
  {
    "text": "解补补补补补两个正数相加的结果成为负数这显然是错误的",
    "id": 1916,
    "annotator": 1,
    "annotation_id": 2665,
    "created_at": "2024-07-22T10:26:12.404420Z",
    "updated_at": "2024-07-22T10:26:12.404420Z",
    "lead_time": 3.094
  },
  {
    "text": "例求",
    "id": 1917,
    "annotator": 1,
    "annotation_id": 2666,
    "created_at": "2024-07-22T10:26:14.837593Z",
    "updated_at": "2024-07-22T10:26:18.487853Z",
    "lead_time": 3.083
  },
  {
    "text": "（恢复余数法计算）解补补被除数减余数为负q不够减，恢复余数加y右移位减余数为正q右移位减余数为负q不够减，恢复余数加右移位减余数为正q故得商qqqqq原码除法运算原理恢复余数法不恢复余数法（加减交替法）YN结束YNYN、不恢复余数的除法定点运算器的组成逻辑运算多功能算术逻辑运算单元ALU内部总线定点运算器的基本结构逻辑运算计算机中的逻辑运算，主要是指逻辑非、逻辑加、逻辑乘、逻辑异或四种基本运算",
    "id": 1918,
    "label": [
      {
        "start": 118,
        "end": 123,
        "text": "定点运算器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 144,
        "end": 148,
        "text": "内部总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 176,
        "end": 179,
        "text": "逻辑非",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 141,
        "end": 144,
        "text": "ALU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 162,
        "end": 165,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "原码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 135,
        "end": 141,
        "text": "逻辑运算单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 148,
        "end": 153,
        "text": "定点运算器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 180,
        "end": 183,
        "text": "逻辑加",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 184,
        "end": 187,
        "text": "逻辑乘",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 188,
        "end": 192,
        "text": "逻辑异或",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2667,
    "created_at": "2024-07-22T10:26:52.144018Z",
    "updated_at": "2024-07-22T10:26:52.144018Z",
    "lead_time": 31.803
  },
  {
    "text": "非运算：按位反逻辑加：按位或逻辑乘：按位与异或运算：又称“按位加”移位运算左移n位等于乘n右移n位等于除n移位和加法结合，实现乘（除）运算有符号数的移位称算术移位空出位补或无符号数的移位称逻辑移位空出位补移位运算算术移位有符号数的移位叫算术移位机器数为正时，不论左移或右移，添补代码均为",
    "id": 1919,
    "label": [
      {
        "start": 94,
        "end": 98,
        "text": "逻辑移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "左移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "右移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "逻辑加",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "逻辑乘",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 77,
        "end": 81,
        "text": "算术移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 70,
        "end": 73,
        "text": "符号数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 86,
        "end": 90,
        "text": "无符号数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 93,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 102,
        "end": 104,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "算术移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "符号数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 115,
        "end": 117,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 118,
        "end": 122,
        "text": "算术移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 122,
        "end": 125,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 131,
        "end": 133,
        "text": "左移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 136,
        "text": "右移",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2668,
    "created_at": "2024-07-22T11:25:58.045583Z",
    "updated_at": "2024-07-22T11:25:58.045583Z",
    "lead_time": 217.493
  },
  {
    "text": "负数原码在移位时符号位不变，其空位均添",
    "id": 1920,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "原码",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2669,
    "created_at": "2024-07-22T11:26:06.560457Z",
    "updated_at": "2024-07-22T11:26:06.560457Z",
    "lead_time": 8.005
  },
  {
    "text": "负数反码在移位时符号位不变，其空位均添",
    "id": 1921,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "反码",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2670,
    "created_at": "2024-07-22T11:27:23.126289Z",
    "updated_at": "2024-07-22T11:27:23.126289Z",
    "lead_time": 76.039
  },
  {
    "text": "负数补码在移位时，符号位不变，左移添，右移添补充：编码的移位实例：A，用位二进制表示，写出三种机器数左移一位、右移一位、左移两位和右移两位后的表示形式及其真值",
    "id": 1922,
    "label": [
      {
        "start": 37,
        "end": 40,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "符号位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "机器数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 77,
        "end": 79,
        "text": "真值",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "左移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "编码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "右移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "左移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "右移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "左移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "右移",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2671,
    "created_at": "2024-07-22T11:27:43.096202Z",
    "updated_at": "2024-07-22T11:27:43.096202Z",
    "lead_time": 19.54
  },
  {
    "text": "多功能算术逻辑运算单元ALU由全加器构成的加法器，可以实现补码的加法减法运算",
    "id": 1923,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "加法器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "全加器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "ALU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 11,
        "text": "算术逻辑运算单元",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2672,
    "created_at": "2024-07-22T11:27:57.195871Z",
    "updated_at": "2024-07-22T11:27:57.195871Z",
    "lead_time": 13.658
  },
  {
    "text": "问题：由于串行进位它的运算时间很长不能完成逻辑运算以加法器为核心的算术逻辑运算单元ALUArithmeticLogicUnit具有算术和逻辑运算的功能先行进位逻辑，能实现高速加法运算多功能算术逻辑运算单元ALU改变FA的输入端Ai和Bi来实现算术运算和逻辑运算功能",
    "id": 1924,
    "label": [
      {
        "start": 33,
        "end": 41,
        "text": "算术逻辑运算单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 121,
        "end": 125,
        "text": "算术运算",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "逻辑运算",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "加法器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "ALU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "串行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 94,
        "end": 102,
        "text": "算术逻辑运算单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 102,
        "end": 105,
        "text": "ALU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "逻辑运算",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 130,
        "text": "逻辑运算",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2673,
    "created_at": "2024-07-22T11:29:13.691286Z",
    "updated_at": "2024-07-22T11:29:13.691286Z",
    "lead_time": 76.043
  },
  {
    "text": "一位全加器FA将Ai和Bi输入一个函数发生器得到输出Xi和Yi，作为一位全加器的输入",
    "id": 1925,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "函数发生器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "全加器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "全加器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2674,
    "created_at": "2024-07-22T11:29:54.559920Z",
    "updated_at": "2024-07-22T11:29:54.559920Z",
    "lead_time": 40.403
  },
  {
    "text": "存器容量与地址范围的关系并行存储器加速CPU与存储器之间的数据传输的方式：采用更高速性能的存储器，加大字长采用并行操作的双端口存储器在CPU和主存之间使用高速缓存Cache在每个存储周期中存取多个字多模块交叉存储器DDR双端口存储器结构特点：具有左右两个端口，每一个端口都有独立的读写控制电路读写冲突：若左、右端口同时对相同的存储单元进行读写操作左读右写、右读左写、左写右写解决方法：判断逻辑决定对哪个端口优先进行读写操作，而暂时关闭另一个被延迟的端口，即置其忙信号BUSY",
    "id": 1926,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "并行存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 77,
        "end": 81,
        "text": "高速缓存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 102,
        "end": 107,
        "text": "交叉存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 140,
        "end": 146,
        "text": "读写控制电路",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 66,
        "text": "双端口存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 93,
        "text": "存储周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 163,
        "end": 167,
        "text": "存储单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 107,
        "end": 110,
        "text": "DDR",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 81,
        "end": 86,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 116,
        "text": "双端口存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 127,
        "end": 129,
        "text": "端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 133,
        "end": 135,
        "text": "端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 201,
        "end": 203,
        "text": "端口",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 224,
        "end": 226,
        "text": "端口",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2675,
    "created_at": "2024-07-22T11:38:59.769055Z",
    "updated_at": "2024-07-22T11:38:59.769055Z",
    "lead_time": 544.778
  },
  {
    "text": "双端口存储器IDT逻辑框图R双端口存储器读写时序CE判断：如果地址匹配且在CE之前有效，片上的控制逻辑在CEL和CER之间进行判断来选择端口",
    "id": 1927,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "双端口存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 24,
        "text": "存储器读写时序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "端口",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2676,
    "created_at": "2024-07-22T11:39:21.249529Z",
    "updated_at": "2024-07-22T11:39:21.249529Z",
    "lead_time": 20.948
  },
  {
    "text": "多模块交叉存储器设存储器由M个的独立的存储模块组成，每个模块有相同的容量和存取速度存储模块就是存储芯片存储器地址的编排方式：顺序方式和交叉方式",
    "id": 1928,
    "label": [
      {
        "start": 47,
        "end": 51,
        "text": "存储芯片",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "交叉存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 56,
        "text": "存储器地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2677,
    "created_at": "2024-07-22T11:40:23.559797Z",
    "updated_at": "2024-07-22T11:40:23.559797Z",
    "lead_time": 61.692
  },
  {
    "text": "顺序方式：地址按顺序分配给一个模块后，又按顺序为下个模块分配内存地址模块bit字bitMMMM数据总线顺序方式位地址：高位选模块，低位选块内地址故障隔离扩充容量比较方便连续地址单元在同一个模块，各模块串行工作带宽没有提升多模块交叉存储器交叉方式：两个相邻地址的物理单元不属于同一个存储模块，一般在相邻的存储模块中；同一个存储模块内的地址都不连续",
    "id": 1929,
    "label": [
      {
        "start": 30,
        "end": 36,
        "text": "内存地址模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "位地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 86,
        "end": 90,
        "text": "地址单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 113,
        "end": 118,
        "text": "交叉存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 140,
        "end": 144,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "bit",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 100,
        "end": 102,
        "text": "串行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 106,
        "text": "带宽",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "块内地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 130,
        "end": 134,
        "text": "物理单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 151,
        "end": 155,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 160,
        "end": 164,
        "text": "存储模块",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2678,
    "created_at": "2024-07-22T13:04:50.179838Z",
    "updated_at": "2024-07-22T13:04:50.179838Z",
    "lead_time": 5059.306
  },
  {
    "text": "内存地址模块bit字bitMMMM数据总线交叉方式位地址：高位选块内地址，低位选模块连续地址单元在不同同模块，各模块并行工作存储对齐（软件）交叉编址（硬件）可以系统运行速度并行存储器地址总线ABUSMMMM单字长数据总线DBUS交叉编址ARARARARCPU每个模块独立工作各模块分时使用数据总线进行信息传递",
    "id": 1930,
    "label": [
      {
        "start": 62,
        "end": 66,
        "text": "存储对齐",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 70,
        "end": 74,
        "text": "交叉编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 91,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "内存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 95,
        "text": "地址总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 129,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "bit",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 104,
        "end": 106,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 144,
        "end": 148,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 114,
        "end": 118,
        "text": "交叉编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "块内地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2679,
    "created_at": "2024-07-22T13:22:59.013309Z",
    "updated_at": "2024-07-22T13:22:59.013309Z",
    "lead_time": 1088.046
  },
  {
    "text": "流水线方式数据总线是瓶颈多体交叉存储器流水线方式存取示意图连续读取m个字所需的时间为模块内访问一个存储单元（字）的存储周期是T多体并行存储器地址总线ABUSMMMM多字长数据总线DBUS交叉编址ARARARARCPU也称为多通道优化瓶颈多模块应用两条G内存条单条G内存条性能差异？双通道内存实例bit双通道内存性能评测SiSoftwareSandraProBusinessHPDLGIntelSandyBridge新型存储器PCRAM相变储存器又称PCM和CRAM，它利用相变材料作为储存介质",
    "id": 1931,
    "label": [
      {
        "start": 12,
        "end": 19,
        "text": "多体交叉存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "存储单元",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 70,
        "text": "多体并行存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 217,
        "end": 222,
        "text": "相变储存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 191,
        "end": 196,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "存储周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 70,
        "end": 74,
        "text": "地址总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 105,
        "end": 108,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 214,
        "end": 217,
        "text": "RAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "多通道",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 147,
        "end": 150,
        "text": "bit",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 212,
        "end": 214,
        "text": "PC",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 83,
        "end": 85,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 128,
        "text": "内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 85,
        "end": 89,
        "text": "数据总线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 93,
        "end": 97,
        "text": "交叉编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 132,
        "end": 135,
        "text": "内存条",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 140,
        "end": 145,
        "text": "双通道内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 150,
        "end": 155,
        "text": "双通道内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 209,
        "end": 212,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 224,
        "end": 227,
        "text": "PCM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 228,
        "end": 232,
        "text": "CRAM",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2680,
    "created_at": "2024-07-22T13:24:27.782410Z",
    "updated_at": "2024-07-22T13:24:27.782410Z",
    "lead_time": 61.016
  },
  {
    "text": "相变材料在非晶相态时具有较高的电阻值；在结晶相态时具有较低的电阻值非易失性存储器对相变材料施加不同时长的电脉冲，使相变材料呈现出不同的结晶状态，并在两种状态之间快速切换储存密度较DRAM更高新型存储器ReRAM电阻式存储器也称RRAM，是以非导性材料（金属氧化物）为存储介质的非易失性存储器施加电压，材料的电阻在高阻态和低阻态间发生相应变化，并利用这种性质储存各种信息",
    "id": 1932,
    "label": [
      {
        "start": 33,
        "end": 40,
        "text": "非易失性存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 93,
        "text": "DRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 133,
        "end": 137,
        "text": "存储介质",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 97,
        "end": 100,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 105,
        "end": 111,
        "text": "电阻式存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 113,
        "end": 117,
        "text": "RRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 138,
        "end": 145,
        "text": "非易失性存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2681,
    "created_at": "2024-07-22T13:25:20.410828Z",
    "updated_at": "2024-07-22T13:25:20.410828Z",
    "lead_time": 52.35
  },
  {
    "text": "RRAM不仅高读写速度和高存储密度，同时延迟更低新型存储器MRAM和FRAMMRAM是一种利用磁性工作的非易失性随机存储器",
    "id": 1933,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "新型存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "存储密度",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "RAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "MRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "FRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "MRAM",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 61,
        "text": "非易失性随机存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2682,
    "created_at": "2024-07-22T13:25:40.335334Z",
    "updated_at": "2024-07-22T13:25:40.335334Z",
    "lead_time": 19.663
  },
  {
    "text": "若Cache采用全相联映射，对内存地址（FH）给出相应的标记和字号",
    "id": 1934,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "内存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "全相联映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "字号",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2683,
    "created_at": "2024-07-22T13:25:52.119500Z",
    "updated_at": "2024-07-22T13:25:52.119500Z",
    "lead_time": 11.526
  },
  {
    "text": "例：某PC主存容量为KBCache容量KB每块B",
    "id": 1935,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "主存容量",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 19,
        "text": "Cache容量",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "KB",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2684,
    "created_at": "2024-07-22T13:26:05.686457Z",
    "updated_at": "2024-07-22T13:26:05.686457Z",
    "lead_time": 13.304
  },
  {
    "text": "主存多少块？块地址多少位？Cache多少行？主存块：KK，块地址占位Cache行：K用直接映射时，Cache标记几位？位块地址中，低位定位Cache行，高位为标记用全相联映射，Cache标记几位？位例：某计算机的Cache有行，采用二路组相联映射方式，每个主存块大小为字节，按字节编址",
    "id": 1936,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 118,
        "end": 125,
        "text": "组相联映射方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 82,
        "end": 87,
        "text": "全相联映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "直接映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "块地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "主存块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 102,
        "end": 105,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 140,
        "end": 142,
        "text": "编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 136,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "块地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 56,
        "text": "Cache标记",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "块地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 75,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 95,
        "text": "Cache标记",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 111,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 128,
        "end": 131,
        "text": "主存块",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2685,
    "created_at": "2024-07-22T13:26:31.447359Z",
    "updated_at": "2024-07-22T13:26:31.447359Z",
    "lead_time": 25.476
  },
  {
    "text": "则主存号单元的主存块装如Cache的组号是：A、B、C、D、解：二路组相联，共有组，组号占位",
    "id": 1937,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "主存块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 46,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "二路组相联",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2686,
    "created_at": "2024-07-22T13:26:37.960485Z",
    "updated_at": "2024-07-22T13:26:37.960485Z",
    "lead_time": 6.236
  },
  {
    "text": "每块字节，所以块内地址占位",
    "id": 1938,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "块内地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2687,
    "created_at": "2024-07-22T13:26:41.713549Z",
    "updated_at": "2024-07-22T13:26:41.713549Z",
    "lead_time": 3.537
  },
  {
    "text": "转化为二进制：：前位为组号，组号为",
    "id": 1939,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "二进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2688,
    "created_at": "2024-07-22T13:26:45.503381Z",
    "updated_at": "2024-07-22T13:26:45.503381Z",
    "lead_time": 3.546
  },
  {
    "text": "，mod块地址块号块内偏移块内地址字地址字号替换策略当从主存向Cache传送一个新块，而Cache中可用位置已被占满时，就会产生替换问题直接映射：替换Cache中指定的一行全相联和组相联：从所有行或组内所有行中选取一行换出Cache的常用替换算法：最不经常使用LFU算法近期最少使用LRU算法随机替换策略最不经常使用LFULeastFrequentlyUsed算法每行设置一个计数器，开始计数每访问一次，被访行的计数器增",
    "id": 1940,
    "label": [
      {
        "start": 68,
        "end": 72,
        "text": "直接映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 86,
        "end": 89,
        "text": "全相联",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 130,
        "end": 135,
        "text": "LFU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 141,
        "end": 146,
        "text": "LRU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "地址块号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 188,
        "end": 191,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "字地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 53,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "块内偏移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "块内地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 80,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "组相联",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 116,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 146,
        "end": 152,
        "text": "随机替换策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 206,
        "end": 209,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2689,
    "created_at": "2024-07-22T13:27:43.926584Z",
    "updated_at": "2024-07-22T13:27:43.926584Z",
    "lead_time": 58.167
  },
  {
    "text": "当需要替换时，将计数值最小的行换出，同时将该行的计数器都清零",
    "id": 1941,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2690,
    "created_at": "2024-07-22T13:27:47.750870Z",
    "updated_at": "2024-07-22T13:27:47.750870Z",
    "lead_time": 3.565
  },
  {
    "text": "不能严格反映近期访问情况",
    "id": 1942,
    "annotator": 1,
    "annotation_id": 2691,
    "created_at": "2024-07-22T13:27:50.407516Z",
    "updated_at": "2024-07-22T13:27:50.407516Z",
    "lead_time": 2.417
  },
  {
    "text": "刚调入Cache的新行很容易被换出替换策略例子：设Cache有、、、共行全相联映射，a、b、c、d、e等为主存中的块访问顺序一次如下：a、b、c、d、c、b、c、e、d、d、ae",
    "id": 1943,
    "label": [
      {
        "start": 36,
        "end": 41,
        "text": "全相联映射",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "Cache",
        "labels": [
          "CW"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2692,
    "created_at": "2024-07-22T13:27:57.877352Z",
    "updated_at": "2024-07-22T13:27:57.877352Z",
    "lead_time": 7.248
  },
  {
    "text": "）采用LFU算法替换计数器从开始计数每访问一次，该行的计数器增",
    "id": 1944,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "LFU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2693,
    "created_at": "2024-07-22T13:28:02.432126Z",
    "updated_at": "2024-07-22T13:28:02.432126Z",
    "lead_time": 4.306
  },
  {
    "text": "将计数值最小的行换出，该行计数器清零",
    "id": 1945,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2694,
    "created_at": "2024-07-22T13:28:04.234760Z",
    "updated_at": "2024-07-22T13:28:04.234760Z",
    "lead_time": 1.55
  },
  {
    "text": "替换策略近期最少使用LRULeastRecentlyUsed的算法将近期内长久未被访问过的行换出每行设置一个计数器访问时，命中行的计数器清零，其它各行的计数器增替换时，将计数值最大的行换出保护了刚拷贝到Cache中的新行，提高了命中率随机替换随机地选取一行换出命中行的计数器清零，其它各行的计数器增将计数值最大的行换出",
    "id": 1946,
    "label": [
      {
        "start": 117,
        "end": 121,
        "text": "随机替换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 114,
        "end": 117,
        "text": "命中率",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "LRU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 79,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 101,
        "end": 106,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 137,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 145,
        "end": 148,
        "text": "计数器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2695,
    "created_at": "2024-07-22T13:28:38.281537Z",
    "updated_at": "2024-07-22T13:28:38.281537Z",
    "lead_time": 33.815
  },
  {
    "text": "Cache的写操作策略Cache的内容只是主存部分内容的副本对Cache的写入导致与主存内容的不一致三种写策略写回法（WriteBack）全写法（WriteThrough、写穿透、写直达）写一次法（WriteOnce）考虑写命中和写不命中两种情况写回法写命中：修改Cache的内容，而不立即写入主存只有当此行被替换时才写回主写未命中：首先将内存中对应块调入Cache，然后对其修改当此行换出时，写回主存特点减少了访问主存的次数存在不一致的隐患每行配置一个修改位，以反映此行是否被CPU修改过",
    "id": 1947,
    "label": [
      {
        "start": 239,
        "end": 242,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 170,
        "end": 172,
        "text": "内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "写操作",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "写策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 68,
        "text": "WriteBack",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 73,
        "end": 85,
        "text": "WriteThrough",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 94,
        "end": 98,
        "text": "写一次法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 99,
        "end": 108,
        "text": "WriteOnce",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 132,
        "end": 137,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 123,
        "end": 126,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 147,
        "end": 149,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 178,
        "end": 183,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 199,
        "end": 201,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 208,
        "end": 210,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 227,
        "end": 230,
        "text": "修改位",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2696,
    "created_at": "2024-07-22T23:55:25.778997Z",
    "updated_at": "2024-07-22T23:55:25.778997Z",
    "lead_time": 113.533
  },
  {
    "text": "被修改过的行称为脏行（dirty）例题全写法写命中时：同时写入Cache与主存写未命中时：直接向主存进行写入特点：无需增加修改位写Cache和写主存同步进行，不存在数据不一致的情况一定程度上降低了Cache的性能写一次法写回法全写法写命中时：第一次：采取全写法不是第一次：采取写回法写未命中时：与写回法相同主要用于多处理器系统InteliCache结构例题主存地址空间大小为MB，按字节编址",
    "id": 1948,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 163,
        "end": 168,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 157,
        "end": 161,
        "text": "多处理器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 193,
        "end": 195,
        "text": "编址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 191,
        "end": 193,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 187,
        "end": 189,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "脏行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "修改位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 70,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "同步",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 98,
        "end": 103,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "写一次法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 113,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 113,
        "end": 116,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 127,
        "end": 130,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 138,
        "end": 141,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 148,
        "end": 151,
        "text": "写回法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 178,
        "end": 184,
        "text": "主存地址空间",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2697,
    "created_at": "2024-07-22T23:58:33.931941Z",
    "updated_at": "2024-07-22T23:58:33.931941Z",
    "lead_time": 187.429
  },
  {
    "text": "指令数据Cache，均有行，Cache行大小为B，数据Cache直接相联",
    "id": 1949,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "Cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2698,
    "created_at": "2024-07-22T23:58:51.549735Z",
    "updated_at": "2024-07-22T23:58:51.549735Z",
    "lead_time": 17.222
  },
  {
    "text": "现有两功能相同的程序A，B，其伪代码如下所示：假定int型数据为位补码，程序编译时ijsum均分配在寄存器中，数组a按行优先方式存放，首地址为（十进制）",
    "id": 1950,
    "label": [
      {
        "start": 50,
        "end": 53,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "首地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 75,
        "text": "十进制",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "补码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "编译",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 64,
        "text": "行优先方式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2699,
    "created_at": "2024-07-22T23:59:13.942220Z",
    "updated_at": "2024-07-22T23:59:13.942220Z",
    "lead_time": 15.423
  },
  {
    "text": "）数组元素aa所在主存块对应的Cache行分别是多少，行号从零开始",
    "id": 1951,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "主存块",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "Cache行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2700,
    "created_at": "2024-07-23T00:07:43.496964Z",
    "updated_at": "2024-07-23T00:07:43.496964Z",
    "lead_time": 508.849
  },
  {
    "text": "程序A，B的数据访问命中率各是多少？那个程序的执行时间更短intaforiiiforjjjsumaijintaforjjjforiiisumaij程序A程序B虚拟存储器原因？多用户、多任务的出现，要求每个程序有自己独立的内存空间用户编程时希望不考虑实际程序的运行空间？虚拟存储器只是一个容量非常大的存储器的逻辑模型，它借助于磁盘等辅助存储器来扩大主存容量，使之为更大或更多的程序所使用",
    "id": 1952,
    "label": [
      {
        "start": 79,
        "end": 84,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 79,
        "end": 84,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "执行时间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "命中率",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 162,
        "end": 164,
        "text": "磁盘",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 102,
        "end": 104,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 114,
        "text": "内存空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 126,
        "end": 128,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 134,
        "end": 139,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 149,
        "end": 152,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 165,
        "end": 170,
        "text": "辅助存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 173,
        "end": 177,
        "text": "主存容量",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 187,
        "end": 189,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2701,
    "created_at": "2024-07-23T00:08:32.623914Z",
    "updated_at": "2024-07-23T00:08:32.623914Z",
    "lead_time": 48.753
  },
  {
    "text": "虚拟存储器实地址与虚地址用户编制程序时使用的地址称为虚地址或逻辑地址，其对应的存储空间称为虚存空间或逻辑地址空间；计算机物理内存的访问地址则称为实地址或物理地址，其对应的存储空间称为物理存储空间或主存空间",
    "id": 1953,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 80,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "存储空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "逻辑地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "虚存空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 98,
        "end": 102,
        "text": "主存空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "实地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 50,
        "end": 56,
        "text": "逻辑地址空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "物理内存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 69,
        "text": "访问地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 75,
        "text": "实地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 85,
        "end": 89,
        "text": "存储空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 97,
        "text": "物理存储空间",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2702,
    "created_at": "2024-07-23T00:13:49.170708Z",
    "updated_at": "2024-07-23T00:13:49.170708Z",
    "lead_time": 316.151
  },
  {
    "text": "程序进行虚地址到实地址转换的过程称为程序的再定位",
    "id": 1954,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "再定位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "实地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2703,
    "created_at": "2024-07-23T00:14:57.847926Z",
    "updated_at": "2024-07-23T00:14:57.847926Z",
    "lead_time": 68.277
  },
  {
    "text": "注意：物理地址由CPU地址引脚送出，用于访问主存的地址",
    "id": 1955,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "地址引脚",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2704,
    "created_at": "2024-07-23T00:15:10.298801Z",
    "updated_at": "2024-07-23T00:15:10.298801Z",
    "lead_time": 12.092
  },
  {
    "text": "虚拟地址由编译程序生成的，是程序的逻辑地址",
    "id": 1956,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "逻辑地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "编译程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2705,
    "created_at": "2024-07-23T00:16:16.472827Z",
    "updated_at": "2024-07-23T00:16:16.472827Z",
    "lead_time": 65.761
  },
  {
    "text": "主存外存层次所用的地址变换映射方法和替换策略与cache主存层次所用的方法和策略是相同的，即都基于程序局部性原理",
    "id": 1957,
    "label": [
      {
        "start": 51,
        "end": 56,
        "text": "局部性原理",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "主存外存层次",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 32,
        "text": "cache主存层次",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2706,
    "created_at": "2024-07-23T00:19:54.086031Z",
    "updated_at": "2024-07-23T00:19:54.087052Z",
    "lead_time": 217.21
  },
  {
    "text": "子程序、操作数和常数等划分到不同的段中，并且每个程序可以有多个相同类型的段",
    "id": 1958,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2707,
    "created_at": "2024-07-23T00:20:20.212060Z",
    "updated_at": "2024-07-23T00:20:20.212060Z",
    "lead_time": 25.766
  },
  {
    "text": "虚地址由段号和段内地址（偏移量）组成",
    "id": 1959,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "段内地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "偏移量",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "段号",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2708,
    "created_at": "2024-07-23T00:28:13.608932Z",
    "updated_at": "2024-07-23T00:28:13.608932Z",
    "lead_time": 472.751
  },
  {
    "text": "虚地址到实主存地址的变换通过段表实现",
    "id": 1960,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "实主存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2709,
    "created_at": "2024-07-23T00:28:27.811532Z",
    "updated_at": "2024-07-23T00:28:27.811532Z",
    "lead_time": 13.79
  },
  {
    "text": "段式虚拟存储器地址变换段页式虚拟存储器是段式虚拟存储器和页式虚拟存储器的结合",
    "id": 1961,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "段式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 19,
        "text": "段页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 27,
        "text": "段式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 35,
        "text": "页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2710,
    "created_at": "2024-07-23T00:32:41.084729Z",
    "updated_at": "2024-07-23T00:32:41.084729Z",
    "lead_time": 252.892
  },
  {
    "text": "它把程序按逻辑单位分段以后，再把每段分成固定大小的页",
    "id": 1962,
    "label": [
      {
        "start": 25,
        "end": 26,
        "text": "页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "分段",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2711,
    "created_at": "2024-07-23T00:33:01.327571Z",
    "updated_at": "2024-07-23T00:33:01.327571Z",
    "lead_time": 19.683
  },
  {
    "text": "程序对主存的调入调出是按页面进行的，但它又可以按段实现共享和保护，兼备页式和段式的优点",
    "id": 1963,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2712,
    "created_at": "2024-07-23T00:34:31.477908Z",
    "updated_at": "2024-07-23T00:34:31.477908Z",
    "lead_time": 89.484
  },
  {
    "text": "缺点是在映象过程中需要多次查表",
    "id": 1964,
    "annotator": 1,
    "annotation_id": 2713,
    "created_at": "2024-07-23T00:34:36.862915Z",
    "updated_at": "2024-07-23T00:34:36.862915Z",
    "lead_time": 4.895
  },
  {
    "text": "段页式虚拟存储器在段页式虚拟存储系统中，每道程序是通过一个段表和一组页表来进行定位的",
    "id": 1965,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "段页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 18,
        "text": "段页式虚拟存储系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2714,
    "created_at": "2024-07-23T00:34:48.113555Z",
    "updated_at": "2024-07-23T00:34:48.113555Z",
    "lead_time": 10.778
  },
  {
    "text": "段表中的每个表目对应一个段，每个表目有一个指向该段的页表起始地址及该段的控制保护信息",
    "id": 1966,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "起始地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2715,
    "created_at": "2024-07-23T00:34:58.794976Z",
    "updated_at": "2024-07-23T00:34:58.795924Z",
    "lead_time": 10.174
  },
  {
    "text": "如果有多个用户在机器上运行，多道程序的每一道需要一个基号，由它指明该道程序的段表起始地址",
    "id": 1967,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "起始地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2716,
    "created_at": "2024-07-23T00:35:11.273553Z",
    "updated_at": "2024-07-23T00:35:11.273553Z",
    "lead_time": 11.879
  },
  {
    "text": "虚拟地址格式如下：段页式虚拟存储器例假设有三道程序用户标志号为A，B，C，其基址寄存器内容分别为SA，SB，SC，逻辑地址到物理地址的变换过程如下图所示",
    "id": 1968,
    "label": [
      {
        "start": 38,
        "end": 43,
        "text": "基址寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 62,
        "end": 66,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "逻辑地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 17,
        "text": "段页式虚拟存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2717,
    "created_at": "2024-07-23T00:36:38.957742Z",
    "updated_at": "2024-07-23T00:36:38.957742Z",
    "lead_time": 87.219
  },
  {
    "text": "在主存中，每道程序都有一张段表，A程序有段，C程序有段",
    "id": 1969,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2718,
    "created_at": "2024-07-23T00:36:41.553851Z",
    "updated_at": "2024-07-23T00:36:41.553851Z",
    "lead_time": 1.952
  },
  {
    "text": "每段应有一张页表，段表的每行就表示相应页表的起始位置，而页表内的每行即为相应的物理页号",
    "id": 1970,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "物理页号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2719,
    "created_at": "2024-07-23T00:36:50.473893Z",
    "updated_at": "2024-07-23T00:36:50.473893Z",
    "lead_time": 8.397
  },
  {
    "text": "请说明虚实地址变换过程",
    "id": 1971,
    "annotator": 1,
    "annotation_id": 2720,
    "created_at": "2024-07-23T00:37:32.590828Z",
    "updated_at": "2024-07-23T00:37:32.590828Z",
    "lead_time": 41.728
  },
  {
    "text": "替换算法虚拟存储器中的页面替换策略和cache中的行替换策略有很多相似之处，但有三点显著不同：缺页至少要涉及一次磁盘存取，读取所缺的页，缺页使系统蒙受的损失要比cache未命中大得多",
    "id": 1972,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "缺页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "磁盘",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "页面替换策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "行替换策略",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "缺页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 80,
        "end": 85,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2721,
    "created_at": "2024-07-23T00:37:46.753926Z",
    "updated_at": "2024-07-23T00:37:46.753926Z",
    "lead_time": 13.839
  },
  {
    "text": "页面替换是由操作系统软件实现的",
    "id": 1973,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "页面替换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2722,
    "created_at": "2024-07-23T00:37:58.213567Z",
    "updated_at": "2024-07-23T00:37:58.213567Z",
    "lead_time": 11.05
  },
  {
    "text": "页面替换的选择余地很大，属于一个进程的页面都可替换",
    "id": 1974,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "进程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "页面替换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2723,
    "created_at": "2024-07-23T00:38:02.568369Z",
    "updated_at": "2024-07-23T00:38:08.156496Z",
    "lead_time": 7.545
  },
  {
    "text": "虚拟存储器中的替换策略一般采用LRU算法、LFU算法、FIFO算法，或将两种算法结合起来使用",
    "id": 1975,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "FIFO算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "LFU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "LRU算法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2724,
    "created_at": "2024-07-23T00:39:17.129883Z",
    "updated_at": "2024-07-23T00:39:17.129883Z",
    "lead_time": 67.855
  },
  {
    "text": "对于将被替换出去的页面，假如该页调入主存后没有被修改，就不必进行处理，否则就把该页重新写入外存，以保证外存中数据的正确性",
    "id": 1976,
    "label": [
      {
        "start": 45,
        "end": 47,
        "text": "外存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "外存",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2725,
    "created_at": "2024-07-23T00:49:44.746052Z",
    "updated_at": "2024-07-23T00:49:44.746052Z",
    "lead_time": 10.412
  },
  {
    "text": "为此，在页表的每一行应设置一修改位",
    "id": 1977,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "修改位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2726,
    "created_at": "2024-07-23T00:49:50.038192Z",
    "updated_at": "2024-07-23T00:49:50.038192Z",
    "lead_time": 4.915
  },
  {
    "text": "例假设主存只有abc三个页框，组成a进c出的FIFO队列，进程访问页面的序列是，，，，，，，，，，号",
    "id": 1978,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "FIFO",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "队列",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "进程",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "页框",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2727,
    "created_at": "2024-07-23T00:53:45.786593Z",
    "updated_at": "2024-07-23T00:53:45.786593Z",
    "lead_time": 235.406
  },
  {
    "text": "若采用FIFO算法，FIFO算法LRU算法，用列表法分别求两种替换策略情况下的命中率",
    "id": 1979,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "LRU算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "FIFO算法",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "命中率",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "FIFO算法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2728,
    "created_at": "2024-07-23T00:53:52.207309Z",
    "updated_at": "2024-07-23T00:53:52.207309Z",
    "lead_time": 5.971
  },
  {
    "text": "虚拟存储器实例奔腾PC机的虚地址模式奔腾PC的存储管理部件MMU包括分段部件SU和分页部件PU两部份，可允许SU，PU单独工作或同时工作",
    "id": 1980,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "奔腾PC",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 23,
        "end": 29,
        "text": "存储管理部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "分页部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "虚地址模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "奔腾PC",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "分段部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2729,
    "created_at": "2024-07-23T00:54:41.862003Z",
    "updated_at": "2024-07-23T00:54:41.862003Z",
    "lead_time": 49.25
  },
  {
    "text": "分段不分页模式：虚拟地址由一个位的段参照和一个位的偏移组成",
    "id": 1981,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "分段不分页模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2730,
    "created_at": "2024-07-23T00:54:51.790622Z",
    "updated_at": "2024-07-23T00:54:51.790622Z",
    "lead_time": 9.466
  },
  {
    "text": "分段部件SU将二维的分段虚拟地址转换成一维的位线性地址",
    "id": 1982,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "线性地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "分段部件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2731,
    "created_at": "2024-07-23T01:00:38.000674Z",
    "updated_at": "2024-07-23T01:00:38.000674Z",
    "lead_time": 345.807
  },
  {
    "text": "优点是无需访问页目录和页表，地址转换速度快",
    "id": 1983,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "页目录",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "地址转换",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2732,
    "created_at": "2024-07-23T01:00:48.110720Z",
    "updated_at": "2024-07-23T01:00:48.110720Z",
    "lead_time": 9.663
  },
  {
    "text": "对段提供的一些保护定义可以一直贯通到段的单个字节级",
    "id": 1984,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "字节",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2733,
    "created_at": "2024-07-23T01:01:26.977959Z",
    "updated_at": "2024-07-23T01:01:26.977959Z",
    "lead_time": 38.419
  },
  {
    "text": "分段分页模式：在分段基础上增加分页存储管理的模式",
    "id": 1985,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "分段分页模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "分页存储管理",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2734,
    "created_at": "2024-07-23T01:01:46.294741Z",
    "updated_at": "2024-07-23T01:01:46.294741Z",
    "lead_time": 18.902
  },
  {
    "text": "即将SU部件转换后的位线性地址看成由页目录、页表、页内偏移三个字段组成，再由PU部件完成两级页表的查找，将其转换成位物理地址",
    "id": 1986,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "线性地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "页目录",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "页内偏移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "两级页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 58,
        "end": 62,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2735,
    "created_at": "2024-07-23T01:02:05.145889Z",
    "updated_at": "2024-07-23T01:02:05.145889Z",
    "lead_time": 18.408
  },
  {
    "text": "兼顾了分段和分页两种方式的优点",
    "id": 1987,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "分页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "分段",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2736,
    "created_at": "2024-07-23T01:02:09.629509Z",
    "updated_at": "2024-07-23T01:02:09.629509Z",
    "lead_time": 4.041
  },
  {
    "text": "不分段分页模式：这种模式下SU不工作，只是分页部件PU工作",
    "id": 1988,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "不分段分页模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "分页部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2737,
    "created_at": "2024-07-23T01:03:39.624937Z",
    "updated_at": "2024-07-23T01:03:39.624937Z",
    "lead_time": 89.546
  },
  {
    "text": "程序也不提供段参照，寄存器提供的位地址被看成是由页目录、页表、页内偏移三个字段组成",
    "id": 1989,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "页目录",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "页内偏移",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2738,
    "created_at": "2024-07-23T01:04:23.421739Z",
    "updated_at": "2024-07-23T01:04:23.421739Z",
    "lead_time": 43.416
  },
  {
    "text": "由PU完成虚拟地址到物理地址的转换",
    "id": 1990,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "物理地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "虚拟地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2739,
    "created_at": "2024-07-23T01:04:50.422910Z",
    "updated_at": "2024-07-23T01:04:50.422910Z",
    "lead_time": 26.514
  },
  {
    "text": "这种模式减少了虚拟空间，但能提供保护机制，比分段模式具有更大的灵活性",
    "id": 1991,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "虚拟空间",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "分段模式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2740,
    "created_at": "2024-07-23T01:05:28.388982Z",
    "updated_at": "2024-07-23T01:05:28.388982Z",
    "lead_time": 37.512
  },
  {
    "text": "保护模式的分页地址转换奔腾页面大小为MB使用单级页表",
    "id": 1992,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "地址转换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "单级页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "MB",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "分页",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2741,
    "created_at": "2024-07-23T01:06:29.425236Z",
    "updated_at": "2024-07-23T01:06:29.425236Z",
    "lead_time": 60.572
  },
  {
    "text": "位线性地址分为高位的页面和低位的页内偏移两个字段",
    "id": 1993,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "页内偏移",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "线性地址",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2742,
    "created_at": "2024-07-23T01:06:38.781781Z",
    "updated_at": "2024-07-23T01:06:38.781781Z",
    "lead_time": 8.952
  },
  {
    "text": "页表项的I位指示页面大小，P位为出现位，A位为访问过位，D位为修改过位",
    "id": 1994,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2743,
    "created_at": "2024-07-23T01:06:43.790431Z",
    "updated_at": "2024-07-23T01:06:43.790431Z",
    "lead_time": 4.619
  },
  {
    "text": "RW位用于读写控制，US位用于用户监督控制，PCD位用于页cache禁止的控制，PWT位用于页全写法的控制",
    "id": 1995,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "全写法",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2744,
    "created_at": "2024-07-23T01:06:55.263776Z",
    "updated_at": "2024-07-23T01:06:55.263776Z",
    "lead_time": 11.003
  },
  {
    "text": "奔腾MB分页方式地址变换存储保护当多个用户共享主存时，就有多个用户和系统软件存于主存中，为使系统能正常工作，应防止由于一个用户程序出错而破坏其他用户的程序和系统软件，还要防止一个用户程序不合法地访问不是分配给它的主存区域",
    "id": 1996,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "奔腾MB",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 78,
        "end": 82,
        "text": "系统软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "主存区域",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "分页",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "用户程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 93,
        "text": "用户程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "存储保护",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2745,
    "created_at": "2024-07-23T01:10:01.789544Z",
    "updated_at": "2024-07-23T01:10:01.789544Z",
    "lead_time": 186.084
  },
  {
    "text": "为此，系统应提供存储保护",
    "id": 1997,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "存储保护",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2746,
    "created_at": "2024-07-23T01:10:04.711057Z",
    "updated_at": "2024-07-23T01:10:04.711057Z",
    "lead_time": 2.319
  },
  {
    "text": "通常采用的方式是：存储区域保护访问方式保护存储区域保护非虚拟存储器的主存系统可采用界限寄存器方式",
    "id": 1998,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "虚拟存储器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "界限寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2747,
    "created_at": "2024-07-23T01:10:34.540039Z",
    "updated_at": "2024-07-23T01:10:34.540039Z",
    "lead_time": 29.31
  },
  {
    "text": "由系统软件经特权指令设置上、下界寄存器，为每个程序划定存储区域，禁止越界访问",
    "id": 1999,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "系统软件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "特权指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "越界访问",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "存储区域",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2748,
    "created_at": "2024-07-23T01:10:48.818480Z",
    "updated_at": "2024-07-23T01:10:48.818480Z",
    "lead_time": 13.749
  },
  {
    "text": "界限寄存器方式只适用于每个用户占用一个或几个连续的主存区域",
    "id": 2000,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "界限寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "主存区域",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2749,
    "created_at": "2024-07-23T01:11:13.977773Z",
    "updated_at": "2024-07-23T01:11:13.977773Z",
    "lead_time": 24.58
  },
  {
    "text": "在虚拟存储系统中，通常采用页表保护、段表保护和键式保护方法",
    "id": 2001,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "虚拟存储系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "键式保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "段表保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "页表保护",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2750,
    "created_at": "2024-07-23T01:11:29.878027Z",
    "updated_at": "2024-07-23T01:11:29.878027Z",
    "lead_time": 15.086
  },
  {
    "text": "页表保护和段表保护每个程序的段表和页表本身都有自己的保护功能",
    "id": 2002,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "页表保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "段表保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2751,
    "created_at": "2024-07-23T01:11:39.180907Z",
    "updated_at": "2024-07-23T01:11:39.180907Z",
    "lead_time": 8.348
  },
  {
    "text": "每个程序的虚页号是固定的，经过虚地址向实地址变换后的实存页号也就固定了",
    "id": 2003,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "地址变换",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "虚页号",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "实存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页号",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2752,
    "created_at": "2024-07-23T01:15:25.073027Z",
    "updated_at": "2024-07-23T01:15:25.073027Z",
    "lead_time": 37.08
  },
  {
    "text": "那么不论虚地址如何出错，也只能影响到相对的几个主存页面",
    "id": 2004,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "虚地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "主存页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2753,
    "created_at": "2024-07-23T01:16:23.797943Z",
    "updated_at": "2024-07-23T01:17:06.158889Z",
    "lead_time": 61.642
  },
  {
    "text": "不会侵犯其他程序空间",
    "id": 2005,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2754,
    "created_at": "2024-07-23T01:16:26.712204Z",
    "updated_at": "2024-07-23T01:16:26.712204Z",
    "lead_time": 2.301
  },
  {
    "text": "段表和页表的保护功能相同，但段表中除包括段表起点外，还包括段长",
    "id": 2006,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "段表",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2755,
    "created_at": "2024-07-23T01:16:35.240868Z",
    "updated_at": "2024-07-23T01:16:35.240868Z",
    "lead_time": 7.887
  },
  {
    "text": "键保护方式为主存的每一页配一个键，称为存储键每个用户的实存页面的键都相同",
    "id": 2007,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储键",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "键保护",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "实存页面",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2756,
    "created_at": "2024-07-23T01:16:55.527045Z",
    "updated_at": "2024-07-23T01:16:55.527045Z",
    "lead_time": 19.631
  },
  {
    "text": "为了打开这个锁必须有钥匙，称为访问键",
    "id": 2008,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "访问键",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2757,
    "created_at": "2024-07-23T01:17:12.471916Z",
    "updated_at": "2024-07-23T01:17:12.471916Z",
    "lead_time": 2.419
  },
  {
    "text": "访问键赋予每道程序，并保存在该道程序的状态寄存器中",
    "id": 2009,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "访问键",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "状态寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2758,
    "created_at": "2024-07-23T01:17:48.231541Z",
    "updated_at": "2024-07-23T01:17:48.231541Z",
    "lead_time": 35.21
  },
  {
    "text": "当数据要写入主存的某一页时，访问键要与存储键相比较",
    "id": 2010,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储键",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "访问键",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2759,
    "created_at": "2024-07-23T01:20:29.745985Z",
    "updated_at": "2024-07-23T01:20:29.745985Z",
    "lead_time": 160.877
  },
  {
    "text": "若两键相符，则允许访问该页，否则拒绝访问",
    "id": 2011,
    "annotator": 1,
    "annotation_id": 2760,
    "created_at": "2024-07-23T01:20:46.488878Z",
    "updated_at": "2024-07-23T01:20:46.488878Z",
    "lead_time": 16.144
  },
  {
    "text": "环保护方式对正在执行的程序本身的核心部分或关键部分进行保护",
    "id": 2012,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2761,
    "created_at": "2024-07-23T01:20:50.894849Z",
    "updated_at": "2024-07-23T01:20:50.894849Z",
    "lead_time": 3.94
  },
  {
    "text": "它是按程序的重要性及对整个系统的正常运行的影响程度进行分层，每一层叫做一个环",
    "id": 2013,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2762,
    "created_at": "2024-07-23T01:20:55.328903Z",
    "updated_at": "2024-07-23T01:20:55.328903Z",
    "lead_time": 3.905
  },
  {
    "text": "在现行程序运行前由操作系统定好程序各页的环号，并置入页表中",
    "id": 2014,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "页表",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2763,
    "created_at": "2024-07-23T01:21:01.488884Z",
    "updated_at": "2024-07-23T01:21:01.488884Z",
    "lead_time": 5.646
  },
  {
    "text": "然后把该道程序的开始环号送入CPU的现行环号寄存器",
    "id": 2015,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "环号寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2764,
    "created_at": "2024-07-23T01:21:08.909780Z",
    "updated_at": "2024-07-23T01:21:08.909780Z",
    "lead_time": 6.826
  },
  {
    "text": "程序可以访问任何外层空间；访问内层空间则需由操作系统的环控例行程序判断这个向内访问是否合法",
    "id": 2016,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "操作系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2765,
    "created_at": "2024-07-23T01:21:16.321287Z",
    "updated_at": "2024-07-23T01:21:21.943958Z",
    "lead_time": 10.432
  },
  {
    "text": "访问方式保护对主存信息的使用可以有三种方式：读、写和执行",
    "id": 2017,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2766,
    "created_at": "2024-07-23T01:23:01.843108Z",
    "updated_at": "2024-07-23T01:23:01.843108Z",
    "lead_time": 98.225
  },
  {
    "text": "相应的访问方式保护就有R、W、E三种方式形成的逻辑组合",
    "id": 2018,
    "annotator": 1,
    "annotation_id": 2767,
    "created_at": "2024-07-23T01:23:05.754216Z",
    "updated_at": "2024-07-23T01:23:05.754216Z",
    "lead_time": 3.195
  },
  {
    "text": "这些访问方式保护通常作为程序状态寄存器的保护位，并且和区域保护结合起来实现",
    "id": 2019,
    "label": [
      {
        "start": 12,
        "end": 19,
        "text": "程序状态寄存器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2768,
    "created_at": "2024-07-23T01:23:16.936314Z",
    "updated_at": "2024-07-23T01:23:16.936314Z",
    "lead_time": 10.731
  },
  {
    "text": "表访问方式保护的逻辑组合本章小结对存储器的要求是容量大、速度快、成本低",
    "id": 2020,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2769,
    "created_at": "2024-07-23T01:23:26.262908Z",
    "updated_at": "2024-07-23T01:23:26.262908Z",
    "lead_time": 8.814
  },
  {
    "text": "为了解决了这三方面的矛盾，计算机采用多级存储体系结构，即cache、主存和外存",
    "id": 2021,
    "label": [
      {
        "start": 37,
        "end": 39,
        "text": "外存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 18,
        "end": 26,
        "text": "多级存储体系结构",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "cache",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2770,
    "created_at": "2024-07-23T01:23:28.774847Z",
    "updated_at": "2024-07-23T01:23:28.774847Z",
    "lead_time": 2.008
  },
  {
    "text": "递增栈：堆栈向内存地址增加的方向生长，即向上生长",
    "id": 2022,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "递增栈",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "内存地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "堆栈",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2771,
    "created_at": "2024-07-23T01:23:31.864854Z",
    "updated_at": "2024-07-23T01:23:31.864854Z",
    "lead_time": 2.596
  },
  {
    "text": "X满栈、递减栈栈指针指向最后压入堆栈的有效数据项，称为满栈（先改变SP，再放数据）；栈指针指向下一个待压入数据的空位置，称为空栈（先放数据，再改变SP）",
    "id": 2023,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "堆栈",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "栈指针",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "递减栈",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "栈指针",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2772,
    "created_at": "2024-07-23T01:23:52.533064Z",
    "updated_at": "2024-07-23T01:23:52.533064Z",
    "lead_time": 20.153
  },
  {
    "text": "x栈底栈区xx递增栈：递减栈：寻址方式举例：PentiumEA段寄存器描述符寄存器基址寄存器变址寄存器比例因子偏移量寻址方式举例：MIPS寻址方式举例：RISCV例一种二地址RS型指令的结构如下所示：位位位位位其中I为间接寻址标志位，X为寻址模式字段，A为偏移量字段",
    "id": 2024,
    "label": [
      {
        "start": 35,
        "end": 41,
        "text": "描述符寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "基址寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "变址寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 22,
        "end": 29,
        "text": "Pentium",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 87,
        "end": 92,
        "text": "RS型指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "偏移量寻址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 76,
        "end": 80,
        "text": "RISC",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 84,
        "end": 87,
        "text": "二地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "递增栈",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "递减栈",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 69,
        "end": 73,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 65,
        "end": 69,
        "text": "MIPS",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 109,
        "end": 116,
        "text": "间接寻址标志位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 119,
        "end": 123,
        "text": "寻址模式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 128,
        "end": 131,
        "text": "偏移量",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2773,
    "created_at": "2024-07-23T01:24:39.037878Z",
    "updated_at": "2024-07-23T01:24:39.037878Z",
    "lead_time": 45.876
  },
  {
    "text": "通过I，X，A的组合，可构成下表所示的寻址方式",
    "id": 2025,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2774,
    "created_at": "2024-07-23T01:26:52.330003Z",
    "updated_at": "2024-07-23T01:26:52.330003Z",
    "lead_time": 132.698
  },
  {
    "text": "请写出六种寻址方式的名称",
    "id": 2026,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2775,
    "created_at": "2024-07-23T01:26:54.550162Z",
    "updated_at": "2024-07-23T01:26:54.550162Z",
    "lead_time": 1.689
  },
  {
    "text": "OPXAPCR基寻址方式X操作数立即直接间接相对基址有效地址EAEAAEAAEAPCAEARA例设某机的指令格式、有关寄存器和主存内容如下，X为寻址方式，A为形式地址，请在下表中填入有效地址EA及操作数的值",
    "id": 2027,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "有效地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 79,
        "end": 83,
        "text": "形式地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "指令格式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "基寻址方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 91,
        "end": 95,
        "text": "有效地址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 98,
        "end": 101,
        "text": "操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 72,
        "end": 76,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2776,
    "created_at": "2024-07-23T01:29:36.940426Z",
    "updated_at": "2024-07-23T01:29:36.940426Z",
    "lead_time": 161.826
  },
  {
    "text": "？指令格式设计举例例某机字长位，采用三地址指令，支持种寻址操作，完成种操作，各寻址方式均可在K主存范围内取得操作数，并可在K范围内保存运算结果",
    "id": 2028,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "三地址指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "寻址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "指令格式",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2777,
    "created_at": "2024-07-23T01:29:49.591095Z",
    "updated_at": "2024-07-23T01:29:56.944271Z",
    "lead_time": 15.371
  },
  {
    "text": "问应采用什么样的指令格式？指令字长最少应为多少位？执行一条直接寻址模式指令最多要访问多少次主存？位指令字需占用个存储字取指需访存次，取源操作数访存次，写结果次，共次指令的分类按指令的功能：数据传送实现主存和寄存器之间，或寄存器和寄存器之间的数据传送数据处理定点或浮点算术运算，向量运算、逻辑运算与移位等程序控制用于控制程序的执行方向分支、转移、调用子程序其他指令系统控制，特权，安全等设存储字长和指令字长均为位，若指令系统可完成种操作，且具有直接、间接、变址、基址、相对和立即种寻址方式",
    "id": 2029,
    "label": [
      {
        "start": 45,
        "end": 47,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "存储字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 239,
        "end": 243,
        "text": "寻址方式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 67,
        "end": 71,
        "text": "源操作数",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "直接寻址",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "指令格式",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 143,
        "end": 147,
        "text": "逻辑运算",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 103,
        "end": 106,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "指令字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 148,
        "end": 150,
        "text": "移位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 151,
        "end": 153,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "取指",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 128,
        "end": 130,
        "text": "定点",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "指令字",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 82,
        "end": 84,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 90,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 100,
        "end": 102,
        "text": "主存",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 110,
        "end": 113,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 114,
        "end": 117,
        "text": "寄存器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 131,
        "end": 137,
        "text": "浮点算术运算",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 159,
        "end": 161,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 198,
        "end": 202,
        "text": "指令字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 193,
        "end": 197,
        "text": "存储字长",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 207,
        "end": 211,
        "text": "指令系统",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2778,
    "created_at": "2024-07-23T01:31:32.932667Z",
    "updated_at": "2024-07-23T01:31:32.932667Z",
    "lead_time": 94.154
  },
  {
    "text": "计算机的并行处理技术主要有以下三种形式：时间并行空间并行时间并行空间并行时间并行让多个处理过程在时间上相互错开，轮流重叠地使用同一套硬件设备的各个部分，以加快硬件周转而赢得速度",
    "id": 2030,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 79,
        "end": 81,
        "text": "硬件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2779,
    "created_at": "2024-07-23T01:31:48.138285Z",
    "updated_at": "2024-07-23T01:31:48.138285Z",
    "lead_time": 14.491
  },
  {
    "text": "实现方式是采用流水处理部件",
    "id": 2031,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "流水处理部件",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2780,
    "created_at": "2024-07-23T01:31:55.309294Z",
    "updated_at": "2024-07-23T01:31:55.309294Z",
    "lead_time": 6.551
  },
  {
    "text": "目前的高性能微型机几乎无一例外地使用了流水技术",
    "id": 2032,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "微型机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "流水",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2781,
    "created_at": "2024-07-23T01:31:59.163923Z",
    "updated_at": "2024-07-23T01:31:59.163923Z",
    "lead_time": 3.34
  },
  {
    "text": "并行处理技术并行处理技术空间并行指资源重复（空间因素），以“数量取胜”VLSI为其提供了技术保证",
    "id": 2033,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2782,
    "created_at": "2024-07-23T01:32:08.172873Z",
    "updated_at": "2024-07-23T01:32:08.172873Z",
    "lead_time": 8.482
  },
  {
    "text": "时间并行空间并行指时间重叠和资源重复的综合应用流水线原理时间并行把任务分成若干子任务，使子任务在流水线的各阶段并发地执行空间并行资源重复多处理器系统和多计算机系统时间并行空间并行时间重叠和资源重复的综合应用",
    "id": 2034,
    "label": [
      {
        "start": 68,
        "end": 74,
        "text": "多处理器系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 81,
        "text": "多计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 81,
        "end": 85,
        "text": "时间并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 85,
        "end": 89,
        "text": "空间并行",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2783,
    "created_at": "2024-07-23T01:32:36.551876Z",
    "updated_at": "2024-07-23T01:32:36.551876Z",
    "lead_time": 27.812
  },
  {
    "text": "奔腾CPU采用超标量流水技术，一个机器周期执行两条指令",
    "id": 2035,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "奔腾CPU",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "机器周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 7,
        "end": 14,
        "text": "超标量流水技术",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2784,
    "created_at": "2024-07-23T01:33:46.875326Z",
    "updated_at": "2024-07-23T01:33:46.875326Z",
    "lead_time": 69.754
  },
  {
    "text": "指令周期细分取指令IFInstructionFetch指令译码IDInstructionDecode执行运算EXExecution访存阶段MEM结果写回WBWriteBack一条指令不一定经历所有阶段IFIDEXMEMWB非流水线时空图流水线时空图完成N条指令需要的时间n超标量流水线时空图时间TIFIDEXWB空间SIIIIIIIIIIIIIIIIII具有两条以上的指令流水线",
    "id": 2036,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "取指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 136,
        "end": 142,
        "text": "超标量流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 184,
        "end": 189,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "指令译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 112,
        "end": 115,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 115,
        "end": 118,
        "text": "时空图",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 128,
        "end": 130,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2785,
    "created_at": "2024-07-23T01:34:06.571388Z",
    "updated_at": "2024-07-23T01:34:06.571388Z",
    "lead_time": 13.49
  },
  {
    "text": "满载时，每一时钟周期可以执行条指令II流水线分类指令流水线取指译码取数执行算术流水线加法器乘法器快速傅里叶变换器处理机流水线由一串级连的处理机组成每台处理机负责某一特定任务一个计算机系统可以在不同的并行等级上采用流水线常见流水线有：处理机流水线：程序步骤的并行由一串级联的处理机构成流水线的各个过程段，每台处理机负责某一特定的任务",
    "id": 2037,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 48,
        "end": 56,
        "text": "快速傅里叶变换器",
        "labels": [
          "PROD"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "指令流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "时钟周期",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "乘法器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 123,
        "end": 125,
        "text": "程序",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "译码",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "取指",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 99,
        "end": 101,
        "text": "并行",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "加法器",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 75,
        "end": 78,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 88,
        "end": 93,
        "text": "计算机系统",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 106,
        "end": 109,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 116,
        "end": 122,
        "text": "处理机流水线",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 153,
        "end": 156,
        "text": "处理机",
        "labels": [
          "PCC"
        ]
      },
      {
        "start": 141,
        "end": 144,
        "text": "流水线",
        "labels": [
          "PCC"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 2786,
    "created_at": "2024-07-23T01:34:54.780949Z",
    "updated_at": "2024-07-23T01:34:54.780949Z",
    "lead_time": 47.742
  }
]
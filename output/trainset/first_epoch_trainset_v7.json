[
  {
    "text": "双倍数据率结构本质上是一个n预取结构，如图所示",
    "id": 3593,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "预取结构",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5026,
    "created_at": "2024-08-01T12:11:01.323961Z",
    "updated_at": "2024-08-01T12:11:01.323961Z",
    "lead_time": 1.193
  },
  {
    "text": "随机替换随机替换策略实际上是不要什么算法，从特定的行位置中随机地选取一行换出即可",
    "id": 3594,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "随机替换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "随机替换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5027,
    "created_at": "2024-08-01T12:11:03.657045Z",
    "updated_at": "2024-08-01T12:11:03.657045Z",
    "lead_time": 2.057
  },
  {
    "text": "个位数据IO端口DD同时与位数据总线交换数据，完成一次位的存取",
    "id": 3595,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "IO端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5028,
    "created_at": "2024-08-01T12:11:07.016586Z",
    "updated_at": "2024-08-01T12:11:07.016586Z",
    "lead_time": 3.116
  },
  {
    "text": "对控制存储器的要求是速度快，读出周期要短",
    "id": 3596,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5029,
    "created_at": "2024-08-01T12:11:09.693547Z",
    "updated_at": "2024-08-01T12:11:09.693547Z",
    "lead_time": 2.429
  },
  {
    "text": "优点是盘片可以脱机保存，同种型号的盘片具有互换性",
    "id": 3597,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5030,
    "created_at": "2024-08-01T12:11:09.973357Z",
    "updated_at": "2024-08-01T12:11:09.973357Z",
    "lead_time": 0.037
  },
  {
    "text": "如图所示，读写周期波形图精确地反映了SRAM工作的时间关系",
    "id": 3598,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "波形图",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5031,
    "created_at": "2024-08-01T12:11:10.310864Z",
    "updated_at": "2024-08-01T12:11:10.310864Z",
    "lead_time": 0.05
  },
  {
    "text": "如果这条指令无间址和变址的要求，那么形式地址就是操作数的有效地址",
    "id": 3599,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "变址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5032,
    "created_at": "2024-08-01T12:11:16.824022Z",
    "updated_at": "2024-08-01T12:11:16.824022Z",
    "lead_time": 6.097
  },
  {
    "text": "例如，字寻址每次访存读写一个存储字，半字寻址每次访存读写半个存储字，字节寻址则每次访存读写一字节",
    "id": 3600,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "字寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "字节寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "半字寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5033,
    "created_at": "2024-08-01T12:11:17.418911Z",
    "updated_at": "2024-08-01T12:11:17.418911Z",
    "lead_time": 0.057
  },
  {
    "text": "就是说是对的补码，可以用数学公式表示为modmod的意思就是为模数，这个“模”表示被丢掉的数值",
    "id": 3601,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "模数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5034,
    "created_at": "2024-08-01T12:11:20.486573Z",
    "updated_at": "2024-08-01T12:11:20.486573Z",
    "lead_time": 2.282
  },
  {
    "text": "例如，如果有一个输入数是从存储器来的，且运算结果又送回存储器，那么限制数据传送速度的主要因素是存储器访问时间",
    "id": 3602,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 54,
        "text": "存储器访问时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5035,
    "created_at": "2024-08-01T12:11:21.014472Z",
    "updated_at": "2024-08-01T12:11:21.014472Z",
    "lead_time": 0.052
  },
  {
    "text": "cache的命中率从CPU来看，增加cache的目的，就是在性能上使主存的平均读出时间尽可能接近cache的读出时间",
    "id": 3603,
    "label": [
      {
        "start": 34,
        "end": 36,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 37,
        "end": 43,
        "text": "平均读出时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "读出时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5036,
    "created_at": "2024-08-01T12:11:36.046514Z",
    "updated_at": "2024-08-01T12:11:36.046514Z",
    "lead_time": 14.555
  },
  {
    "text": "下面说明由原码表示法变成补码表示法的方法",
    "id": 3604,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5037,
    "created_at": "2024-08-01T12:11:36.865753Z",
    "updated_at": "2024-08-01T12:11:36.865753Z",
    "lead_time": 0.412
  },
  {
    "text": "运算方法和运算器是本章的重点",
    "id": 3605,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5038,
    "created_at": "2024-08-01T12:11:37.321548Z",
    "updated_at": "2024-08-01T12:11:37.321548Z",
    "lead_time": 0.033
  },
  {
    "text": "为了与英文字符能相互区别，汉字机内代码中字节的最高位均规定为“”",
    "id": 3606,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5039,
    "created_at": "2024-08-01T12:11:37.834108Z",
    "updated_at": "2024-08-01T12:11:37.834108Z",
    "lead_time": 0.045
  },
  {
    "text": "由于大型机、微型机和单片机结构不同，从而形成了各种不同的操作数寻址方式",
    "id": 3607,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "大型机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5040,
    "created_at": "2024-08-01T12:11:38.455808Z",
    "updated_at": "2024-08-01T12:11:38.455808Z",
    "lead_time": 0.05
  },
  {
    "text": "然而串行方法毕竟太慢，不能满足科学技术对高速乘法所提出的要求",
    "id": 3608,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "科学技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5041,
    "created_at": "2024-08-01T12:11:39.111180Z",
    "updated_at": "2024-08-01T12:11:39.111180Z",
    "lead_time": 0.056
  },
  {
    "text": "显然，在测试一个状态时，有两条微指令作为要执行的下一条微指令的“候选”微指令",
    "id": 3609,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5042,
    "created_at": "2024-08-01T12:11:39.764833Z",
    "updated_at": "2024-08-01T12:11:39.764833Z",
    "lead_time": 0.061
  },
  {
    "text": "在磁道上，信息是按区存放的，每个区中存放一定数量的字或字节，各个区存放的字或字节数是相同的",
    "id": 3610,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5043,
    "created_at": "2024-08-01T12:11:40.317548Z",
    "updated_at": "2024-08-01T12:11:40.317548Z",
    "lead_time": 0.058
  },
  {
    "text": "由于程序是一个指令序列，这些指令的相互顺序不能任意颠倒，必须严格按程序规定的顺序进行，因此，保证机器按顺序执行程序是CPU的首要任务",
    "id": 3611,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "指令序列",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5044,
    "created_at": "2024-08-01T12:11:41.027864Z",
    "updated_at": "2024-08-01T12:11:41.027864Z",
    "lead_time": 0.071
  },
  {
    "text": "如果我们规定按图中所示电流方向为写“”，那么写线圈里通以相反方向的电流时即为写“”",
    "id": 3612,
    "annotator": 1,
    "annotation_id": 5045,
    "created_at": "2024-08-01T12:11:41.937707Z",
    "updated_at": "2024-08-01T12:11:41.937707Z",
    "lead_time": 0.05
  },
  {
    "text": "为了解决数据相关冲突，流水CPU的运算器中特意设置若干运算结果缓冲寄存器，暂时保留运算结果，以便于后继指令直接使用，这称为“向前”或定向传送技术",
    "id": 3613,
    "label": [
      {
        "start": 31,
        "end": 36,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "流水CPU",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 66,
        "end": 72,
        "text": "定向传送技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5046,
    "created_at": "2024-08-01T12:11:42.736918Z",
    "updated_at": "2024-08-01T12:11:42.736918Z",
    "lead_time": 0.084
  },
  {
    "text": "半同步总线协定在同步总线协定的基础上仅仅增加了一点点成本，但适应能力却大大提升",
    "id": 3614,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "半同步总线协定",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 8,
        "end": 14,
        "text": "同步总线协定",
        "labels": [
          "PROT"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5047,
    "created_at": "2024-08-01T12:11:43.499901Z",
    "updated_at": "2024-08-01T12:11:43.499901Z",
    "lead_time": 0.047
  },
  {
    "text": "由于操作数的地址直接给出而不需要经过某种变换，所以称这种寻址方式为直接寻址方式",
    "id": 3615,
    "label": [
      {
        "start": 33,
        "end": 39,
        "text": "直接寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5048,
    "created_at": "2024-08-01T12:11:44.605736Z",
    "updated_at": "2024-08-01T12:11:44.605736Z",
    "lead_time": 0.44
  },
  {
    "text": "一般来说，地址字段的值在这种操作下被看成的补码数的值",
    "id": 3616,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5049,
    "created_at": "2024-08-01T12:11:45.433156Z",
    "updated_at": "2024-08-01T12:11:45.434153Z",
    "lead_time": 0.061
  },
  {
    "text": "工作时，高速旋转在盘面上形成的气垫将磁头平稳浮起",
    "id": 3617,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "盘面",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5050,
    "created_at": "2024-08-01T12:11:49.514582Z",
    "updated_at": "2024-08-01T12:11:49.514582Z",
    "lead_time": 3.349
  },
  {
    "text": "写操作时，桥把上层总线的写周期先缓存起来，以后的时间再在下层总线上生成写周期，即延迟写",
    "id": 3618,
    "label": [
      {
        "start": 5,
        "end": 6,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "缓存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5051,
    "created_at": "2024-08-01T12:11:56.997003Z",
    "updated_at": "2024-08-01T12:11:56.997003Z",
    "lead_time": 6.455
  },
  {
    "text": "由于计算机使用的信息既有指令又有数据，所以计算机字既可以代表指令，也可以代表数据",
    "id": 3619,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "计算机字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5052,
    "created_at": "2024-08-01T12:11:57.786356Z",
    "updated_at": "2024-08-01T12:11:57.786356Z",
    "lead_time": 0.071
  },
  {
    "text": "假定表的程序已装入指存中，因而在此阶段内，CPU的动作如下：程序计数器PC中装入第一条指令地址八进制；PC的内容被放到指令地址总线ABUSI上，对指存进行译码，并启动读命令；从号地址读出的MOV指令通过指令总线IBUS装入指令寄存器IR；程序计数器内容加，变成，为取下一条指令做好准备；指令寄存器中的操作码OP被译码；CPU识别出是MOV指令",
    "id": 3620,
    "label": [
      {
        "start": 111,
        "end": 116,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 150,
        "end": 153,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "八进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 70,
        "text": "ABUSI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 77,
        "end": 79,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 116,
        "end": 118,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 119,
        "end": 124,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 143,
        "end": 148,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 153,
        "end": 155,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 159,
        "end": 162,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 94,
        "end": 99,
        "text": "MOV指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 166,
        "end": 171,
        "text": "MOV指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 101,
        "end": 105,
        "text": "指令总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 105,
        "end": 109,
        "text": "IBUS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 136,
        "end": 138,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 156,
        "end": 158,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5053,
    "created_at": "2024-08-01T12:11:58.544890Z",
    "updated_at": "2024-08-01T12:11:58.544890Z",
    "lead_time": 0.105
  },
  {
    "text": "RISC指令系统的最大特点是：选取使用频率最高的一些简单指令，指令条数少；指令长度固定，指令格式种类少，寻址方式种类少；只有取数存数指令访问存储器，其余指令的操作都在寄存器之间进行",
    "id": 3621,
    "label": [
      {
        "start": 70,
        "end": 73,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 83,
        "end": 86,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 76,
        "end": 78,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5054,
    "created_at": "2024-08-01T12:12:07.039506Z",
    "updated_at": "2024-08-01T12:12:07.039506Z",
    "lead_time": 7.618
  },
  {
    "text": "移位时，若寄存器的数为逻辑数，则左移或右移时，所有位一起移位，这种移位称逻辑移位",
    "id": 3622,
    "label": [
      {
        "start": 36,
        "end": 40,
        "text": "逻辑移位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "逻辑数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "左移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5055,
    "created_at": "2024-08-01T12:12:07.913599Z",
    "updated_at": "2024-08-01T12:12:07.913599Z",
    "lead_time": 0.095
  },
  {
    "text": "从这个简单的控制模型中，我们就可以看到微程序控制的主要思想及大概过程",
    "id": 3623,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5056,
    "created_at": "2024-08-01T12:12:08.645322Z",
    "updated_at": "2024-08-01T12:12:08.645322Z",
    "lead_time": 0.048
  },
  {
    "text": "程序中使用的是位线性地址，由分页部件将其转换成位物理地址",
    "id": 3624,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "分页部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5057,
    "created_at": "2024-08-01T12:12:09.411786Z",
    "updated_at": "2024-08-01T12:12:09.411786Z",
    "lead_time": 0.07
  },
  {
    "text": "CDRAMCDRAMCachedDRAM是一种附带高速缓冲存储器的动态存储器，它是在常规的DRAM芯片封装内又集成了一个小容量SRAM作为高速缓冲存储器，从而使DRAM芯片的访问速度得到显著提升",
    "id": 3625,
    "label": [
      {
        "start": 63,
        "end": 67,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 32,
        "text": "高速缓冲存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 20,
        "text": "CachedDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "动态存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 69,
        "end": 76,
        "text": "高速缓冲存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 80,
        "end": 84,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 84,
        "end": 86,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5058,
    "created_at": "2024-08-01T12:12:10.687648Z",
    "updated_at": "2024-08-01T12:12:10.687648Z",
    "lead_time": 0.095
  },
  {
    "text": "早期将运算器和控制器合在一起称为CPU中央处理器",
    "id": 3626,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "中央处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5059,
    "created_at": "2024-08-01T12:12:14.851595Z",
    "updated_at": "2024-08-01T12:12:14.851595Z",
    "lead_time": 3.478
  },
  {
    "text": "参见图b，n位n位不带符号的阵列乘法器总的乘法时间估算为对带符号的阵列乘法器的结构来说，按其所用的数的表示方法而有所不同",
    "id": 3627,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5060,
    "created_at": "2024-08-01T12:12:15.641273Z",
    "updated_at": "2024-08-01T12:12:15.641273Z",
    "lead_time": 0.065
  },
  {
    "text": "最上层为印刷的盘标",
    "id": 3628,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "盘标",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5061,
    "created_at": "2024-08-01T12:12:16.305693Z",
    "updated_at": "2024-08-01T12:12:16.305693Z",
    "lead_time": 0.042
  },
  {
    "text": "控制器是计算机中发号施令的部件，它控制计算机的各部件有条不紊地进行工作",
    "id": 3629,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5062,
    "created_at": "2024-08-01T12:12:17.003497Z",
    "updated_at": "2024-08-01T12:12:17.003497Z",
    "lead_time": 0.055
  },
  {
    "text": "采用这种方式时，将浮点数的指数真值e变成阶码E时，应将指数e加上一个固定的偏置常数，即Ee",
    "id": 3630,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5063,
    "created_at": "2024-08-01T12:12:18.060447Z",
    "updated_at": "2024-08-01T12:12:18.060447Z",
    "lead_time": 0.075
  },
  {
    "text": "现代计算机中已广泛采用了流水的算术运算器",
    "id": 3631,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "算术运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5064,
    "created_at": "2024-08-01T12:12:18.798121Z",
    "updated_at": "2024-08-01T12:12:18.798121Z",
    "lead_time": 0.056
  },
  {
    "text": "电位的高低，表示数据是还是，而且要求打入数据的控制信号到来之前，电位信号必须已稳定",
    "id": 3632,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5065,
    "created_at": "2024-08-01T12:12:19.525343Z",
    "updated_at": "2024-08-01T12:12:19.525343Z",
    "lead_time": 0.061
  },
  {
    "text": "而ROM是非易失性存储器",
    "id": 3633,
    "label": [
      {
        "start": 5,
        "end": 12,
        "text": "非易失性存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5066,
    "created_at": "2024-08-01T12:12:42.451753Z",
    "updated_at": "2024-08-01T12:12:42.451753Z",
    "lead_time": 22.251
  },
  {
    "text": "编码表示法编码表示法是把一组相斥性的微命令信号组成一个小组即一个字段，然后通过小组字段译码器对每一个微命令信号进行译码，译码输出作为操作控制信号，其微指令结构如图所示",
    "id": 3634,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "编码表示法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 66,
        "end": 72,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "编码表示法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "译码器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5067,
    "created_at": "2024-08-01T12:12:43.809122Z",
    "updated_at": "2024-08-01T12:12:43.810126Z",
    "lead_time": 0.571
  },
  {
    "text": "常见的串行EPROM支持SPI、IC、Microwire或Wire等至线的串行总线，芯片封装只需个或者更少的引脚",
    "id": 3635,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "SPI",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "IC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 28,
        "text": "Microwire",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "Wire",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "串行总线",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5068,
    "created_at": "2024-08-01T12:12:45.233080Z",
    "updated_at": "2024-08-01T12:12:45.233080Z",
    "lead_time": 0.438
  },
  {
    "text": "总线的标准化相同的指令系统，相同的功能，不同厂家生产的各功能部件在实现方法上几乎没有相同的，但各厂家生产的相同功能部件却可以互换使用，其原因何在呢就是因为它们都遵守了相同的系统总线的要求，这就是系统总线的标准化问题",
    "id": 3636,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 86,
        "end": 90,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 97,
        "end": 101,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5069,
    "created_at": "2024-08-01T12:12:47.297637Z",
    "updated_at": "2024-08-01T12:12:47.297637Z",
    "lead_time": 1.161
  },
  {
    "text": "指令系统中的指令数目一般少于种，指令格式一般少于种",
    "id": 3637,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5070,
    "created_at": "2024-08-01T12:12:48.274142Z",
    "updated_at": "2024-08-01T12:12:48.274142Z",
    "lead_time": 0.079
  },
  {
    "text": "每一种设备，都是在它自己的设备控制器控制下进行工作的，而设备控制器则通过IO接口模块和主机相连，并受主机控制",
    "id": 3638,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5071,
    "created_at": "2024-08-01T12:12:49.201657Z",
    "updated_at": "2024-08-01T12:12:49.201657Z",
    "lead_time": 0.09
  },
  {
    "text": "Pentium能处理位字节、位字、位双字、位四字各种长度的数据类型",
    "id": 3639,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5072,
    "created_at": "2024-08-01T12:12:50.643922Z",
    "updated_at": "2024-08-01T12:12:50.643922Z",
    "lead_time": 0.484
  },
  {
    "text": "那么计算机靠什么东西才能变“活”，从而高速自动地完成各种运算呢这就是前面讲过的计算程序",
    "id": 3640,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5073,
    "created_at": "2024-08-01T12:12:51.688248Z",
    "updated_at": "2024-08-01T12:12:51.688248Z",
    "lead_time": 0.077
  },
  {
    "text": "操作控制部分用来发出管理和指挥全机工作的控制信号",
    "id": 3641,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "操作控制部分",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5074,
    "created_at": "2024-08-01T12:12:53.207127Z",
    "updated_at": "2024-08-01T12:12:53.207127Z",
    "lead_time": 0.667
  },
  {
    "text": "商q是一个位的小数：qqqq它在阵列的左边产生",
    "id": 3642,
    "label": [
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5075,
    "created_at": "2024-08-01T12:12:54.057186Z",
    "updated_at": "2024-08-01T12:12:54.057186Z",
    "lead_time": 0.08
  },
  {
    "text": "SDRAM的命令图给出了SDRAM读和写命令操作的时序，可以看出SDRAM的命令发送方式",
    "id": 3643,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "命令图",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5076,
    "created_at": "2024-08-01T12:12:54.876138Z",
    "updated_at": "2024-08-01T12:12:54.876138Z",
    "lead_time": 0.082
  },
  {
    "text": "大规模和超大规模集成电路的迅速发展为空间并行技术带来了巨大生机，因而成为目前实现并行处理的一个主要途径",
    "id": 3644,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 24,
        "text": "空间并行技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5077,
    "created_at": "2024-08-01T12:12:55.719001Z",
    "updated_at": "2024-08-01T12:12:55.719001Z",
    "lead_time": 0.085
  },
  {
    "text": "根据总线所处的位置，总线分为内部总线和外部总线两类",
    "id": 3645,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "内部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "外部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5078,
    "created_at": "2024-08-01T12:12:56.638983Z",
    "updated_at": "2024-08-01T12:12:56.638983Z",
    "lead_time": 0.098
  },
  {
    "text": "不同的CRT显示标准所支持的最大分辨率和颜色数目是不同的",
    "id": 3646,
    "label": [
      {
        "start": 3,
        "end": 10,
        "text": "CRT显示标准",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5079,
    "created_at": "2024-08-01T12:12:57.851886Z",
    "updated_at": "2024-08-01T12:12:57.851886Z",
    "lead_time": 0.377
  },
  {
    "text": "它的地址线共条，其中x方向条AA，经行译码输出行，y方向条AA，经列译码输出列，存储阵列为三维结构，即行列位",
    "id": 3647,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 53,
        "end": 54,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "存储阵列",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "行译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "列译码",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5080,
    "created_at": "2024-08-01T12:12:59.168199Z",
    "updated_at": "2024-08-01T12:12:59.168199Z",
    "lead_time": 0.574
  },
  {
    "text": "其中G称为成组进位发生输出，P称为成组进位传送输出",
    "id": 3648,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "成组进位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "成组进位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5081,
    "created_at": "2024-08-01T12:13:00.086329Z",
    "updated_at": "2024-08-01T12:13:00.086329Z",
    "lead_time": 0.253
  },
  {
    "text": "另外，在微指令中还可附设一个常数字段",
    "id": 3649,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5082,
    "created_at": "2024-08-01T12:13:01.120530Z",
    "updated_at": "2024-08-01T12:13:01.120530Z",
    "lead_time": 0.392
  },
  {
    "text": "表比较了RISC和CICS的性能",
    "id": 3650,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "CICS",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5083,
    "created_at": "2024-08-01T12:13:02.121036Z",
    "updated_at": "2024-08-01T12:13:02.121036Z",
    "lead_time": 0.238
  },
  {
    "text": "这一级也是硬件级",
    "id": 3651,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "硬件级",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5084,
    "created_at": "2024-08-01T12:13:02.954058Z",
    "updated_at": "2024-08-01T12:13:02.954058Z",
    "lead_time": 0.133
  },
  {
    "text": "故平均访问时间近似等于平均寻道时间平均等待时间，即平均寻址时间",
    "id": 3652,
    "label": [
      {
        "start": 25,
        "end": 31,
        "text": "平均寻址时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "平均访问时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "平均寻道时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 17,
        "end": 23,
        "text": "平均等待时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5085,
    "created_at": "2024-08-01T12:14:39.986503Z",
    "updated_at": "2024-08-01T12:14:39.986503Z",
    "lead_time": 96.388
  },
  {
    "text": "否则，指令必须停顿等待这些位被清除",
    "id": 3653,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5086,
    "created_at": "2024-08-01T12:14:41.005028Z",
    "updated_at": "2024-08-01T12:14:41.005028Z",
    "lead_time": 0.523
  },
  {
    "text": "“模拟”就是相似的意思，例如计算尺是用长度来标示数值；时钟是用指针在表盘上转动来表示时间；电表是用角度来反映电量大小，这些都是模拟计算装置",
    "id": 3654,
    "label": [
      {
        "start": 31,
        "end": 33,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5087,
    "created_at": "2024-08-01T12:14:42.059811Z",
    "updated_at": "2024-08-01T12:14:42.059811Z",
    "lead_time": 0.503
  },
  {
    "text": "为了解决这三方面的矛盾，计算机采用多级存储体系结构，即cache、主存和外存",
    "id": 3655,
    "label": [
      {
        "start": 36,
        "end": 38,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 25,
        "text": "多级存储体系结构",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5088,
    "created_at": "2024-08-01T12:14:43.582297Z",
    "updated_at": "2024-08-01T12:14:43.582297Z",
    "lead_time": 0.985
  },
  {
    "text": "如果这些指令是与Ib结果无关的有用指令，那么延迟损失时间片正好得到了有效的利用",
    "id": 3656,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "时间片",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5089,
    "created_at": "2024-08-01T12:14:45.212948Z",
    "updated_at": "2024-08-01T12:14:45.212948Z",
    "lead_time": 1.014
  },
  {
    "text": "存储器读写周期时，在行选通信号RAS有效下输入行地址，在列选通信号CAS有效下输入列地址，于是芯片中行列矩阵中的某一位组被选中",
    "id": 3657,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 59,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "行选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "列选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5090,
    "created_at": "2024-08-01T12:14:46.222886Z",
    "updated_at": "2024-08-01T12:14:46.222886Z",
    "lead_time": 0.445
  },
  {
    "text": "因为一个主存块只能在一个特定组的两行中来做存放选择，二选一完全不需要计数器，只需一个二进制位即可",
    "id": 3658,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 46,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5091,
    "created_at": "2024-08-01T12:14:47.709911Z",
    "updated_at": "2024-08-01T12:14:47.709911Z",
    "lead_time": 0.759
  },
  {
    "text": "在微程序控制器中，时序信号比较简单，一般采用节拍电位节拍脉冲二级体制",
    "id": 3659,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "电位节拍",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5092,
    "created_at": "2024-08-01T12:14:49.203625Z",
    "updated_at": "2024-08-01T12:14:49.203625Z",
    "lead_time": 0.976
  },
  {
    "text": "除了磁道号和扇区号，还有记录面的面号，以说明本次处理是在哪一个记录面上",
    "id": 3660,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "记录面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "记录面",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5093,
    "created_at": "2024-08-01T12:14:50.462204Z",
    "updated_at": "2024-08-01T12:14:50.462204Z",
    "lead_time": 0.717
  },
  {
    "text": "时间并行空间并行指时间重叠和资源重复的综合应用，既采用时间并行性又采用空间并行性",
    "id": 3661,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5094,
    "created_at": "2024-08-01T12:14:52.059253Z",
    "updated_at": "2024-08-01T12:14:52.059253Z",
    "lead_time": 1.117
  },
  {
    "text": "对图a所示的一位全加器FA来说，求和结果Si的时间延迟为T每级异或门延迟T",
    "id": 3662,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "异或门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5095,
    "created_at": "2024-08-01T12:14:53.092524Z",
    "updated_at": "2024-08-01T12:14:53.092524Z",
    "lead_time": 0.525
  },
  {
    "text": "思考题你能举出工厂中的生产流水线实例吗？流水线浮点加法器从图看出，浮点加减法由操作数检查、对阶操作、尾数操作、结果规格化及舍入处理共步完成，因此流水线浮点加法器可由个过程段组成",
    "id": 3663,
    "label": [
      {
        "start": 20,
        "end": 28,
        "text": "流水线浮点加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "结果规格化",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 72,
        "end": 80,
        "text": "流水线浮点加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5096,
    "created_at": "2024-08-01T12:14:54.890797Z",
    "updated_at": "2024-08-01T12:14:54.890797Z",
    "lead_time": 1.295
  },
  {
    "text": "CDRAM在常规DRAM的基础上增加了一点成本，但是有几个明显的优点",
    "id": 3664,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5097,
    "created_at": "2024-08-01T12:14:56.532345Z",
    "updated_at": "2024-08-01T12:14:56.532345Z",
    "lead_time": 1.084
  },
  {
    "text": "用T作为读取微指令的时间，用TTT时间作为执行微指令的时间",
    "id": 3665,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5098,
    "created_at": "2024-08-01T12:14:57.832109Z",
    "updated_at": "2024-08-01T12:14:57.832109Z",
    "lead_time": 0.784
  },
  {
    "text": "在机器中表示一个浮点数时，一是要给出尾数，用定点小数形式表示",
    "id": 3666,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "定点小数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5099,
    "created_at": "2024-08-01T12:14:58.766262Z",
    "updated_at": "2024-08-01T12:14:58.766262Z",
    "lead_time": 0.446
  },
  {
    "text": "对位浮点数N，IEEE定义：若E且M，则NNaN",
    "id": 3667,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5100,
    "created_at": "2024-08-01T12:14:59.648294Z",
    "updated_at": "2024-08-01T12:14:59.648294Z",
    "lead_time": 0.222
  },
  {
    "text": "图中，CPU、存储器控制器和两个PCIE桥通过接口与高速的前端总线FSB相连",
    "id": 3668,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "PCIE",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5101,
    "created_at": "2024-08-01T12:15:04.269308Z",
    "updated_at": "2024-08-01T12:15:04.269308Z",
    "lead_time": 4.083
  },
  {
    "text": "指挥并控制CPU、数据cache和输入输出设备之间数据流动的方向",
    "id": 3669,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 23,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5102,
    "created_at": "2024-08-01T12:15:05.483013Z",
    "updated_at": "2024-08-01T12:15:05.483013Z",
    "lead_time": 0.802
  },
  {
    "text": "此外，CE为片选信号线，OE为输出允许线，WE为写使能信号",
    "id": 3670,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "片选信号线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "输出允许线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "写使能信号",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5103,
    "created_at": "2024-08-01T12:15:06.689457Z",
    "updated_at": "2024-08-01T12:15:06.689457Z",
    "lead_time": 0.822
  },
  {
    "text": "磁盘cache利用了被访问数据的空间局部性和时间局部性原理",
    "id": 3671,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "空间局部性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "时间局部性",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5104,
    "created_at": "2024-08-01T12:15:08.715239Z",
    "updated_at": "2024-08-01T12:15:08.715239Z",
    "lead_time": 1.583
  },
  {
    "text": "变址的用途是为重复操作的完成提供一种高效机制",
    "id": 3672,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "高效机制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "变址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5105,
    "created_at": "2024-08-01T12:15:12.305265Z",
    "updated_at": "2024-08-01T12:15:12.305265Z",
    "lead_time": 3.155
  },
  {
    "text": "这个转换过程对指令系统和程序员是透明的",
    "id": 3673,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5106,
    "created_at": "2024-08-01T12:15:16.076728Z",
    "updated_at": "2024-08-01T12:15:16.076728Z",
    "lead_time": 3.3
  },
  {
    "text": "比例变址偏移量寻址：也称为变址寻址方式，变址寄存器I是位通用寄存器中除ESP外的任何一个，而且可将此变址寄存器内容乘以、、或的比例因子S，然后再加上偏移量而得到有效地址",
    "id": 3674,
    "label": [
      {
        "start": 2,
        "end": 9,
        "text": "变址偏移量寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "变址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 19,
        "text": "变址寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 80,
        "end": 84,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 55,
        "text": "变址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "ESP",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5107,
    "created_at": "2024-08-01T12:15:19.301474Z",
    "updated_at": "2024-08-01T12:15:19.301474Z",
    "lead_time": 2.682
  },
  {
    "text": "为此，在运算前需要把参加运算的数据和解题步骤通过输入设备送到存储器中保存起来",
    "id": 3675,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5108,
    "created_at": "2024-08-01T12:15:20.036582Z",
    "updated_at": "2024-08-01T12:15:20.036582Z",
    "lead_time": 0.061
  },
  {
    "text": "按所显示的信息内容分类，有字符图形显示器、图像显示器等",
    "id": 3676,
    "label": [
      {
        "start": 13,
        "end": 20,
        "text": "字符图形显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "图像显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5109,
    "created_at": "2024-08-01T12:15:20.968689Z",
    "updated_at": "2024-08-01T12:15:20.968689Z",
    "lead_time": 0.077
  },
  {
    "text": "而间接的补码阵列乘法却需要使用三个求补器",
    "id": 3677,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5110,
    "created_at": "2024-08-01T12:15:21.784406Z",
    "updated_at": "2024-08-01T12:15:21.784406Z",
    "lead_time": 0.075
  },
  {
    "text": "其功能是把源寄存器数据送目标寄存器",
    "id": 3678,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "目标寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5111,
    "created_at": "2024-08-01T12:15:22.570525Z",
    "updated_at": "2024-08-01T12:15:22.570525Z",
    "lead_time": 0.054
  },
  {
    "text": "字模码是用点阵表示的汉字字形代码，它是汉字的输出形式",
    "id": 3679,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "字模码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "汉字字形代码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5112,
    "created_at": "2024-08-01T12:15:23.774499Z",
    "updated_at": "2024-08-01T12:15:23.774499Z",
    "lead_time": 0.33
  },
  {
    "text": "另外查询链的优先级是固定的，如果优先级高的设备出现频繁的请求，那么优先级较低的设备可能长期不能使用总线",
    "id": 3680,
    "label": [
      {
        "start": 49,
        "end": 51,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5113,
    "created_at": "2024-08-01T12:15:32.205772Z",
    "updated_at": "2024-08-01T12:15:32.205772Z",
    "lead_time": 0.389
  },
  {
    "text": "由于存储器的价格相对较高，而且在整机成本中占有较大的比例，因而从性能价格比的角度不能通过简单配置更大容量的存储器满足用户的需求",
    "id": 3681,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5114,
    "created_at": "2024-08-01T12:15:32.988931Z",
    "updated_at": "2024-08-01T12:15:32.988931Z",
    "lead_time": 0.054
  },
  {
    "text": "在存储器中，操作数或指令字写入或读出的方式，有地址指定方式、相联存储方式和堆栈存取方式",
    "id": 3682,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 29,
        "text": "地址指定方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "相联存储方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 43,
        "text": "堆栈存取方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5115,
    "created_at": "2024-08-01T12:15:33.805840Z",
    "updated_at": "2024-08-01T12:15:33.806840Z",
    "lead_time": 0.094
  },
  {
    "text": "由于指令字较短，所以指令结构是一种可变字长形式",
    "id": 3683,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "指令结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "可变字长",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5116,
    "created_at": "2024-08-01T12:15:34.821646Z",
    "updated_at": "2024-08-01T12:15:34.821646Z",
    "lead_time": 0.066
  },
  {
    "text": "用下式计算：FLOPS程序中的浮点操作次数程序执行时间s要了解数字计算机的主要组成和工作原理，可从打算盘说起",
    "id": 3684,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "FLOPS",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5117,
    "created_at": "2024-08-01T12:15:35.708607Z",
    "updated_at": "2024-08-01T12:15:35.708607Z",
    "lead_time": 0.078
  },
  {
    "text": "但是多路并行转移功能较弱，速度较慢，灵活性较差",
    "id": 3685,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "多路并行转移",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5118,
    "created_at": "2024-08-01T12:15:36.525828Z",
    "updated_at": "2024-08-01T12:15:36.525828Z",
    "lead_time": 0.053
  },
  {
    "text": "而保存在主存中的完整页表则称为慢表",
    "id": 3686,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "慢表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5119,
    "created_at": "2024-08-01T12:15:37.400891Z",
    "updated_at": "2024-08-01T12:15:37.400891Z",
    "lead_time": 0.076
  },
  {
    "text": "因此，段式存储管理比页式存储管理方式需要更多的硬件支持",
    "id": 3687,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "段式存储管理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "页式存储管理",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5120,
    "created_at": "2024-08-01T12:15:38.265636Z",
    "updated_at": "2024-08-01T12:15:38.265636Z",
    "lead_time": 0.159
  },
  {
    "text": "最简单且应用广泛的检错码是采用一位校验位的奇校验或偶校验",
    "id": 3688,
    "label": [
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "奇校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "校验位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "检错码",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5121,
    "created_at": "2024-08-01T12:15:41.400021Z",
    "updated_at": "2024-08-01T12:15:41.400021Z",
    "lead_time": 2.479
  },
  {
    "text": "微程序控制的基本思想，就是仿照通常的解题程序的方法，把操作控制信号编成所谓的“微指令”，存放到一个只读存储器里",
    "id": 3689,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "微程序控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 54,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5122,
    "created_at": "2024-08-01T12:15:42.183995Z",
    "updated_at": "2024-08-01T12:15:42.183995Z",
    "lead_time": 0.087
  },
  {
    "text": "这就是磁表面存储器存取信息的原理",
    "id": 3690,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5123,
    "created_at": "2024-08-01T12:15:42.977691Z",
    "updated_at": "2024-08-01T12:15:42.977691Z",
    "lead_time": 0.057
  },
  {
    "text": "PCIe总线全称为PCIExpress，是基于PCI总线技术发展起来的总线标准，对PCI总线有良好的继承性，在软件和应用上兼容PCI总线",
    "id": 3691,
    "label": [
      {
        "start": 23,
        "end": 28,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 19,
        "text": "PCIExpress",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 68,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "总线标准",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5124,
    "created_at": "2024-08-01T12:15:46.484925Z",
    "updated_at": "2024-08-01T12:15:46.484925Z",
    "lead_time": 2.868
  },
  {
    "text": "符号NaN表示无定义数据，采用这个标志的目的是让程序员能够推迟进行测试及判断的时间，以便在方便的时候进行",
    "id": 3692,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5125,
    "created_at": "2024-08-01T12:15:47.281919Z",
    "updated_at": "2024-08-01T12:15:47.281919Z",
    "lead_time": 0.053
  },
  {
    "text": "第三种类型为寄存器存储器RS型指令，执行此类指令时，既要访问内存单元，又要访问寄存器",
    "id": 3693,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "RS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "内存单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5126,
    "created_at": "2024-08-01T12:15:47.994060Z",
    "updated_at": "2024-08-01T12:15:47.994060Z",
    "lead_time": 0.075
  },
  {
    "text": "这是因为，采用BCD码后，在两数相加的和数小于等于时，十进制运算的结果是正确的；而当两数相加的和数大于时，结果不正确，必须加修正后才能得出正确结果",
    "id": 3694,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "BCD码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5127,
    "created_at": "2024-08-01T12:15:48.808012Z",
    "updated_at": "2024-08-01T12:15:48.808012Z",
    "lead_time": 0.051
  },
  {
    "text": "因此，一条指令的结构可用如下形式来表示：操作码字段OP地址码字段A设计计算机时，对指令系统的每一条指令都要规定一个操作码",
    "id": 3695,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5128,
    "created_at": "2024-08-01T12:15:49.808970Z",
    "updated_at": "2024-08-01T12:15:49.808970Z",
    "lead_time": 0.148
  },
  {
    "text": "个全字节和个全字节组成同步SYNC区，标志着扇区的开始",
    "id": 3696,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "SYNC区",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5129,
    "created_at": "2024-08-01T12:15:50.673676Z",
    "updated_at": "2024-08-01T12:15:50.673676Z",
    "lead_time": 0.077
  },
  {
    "text": "这种类型的缓冲器通常根据它们如何使用而叫做总线扩展器、总线驱动器、总线接收器等等",
    "id": 3697,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "总线扩展器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "总线驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "总线接收器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5130,
    "created_at": "2024-08-01T12:15:51.539181Z",
    "updated_at": "2024-08-01T12:15:51.539181Z",
    "lead_time": 0.069
  },
  {
    "text": "存储器所有存储单元的总数称为存储器的存储容量，通常用单位KB、MB来表示，如KB、MB",
    "id": 3698,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5131,
    "created_at": "2024-08-01T12:15:52.592115Z",
    "updated_at": "2024-08-01T12:15:52.592115Z",
    "lead_time": 0.116
  },
  {
    "text": "这种转移指令称为条件转移指令",
    "id": 3699,
    "label": [
      {
        "start": 8,
        "end": 14,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5132,
    "created_at": "2024-08-01T12:15:53.299065Z",
    "updated_at": "2024-08-01T12:15:53.299065Z",
    "lead_time": 0.05
  },
  {
    "text": "这种情况和第种情况一样，把x和y的位置对调即得证",
    "id": 3700,
    "label": [
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5133,
    "created_at": "2024-08-01T12:15:53.982312Z",
    "updated_at": "2024-08-01T12:15:53.982312Z",
    "lead_time": 0.058
  },
  {
    "text": "有些系统通过散列哈希表加以改进",
    "id": 3701,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "散列",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "哈希表",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5134,
    "created_at": "2024-08-01T12:15:55.281995Z",
    "updated_at": "2024-08-01T12:15:55.281995Z",
    "lead_time": 0.542
  },
  {
    "text": "又如，磁盘输入的情况下，在找到磁道以后，磁盘能以大于Bs的速率输入数据",
    "id": 3702,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5135,
    "created_at": "2024-08-01T12:15:56.317318Z",
    "updated_at": "2024-08-01T12:15:56.318321Z",
    "lead_time": 0.437
  },
  {
    "text": "FIFOLRU算法是对FIFO算法的一种改进",
    "id": 3703,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "LRU算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "FIFO算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "FIFO",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5136,
    "created_at": "2024-08-01T12:15:57.067714Z",
    "updated_at": "2024-08-01T12:15:57.067714Z",
    "lead_time": 0.072
  },
  {
    "text": "快表的作用是加快地址变换",
    "id": 3704,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "快表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5137,
    "created_at": "2024-08-01T12:15:57.965616Z",
    "updated_at": "2024-08-01T12:15:57.965616Z",
    "lead_time": 0.216
  },
  {
    "text": "当研制一台计算机的时候，设计者必须明确分配每一级的任务，确定哪些情况使用硬件，哪些情况使用软件，而硬件始终放在最低级",
    "id": 3705,
    "label": [
      {
        "start": 45,
        "end": 47,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5138,
    "created_at": "2024-08-01T12:15:58.996123Z",
    "updated_at": "2024-08-01T12:15:58.996123Z",
    "lead_time": 0.304
  },
  {
    "text": "为运算器构造的简单性，运算方法中算术运算通常采用补码加、减法，原码乘除法或补码乘除法",
    "id": 3706,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5139,
    "created_at": "2024-08-01T12:15:59.981299Z",
    "updated_at": "2024-08-01T12:15:59.981299Z",
    "lead_time": 0.081
  },
  {
    "text": "请说明虚实地址变换过程",
    "id": 3707,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5140,
    "created_at": "2024-08-01T12:16:00.750128Z",
    "updated_at": "2024-08-01T12:16:00.750128Z",
    "lead_time": 0.057
  },
  {
    "text": "引脚BYTE代表低电平有效为低时选择字节模式，为高时选择字模式",
    "id": 3708,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5141,
    "created_at": "2024-08-01T12:16:01.461019Z",
    "updated_at": "2024-08-01T12:16:01.461019Z",
    "lead_time": 0.067
  },
  {
    "text": "当它到达队首并执行完毕后才离开队列",
    "id": 3709,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "队列",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5142,
    "created_at": "2024-08-01T12:16:02.311069Z",
    "updated_at": "2024-08-01T12:16:02.311069Z",
    "lead_time": 0.074
  },
  {
    "text": "一旦微程序固化，机器运行时则只读不写",
    "id": 3710,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "只读",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5143,
    "created_at": "2024-08-01T12:16:03.700898Z",
    "updated_at": "2024-08-01T12:16:03.700898Z",
    "lead_time": 0.681
  },
  {
    "text": "为了减少经常出现的数据相关，流水线采用了如前面所述的定向传送技术，将前面指令执行的结果直接送给后面指令所需此源操作数的功能部件，并同时将位向量中的相应位清除",
    "id": 3711,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "定向传送技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "位向量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 75,
        "end": 76,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5144,
    "created_at": "2024-08-01T12:16:04.745042Z",
    "updated_at": "2024-08-01T12:16:04.745042Z",
    "lead_time": 0.416
  },
  {
    "text": "从教学目的出发，本章以CPU执行指令为主线来组织教学内容",
    "id": 3712,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5145,
    "created_at": "2024-08-01T12:16:05.535004Z",
    "updated_at": "2024-08-01T12:16:05.535004Z",
    "lead_time": 0.05
  },
  {
    "text": "每个进程有一个页目录表，其中的每个表项指向一个页表",
    "id": 3713,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "页目录表",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5146,
    "created_at": "2024-08-01T12:16:06.203931Z",
    "updated_at": "2024-08-01T12:16:06.203931Z",
    "lead_time": 0.053
  },
  {
    "text": "上例中和mod等价，原因就是表指针超过时，将自动丢掉，最后得到",
    "id": 3714,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5147,
    "created_at": "2024-08-01T12:16:06.854423Z",
    "updated_at": "2024-08-01T12:16:06.854423Z",
    "lead_time": 0.051
  },
  {
    "text": "SIB字段由比例系数S、变址寄存器号I、基址寄存器号B组成",
    "id": 3715,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "变址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "基址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5148,
    "created_at": "2024-08-01T12:16:07.822541Z",
    "updated_at": "2024-08-01T12:16:07.828086Z",
    "lead_time": 0.081
  },
  {
    "text": "IO接口在它动态连接的两个部件之间起着“转换器”的作用，以便实现彼此之间的信息传送",
    "id": 3716,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "转换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5149,
    "created_at": "2024-08-01T12:16:08.749542Z",
    "updated_at": "2024-08-01T12:16:08.749542Z",
    "lead_time": 0.07
  },
  {
    "text": "衡量总线性能的重要指标是总线带宽，它定义为总线本身所能达到的最高传输速率",
    "id": 3717,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "总线带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "传输速率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5150,
    "created_at": "2024-08-01T12:16:09.559296Z",
    "updated_at": "2024-08-01T12:16:09.559296Z",
    "lead_time": 0.058
  },
  {
    "text": "这两种类型的存储器在科研和工程中大量使用",
    "id": 3718,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5151,
    "created_at": "2024-08-01T12:16:10.343617Z",
    "updated_at": "2024-08-01T12:16:10.343617Z",
    "lead_time": 0.073
  },
  {
    "text": "作为主机与驱动器之间的控制器，它需要有两个方面的接口：一个是与主机的接口，控制外存与主机总线之间交换数据；另一个是与设备的接口，根据主机命令控制设备的操作",
    "id": 3719,
    "label": [
      {
        "start": 39,
        "end": 41,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5152,
    "created_at": "2024-08-01T12:16:11.435835Z",
    "updated_at": "2024-08-01T12:16:11.435835Z",
    "lead_time": 0.362
  },
  {
    "text": "控制器就是控制部件，而运算器、存储器、外围设备相对控制器来讲，就是执行部件",
    "id": 3720,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5153,
    "created_at": "2024-08-01T12:16:12.411115Z",
    "updated_at": "2024-08-01T12:16:12.411115Z",
    "lead_time": 0.26
  },
  {
    "text": "双字长或三字长指令包含操作码和地址码",
    "id": 3721,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "三字长指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5154,
    "created_at": "2024-08-01T12:16:13.331486Z",
    "updated_at": "2024-08-01T12:16:13.331486Z",
    "lead_time": 0.077
  },
  {
    "text": "同样，映射到第L的主存块号也是块",
    "id": 3722,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5155,
    "created_at": "2024-08-01T12:16:14.054191Z",
    "updated_at": "2024-08-01T12:16:14.054191Z",
    "lead_time": 0.046
  },
  {
    "text": "突发方式可以消除地址建立时间及第一次存取之后的行、列线的预充电时间",
    "id": 3723,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "突发方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5156,
    "created_at": "2024-08-01T12:16:14.784600Z",
    "updated_at": "2024-08-01T12:16:14.784600Z",
    "lead_time": 0.121
  },
  {
    "text": "在理想情况下，如果程序段或数据块都是连续地在主存中存取，那么将大大提高主存的访问速度",
    "id": 3724,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "程序段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5157,
    "created_at": "2024-08-01T12:16:15.586362Z",
    "updated_at": "2024-08-01T12:16:15.586362Z",
    "lead_time": 0.066
  },
  {
    "text": "例如，x，则x原x，则x原一般情况下，对于正数xxnxx，则有x原xnxx对于负数xxnxx，则有x原xnxx对于，原码机器中往往有“”、“”之分，故有两种形式：原原采用原码表示法简单易懂，即符号位加上二进制数的绝对值，但它的最大缺点是加法运算复杂",
    "id": 3725,
    "label": [
      {
        "start": 101,
        "end": 104,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 96,
        "end": 99,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 85,
        "end": 87,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5158,
    "created_at": "2024-08-01T12:16:16.361563Z",
    "updated_at": "2024-08-01T12:16:16.361563Z",
    "lead_time": 0.057
  },
  {
    "text": "对于规格化无法表示的数据，可以用非规格化形式表示",
    "id": 3726,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 22,
        "text": "非规格化形式",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5159,
    "created_at": "2024-08-01T12:16:17.035202Z",
    "updated_at": "2024-08-01T12:16:17.035202Z",
    "lead_time": 0.054
  },
  {
    "text": "逻辑地址由段选择器和偏移量组成，处理机将逻辑地址透明地转换为线性地址",
    "id": 3727,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "段选择器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "逻辑地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5160,
    "created_at": "2024-08-01T12:16:18.009210Z",
    "updated_at": "2024-08-01T12:16:18.009210Z",
    "lead_time": 0.316
  },
  {
    "text": "一般来说，一个包含n位的操作码最多能够表示n条指令",
    "id": 3728,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5161,
    "created_at": "2024-08-01T12:16:20.497127Z",
    "updated_at": "2024-08-01T12:16:20.497127Z",
    "lead_time": 1.716
  },
  {
    "text": "当它们有总线请求时，把它们唯一的仲裁号发送到共享的仲裁总线上，每个仲裁器将仲裁总线上得到的号与自己的号进行比较",
    "id": 3729,
    "label": [
      {
        "start": 33,
        "end": 36,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "仲裁总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "仲裁总线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5162,
    "created_at": "2024-08-01T12:16:21.219296Z",
    "updated_at": "2024-08-01T12:16:21.219296Z",
    "lead_time": 0.051
  },
  {
    "text": "算术运算指令这类指令包括二进制定点加、减、乘、除指令，浮点加、减、乘、除指令，求反、求补指令，算术移位指令，算术比较指令，十进制加、减运算指令等",
    "id": 3730,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "算术运算指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "移位指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "算术比较",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5163,
    "created_at": "2024-08-01T12:16:21.965256Z",
    "updated_at": "2024-08-01T12:16:21.965256Z",
    "lead_time": 0.095
  },
  {
    "text": "这是因为后一种情况下外部设备的寄存器和存储器单元统一编址，CPU可以和访问内存一样去访问外部设备",
    "id": 3731,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5164,
    "created_at": "2024-08-01T12:16:22.737619Z",
    "updated_at": "2024-08-01T12:16:22.738633Z",
    "lead_time": 0.067
  },
  {
    "text": "思考题你能评价三种运算器的结构特点吗？设有两个浮点数x和y，它们分别为xExMxyEyMy其中，Ex和Ey分别为数x和y的阶码，Mx和My分别为数x和y的尾数",
    "id": 3732,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 77,
        "end": 79,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5165,
    "created_at": "2024-08-01T12:16:23.862571Z",
    "updated_at": "2024-08-01T12:16:23.862571Z",
    "lead_time": 0.073
  },
  {
    "text": "不过注意，图中画出的节拍脉冲信号是TT，它们在逻辑关系上与TT是完全一致的，是后者经过启停控制逻辑中与门以后的输出，图中忽略了一级与门的时间延迟细节",
    "id": 3733,
    "label": [
      {
        "start": 50,
        "end": 52,
        "text": "与门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "与门",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5166,
    "created_at": "2024-08-01T12:16:25.727664Z",
    "updated_at": "2024-08-01T12:16:25.727664Z",
    "lead_time": 1.112
  },
  {
    "text": "操作控制器OC送出操作命令到通用寄存器，选择R做数据存储器的地址单元；OC发出操作命令，打开通用寄存器输出三态门不经ALU以节省时间，将地址放到DBUS上；OC发出操作命令，将地址打入AR，并进行数存地址译码；OC发出操作命令到通用寄存器，选择R，作为数存的写入数据；OC发出操作命令，打开通用寄存器输出三态门，将数据放到DBUS上；OC发出操作命令，将数据写入数存号单元，它原先的数据被冲掉",
    "id": 3734,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 100,
        "end": 104,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "三态门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 114,
        "end": 119,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 145,
        "end": 150,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 152,
        "end": 155,
        "text": "三态门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 88,
        "end": 90,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5167,
    "created_at": "2024-08-01T12:16:26.500599Z",
    "updated_at": "2024-08-01T12:16:26.500599Z",
    "lead_time": 0.083
  },
  {
    "text": "从上面叙述可知，CPU中的类主要寄存器，每一类完成一种特定的功能",
    "id": 3735,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5168,
    "created_at": "2024-08-01T12:16:27.235614Z",
    "updated_at": "2024-08-01T12:16:27.235614Z",
    "lead_time": 0.041
  },
  {
    "text": "如果应用程序采用汇编语言编写，则机器必须要有这一级的功能；如果应用程序不采用汇编语言编写，则这一级可以不要",
    "id": 3736,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5169,
    "created_at": "2024-08-01T12:16:27.969572Z",
    "updated_at": "2024-08-01T12:16:27.969572Z",
    "lead_time": 0.063
  },
  {
    "text": "它主要由控制存储器、微指令寄存器和地址转移逻辑三大部分组成，其中微指令寄存器分为微地址寄存器和微命令寄存器两部分",
    "id": 3737,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "微指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 46,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 23,
        "text": "地址转移逻辑",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 53,
        "text": "微命令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 38,
        "text": "微指令寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5170,
    "created_at": "2024-08-01T12:16:28.986398Z",
    "updated_at": "2024-08-01T12:16:28.986398Z",
    "lead_time": 0.108
  },
  {
    "text": "在Pentium系列机中，指令格式也是可变的：有位、位、位、位不等",
    "id": 3738,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5171,
    "created_at": "2024-08-01T12:16:29.723967Z",
    "updated_at": "2024-08-01T12:16:29.723967Z",
    "lead_time": 0.066
  },
  {
    "text": "指令周期为两个CPU周期，其中取指周期为个CPU周期，执行周期为个CPU周期图",
    "id": 3739,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5172,
    "created_at": "2024-08-01T12:16:30.469889Z",
    "updated_at": "2024-08-01T12:16:30.469889Z",
    "lead_time": 0.071
  },
  {
    "text": "设一个数x表示成：xxxxxn对x求逻辑非，则有xzzzzznziix，in我们在节中曾介绍由一位全加器FA构成的行波进位加法器，它可以实现补码数的加法运算和减法运算",
    "id": 3740,
    "label": [
      {
        "start": 70,
        "end": 72,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 64,
        "text": "行波进位加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "逻辑非",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5173,
    "created_at": "2024-08-01T12:16:31.419627Z",
    "updated_at": "2024-08-01T12:16:31.419627Z",
    "lead_time": 0.086
  },
  {
    "text": "命令控制传统的异步DRAM是根据控制信号的电平组合选择工作方式的，而SDRAM将一组控制信号的电平编码组合为“命令”",
    "id": 3741,
    "label": [
      {
        "start": 34,
        "end": 39,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 13,
        "text": "异步DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5174,
    "created_at": "2024-08-01T12:16:32.251641Z",
    "updated_at": "2024-08-01T12:16:32.251641Z",
    "lead_time": 0.076
  },
  {
    "text": "虚存机制也要解决一些关键问题，包括调度问题、地址映射问题和替换问题等",
    "id": 3742,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5175,
    "created_at": "2024-08-01T12:16:33.008996Z",
    "updated_at": "2024-08-01T12:16:33.008996Z",
    "lead_time": 0.055
  },
  {
    "text": "写入时，将计算机并行送来的数据取至并串变换寄存器，变为串行数据，然后一位一位地由写电流驱动器作功率放大并加到写磁头线圈上产生电流，从而在盘片磁层上形成按位的磁化存储元",
    "id": 3743,
    "label": [
      {
        "start": 68,
        "end": 70,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 80,
        "end": 83,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 24,
        "text": "并串变换寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 46,
        "text": "写电流驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 76,
        "end": 77,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5176,
    "created_at": "2024-08-01T12:16:33.862557Z",
    "updated_at": "2024-08-01T12:16:33.862557Z",
    "lead_time": 0.119
  },
  {
    "text": "运算速度提高到每秒几万次至几十万次，可靠性提高，体积缩小，成本降低",
    "id": 3744,
    "annotator": 1,
    "annotation_id": 5177,
    "created_at": "2024-08-01T12:16:34.688897Z",
    "updated_at": "2024-08-01T12:16:34.688897Z",
    "lead_time": 0.043
  },
  {
    "text": "CPU从存储器取出一条指令并执行这条指令的时间和称为指令周期",
    "id": 3745,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5178,
    "created_at": "2024-08-01T12:16:35.367984Z",
    "updated_at": "2024-08-01T12:16:35.367984Z",
    "lead_time": 0.07
  },
  {
    "text": "又如，乘法：，，，",
    "id": 3746,
    "annotator": 1,
    "annotation_id": 5179,
    "created_at": "2024-08-01T12:16:36.214059Z",
    "updated_at": "2024-08-01T12:16:36.214059Z",
    "lead_time": 0.053
  },
  {
    "text": "PowerPC机有如下五种指令类型：整数算术、逻辑、移位旋转循环移位指令；浮点算术指令；取数存数指令；条件寄存器指令；转移指令",
    "id": 3747,
    "label": [
      {
        "start": 51,
        "end": 56,
        "text": "条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "移位指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5180,
    "created_at": "2024-08-01T12:16:37.078817Z",
    "updated_at": "2024-08-01T12:16:37.078817Z",
    "lead_time": 0.104
  },
  {
    "text": "ms的刷新周期时间可以分为两部分：前一段时间进行正常的读写操作；后一段时间作为集中刷新操作时间，连续刷新行",
    "id": 3748,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5181,
    "created_at": "2024-08-01T12:16:37.743774Z",
    "updated_at": "2024-08-01T12:16:37.743774Z",
    "lead_time": 0.047
  },
  {
    "text": "这样，存储器的个字可由位地址寄存器指示，其中高位选择个模块中的一个，低位选择每个模块中的个字",
    "id": 3749,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 46,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5182,
    "created_at": "2024-08-01T12:16:38.559032Z",
    "updated_at": "2024-08-01T12:16:38.559032Z",
    "lead_time": 0.072
  },
  {
    "text": "例如，有的机器指令系统中含有输入输出指令，而有的机器指令系统中没有设置输入输出指令",
    "id": 3750,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "输入输出指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 41,
        "text": "输入输出指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5183,
    "created_at": "2024-08-01T12:16:39.612874Z",
    "updated_at": "2024-08-01T12:16:39.612874Z",
    "lead_time": 0.106
  },
  {
    "text": "反之，当“接收”信号有效时，数据从右向左传送",
    "id": 3751,
    "annotator": 1,
    "annotation_id": 5184,
    "created_at": "2024-08-01T12:16:40.349853Z",
    "updated_at": "2024-08-01T12:16:40.349853Z",
    "lead_time": 0.048
  },
  {
    "text": "当主存字由或字节组成时，在同一个主存字中，既可按从低位字节向高位字节的顺序存放字符串内容，也可按从高位字节向低位字节的顺序存放字符串内容",
    "id": 3752,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "主存字",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "主存字",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "低位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "高位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "高位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "低位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 63,
        "end": 64,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5185,
    "created_at": "2024-08-01T12:16:41.121105Z",
    "updated_at": "2024-08-01T12:16:41.121105Z",
    "lead_time": 0.095
  },
  {
    "text": "指令格式，则是指令字用二进制代码表示的结构形式，通常由操作码字段和地址码字段组成",
    "id": 3753,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5186,
    "created_at": "2024-08-01T12:16:42.103088Z",
    "updated_at": "2024-08-01T12:16:42.103088Z",
    "lead_time": 0.108
  },
  {
    "text": "一般的操作数有被操作数、操作数及操作结果这三种数，因而就形成了三地址指令格式，这是早期计算机指令的基本格式",
    "id": 3754,
    "label": [
      {
        "start": 31,
        "end": 36,
        "text": "三地址指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5187,
    "created_at": "2024-08-01T12:16:42.946858Z",
    "updated_at": "2024-08-01T12:16:42.946858Z",
    "lead_time": 0.079
  },
  {
    "text": "不同机器的指令系统是各不相同的",
    "id": 3755,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5188,
    "created_at": "2024-08-01T12:16:43.776097Z",
    "updated_at": "2024-08-01T12:16:43.776097Z",
    "lead_time": 0.056
  },
  {
    "text": "这种方法使cache真正在CPU主存之间读写两方面都起到高速缓存作用",
    "id": 3756,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "高速缓存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5189,
    "created_at": "2024-08-01T12:16:44.682115Z",
    "updated_at": "2024-08-01T12:16:44.682115Z",
    "lead_time": 0.083
  },
  {
    "text": "差分时钟也是DDRSDRAM的一个必要设计",
    "id": 3757,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "差分时钟",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 14,
        "text": "DDRSDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5190,
    "created_at": "2024-08-01T12:16:45.480962Z",
    "updated_at": "2024-08-01T12:16:45.480962Z",
    "lead_time": 0.079
  },
  {
    "text": "控制不同操作序列时序信号的方法，称为控制器的控制方式",
    "id": 3758,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "操作序列",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5191,
    "created_at": "2024-08-01T12:16:46.195653Z",
    "updated_at": "2024-08-01T12:16:46.195653Z",
    "lead_time": 0.064
  },
  {
    "text": "英寸磁带QIC英寸磁带看起来像家用录音带一样，内部有供带轮和收带轮",
    "id": 3759,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "IC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5192,
    "created_at": "2024-08-01T12:16:47.027792Z",
    "updated_at": "2024-08-01T12:16:47.027792Z",
    "lead_time": 0.075
  },
  {
    "text": "例如，和分别被表示成：在上述表示中，一个实线框表示字节，虚线把一个字节分为高低各半字节，每一个小框内给出一个数值位或符号位的编码值用十六进制形式给出",
    "id": 3760,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 66,
        "end": 70,
        "text": "十六进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 56,
        "end": 57,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5193,
    "created_at": "2024-08-01T12:16:48.001154Z",
    "updated_at": "2024-08-01T12:16:48.001154Z",
    "lead_time": 0.089
  },
  {
    "text": "图a示出了补码运算的二进制加法减法器逻辑结构图",
    "id": 3761,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "加法减法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5194,
    "created_at": "2024-08-01T12:16:48.883025Z",
    "updated_at": "2024-08-01T12:16:48.883025Z",
    "lead_time": 0.065
  },
  {
    "text": "计算机的硬件是由有形的电子器件等构成的，它包括运算器、存储器、控制器、适配器、输入输出设备",
    "id": 3762,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "电子器件",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 39,
        "end": 45,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5195,
    "created_at": "2024-08-01T12:16:49.730736Z",
    "updated_at": "2024-08-01T12:16:49.730736Z",
    "lead_time": 0.115
  },
  {
    "text": "其次，减法是用补码方法进行的，其中数的反码是内部产生的，而结果输出“A减B减”，因此做减法时须在最末位产生一个强迫进位加，以便产生“A减B”的结果",
    "id": 3763,
    "label": [
      {
        "start": 55,
        "end": 60,
        "text": "强迫进位加",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5196,
    "created_at": "2024-08-01T12:16:50.551625Z",
    "updated_at": "2024-08-01T12:16:50.551625Z",
    "lead_time": 0.06
  },
  {
    "text": "但是指令的执行周期，由于各条指令的功能不同，所用的CPU周期是各不相同的，其中MOV、ADD、JMP指令是一个CPU周期；LAD和STO指令是两个CPU周期",
    "id": 3764,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "JMP指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "MOV",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 65,
        "end": 70,
        "text": "STO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 73,
        "end": 78,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5197,
    "created_at": "2024-08-01T12:16:51.265044Z",
    "updated_at": "2024-08-01T12:16:51.265044Z",
    "lead_time": 0.072
  },
  {
    "text": "与此相对应，第三条微指令和第四条微指令的下一个微地址就又指向第一条微指令，即“取指”微指令",
    "id": 3765,
    "label": [
      {
        "start": 39,
        "end": 41,
        "text": "取指",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "微指",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5198,
    "created_at": "2024-08-01T12:16:52.225181Z",
    "updated_at": "2024-08-01T12:16:52.225181Z",
    "lead_time": 0.115
  },
  {
    "text": "由水平型微指令解释指令的微程序，有微指令字较长而微程序短的特点",
    "id": 3766,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5199,
    "created_at": "2024-08-01T12:16:53.398017Z",
    "updated_at": "2024-08-01T12:16:53.398017Z",
    "lead_time": 0.078
  },
  {
    "text": "它采用同步定时协议和集中式仲裁策略，并具有自动配置能力",
    "id": 3767,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "同步定时协议",
        "labels": [
          "PROT"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5200,
    "created_at": "2024-08-01T12:16:54.077835Z",
    "updated_at": "2024-08-01T12:16:54.077835Z",
    "lead_time": 0.06
  },
  {
    "text": "r值以为宜，不宜太大",
    "id": 3768,
    "annotator": 1,
    "annotation_id": 5201,
    "created_at": "2024-08-01T12:16:54.750872Z",
    "updated_at": "2024-08-01T12:16:54.750872Z",
    "lead_time": 0.038
  },
  {
    "text": "下面详细介绍这些寄存器的功能与结构",
    "id": 3769,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5202,
    "created_at": "2024-08-01T12:16:55.674457Z",
    "updated_at": "2024-08-01T12:16:55.675003Z",
    "lead_time": 0.07
  },
  {
    "text": "区块擦除操作与此类似，但最后一个写周期需给出欲擦除的区块的地址，且数据线送入，芯片收到此命令后将启动该区块的擦除操作",
    "id": 3770,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5203,
    "created_at": "2024-08-01T12:16:56.437052Z",
    "updated_at": "2024-08-01T12:16:56.437052Z",
    "lead_time": 0.074
  },
  {
    "text": "个芯片共用片选信号Sel、行选通信号RAS、刷新信号Ref和地址输入信号AA",
    "id": 3771,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "片选信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "行选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "刷新信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "地址输入信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5204,
    "created_at": "2024-08-01T12:16:57.274893Z",
    "updated_at": "2024-08-01T12:16:57.274893Z",
    "lead_time": 0.072
  },
  {
    "text": "DVDROM光盘最初DVD的全称是数字化视频光盘，但后来逐渐演变成数字化通用光盘的简称",
    "id": 3772,
    "label": [
      {
        "start": 17,
        "end": 24,
        "text": "数字化视频光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "DVDROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "DVD",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 40,
        "text": "数字化通用光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5205,
    "created_at": "2024-08-01T12:16:58.250073Z",
    "updated_at": "2024-08-01T12:16:58.250073Z",
    "lead_time": 0.082
  },
  {
    "text": "系列机解决了各机种的软件兼容问题，其必要条件是同一系列的各机种有共同的指令系统，而且新推出的机种指令系统一定包含所有旧机种的全部指令",
    "id": 3773,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5206,
    "created_at": "2024-08-01T12:16:58.956909Z",
    "updated_at": "2024-08-01T12:16:58.956909Z",
    "lead_time": 0.066
  },
  {
    "text": "为了CPU与存储器交换数据方便，每次访存时可以由CPU选择实现字存取位、半字存取高位或低位或字节存取任意位",
    "id": 3774,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 45,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 53,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5207,
    "created_at": "2024-08-01T12:16:59.761278Z",
    "updated_at": "2024-08-01T12:16:59.761278Z",
    "lead_time": 0.1
  },
  {
    "text": "每个读写磁头对应着一个信息记录磁道",
    "id": 3775,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5208,
    "created_at": "2024-08-01T12:17:00.804584Z",
    "updated_at": "2024-08-01T12:17:00.804584Z",
    "lead_time": 0.071
  },
  {
    "text": "一个方框代表一个CPU周期，方框中的内容表示数据通路的操作或某种控制操作",
    "id": 3776,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5209,
    "created_at": "2024-08-01T12:17:01.605290Z",
    "updated_at": "2024-08-01T12:17:01.605290Z",
    "lead_time": 0.058
  },
  {
    "text": "PowerPC是精简指令系统计算机，能处理位字节、位半字、位字和位双字各种长度的数据",
    "id": 3777,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 14,
        "text": "精简指令系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5210,
    "created_at": "2024-08-01T12:17:02.378081Z",
    "updated_at": "2024-08-01T12:17:02.378081Z",
    "lead_time": 0.089
  },
  {
    "text": "同样，对读写时序信号也需要由启停逻辑加以控制",
    "id": 3778,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "启停逻辑",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5211,
    "created_at": "2024-08-01T12:17:03.511948Z",
    "updated_at": "2024-08-01T12:17:03.511948Z",
    "lead_time": 0.082
  },
  {
    "text": "类似地，、、三个微操作是相斥性的，、、三个微操作也是相斥性的",
    "id": 3779,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5212,
    "created_at": "2024-08-01T12:17:04.321998Z",
    "updated_at": "2024-08-01T12:17:04.322991Z",
    "lead_time": 0.061
  },
  {
    "text": "I指明立即数，如果I，第个源操作数在寄存器中；如果I，第个源操作数是位的立即数",
    "id": 3780,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "立即数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "源操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "立即数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5213,
    "created_at": "2024-08-01T12:17:05.128418Z",
    "updated_at": "2024-08-01T12:17:05.128418Z",
    "lead_time": 0.094
  },
  {
    "text": "表列出了Intel公司微处理器的演化",
    "id": 3781,
    "label": [
      {
        "start": 4,
        "end": 11,
        "text": "Intel公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5214,
    "created_at": "2024-08-01T12:17:06.113237Z",
    "updated_at": "2024-08-01T12:17:06.113237Z",
    "lead_time": 0.078
  },
  {
    "text": "但是磁芯存储器价格昂贵，体积大，而且读出是破坏性的，因此必须有读出后立即重写数据的电路",
    "id": 3782,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "磁芯存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5215,
    "created_at": "2024-08-01T12:17:06.880850Z",
    "updated_at": "2024-08-01T12:17:06.880850Z",
    "lead_time": 0.053
  },
  {
    "text": "这些级别不是表示层次关系，而是指出了不同存储容量、可靠性、数据传输能力、IO请求速率等方面的应用需求",
    "id": 3783,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "IO请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5216,
    "created_at": "2024-08-01T12:17:07.657827Z",
    "updated_at": "2024-08-01T12:17:07.657827Z",
    "lead_time": 0.06
  },
  {
    "text": "CPU总线也称CPU存储器总线，它是包含位数据线和位地址线的同步总线",
    "id": 3784,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 15,
        "text": "CPU存储器总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5217,
    "created_at": "2024-08-01T12:17:08.659756Z",
    "updated_at": "2024-08-01T12:17:08.659756Z",
    "lead_time": 0.116
  },
  {
    "text": "除此之外，状态条件寄存器还保存中断和系统工作状态等信息，以便使CPU和系统能及时了解机器运行状态和程序运行状态",
    "id": 3785,
    "label": [
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 12,
        "text": "状态条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5218,
    "created_at": "2024-08-01T12:17:09.554683Z",
    "updated_at": "2024-08-01T12:17:09.554683Z",
    "lead_time": 0.07
  },
  {
    "text": "缺点是微指令字较长，因而使控制存储器容量较大",
    "id": 3786,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5219,
    "created_at": "2024-08-01T12:17:10.273032Z",
    "updated_at": "2024-08-01T12:17:10.273032Z",
    "lead_time": 0.053
  },
  {
    "text": "由于数字化以后逐点存储，因此图像处理需要占用非常庞大的主存空间",
    "id": 3787,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "图像处理",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5220,
    "created_at": "2024-08-01T12:17:11.121133Z",
    "updated_at": "2024-08-01T12:17:11.121133Z",
    "lead_time": 0.079
  },
  {
    "text": "这样，不同的控制参数可以得到不同的组合函数，因而能够实现多种算术运算和逻辑运算",
    "id": 3788,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5221,
    "created_at": "2024-08-01T12:17:12.131095Z",
    "updated_at": "2024-08-01T12:17:12.131095Z",
    "lead_time": 0.065
  },
  {
    "text": "指令字长度一个指令字中包含二进制代码的位数，称为指令字长度",
    "id": 3789,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5222,
    "created_at": "2024-08-01T12:17:12.964470Z",
    "updated_at": "2024-08-01T12:17:12.964470Z",
    "lead_time": 0.073
  },
  {
    "text": "下面通过一个例子说明IO对系统性能的影响",
    "id": 3790,
    "annotator": 1,
    "annotation_id": 5223,
    "created_at": "2024-08-01T12:17:13.888399Z",
    "updated_at": "2024-08-01T12:17:13.888399Z",
    "lead_time": 0.059
  },
  {
    "text": "这样，运算器里只需要一个加法器就可以了，不必为了负数的加法运算，再配一个减法器",
    "id": 3791,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "减法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5224,
    "created_at": "2024-08-01T12:17:14.714911Z",
    "updated_at": "2024-08-01T12:17:14.714911Z",
    "lead_time": 0.064
  },
  {
    "text": "存储容量存储容量指一个存储器中可存储的信息比特数，常用比特数bit或字节数B来表示，也可使用KB、MB、GB、TB等单位",
    "id": 3792,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "比特数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "比特数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "TB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 59,
        "end": 60,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5225,
    "created_at": "2024-08-01T12:17:15.632450Z",
    "updated_at": "2024-08-01T12:17:15.632450Z",
    "lead_time": 0.122
  },
  {
    "text": "例如，一种单地址指令的结构如下所示，其中用X、I、A各字段组成该指令的操作数地址",
    "id": 3793,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "单地址指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5226,
    "created_at": "2024-08-01T12:17:16.666476Z",
    "updated_at": "2024-08-01T12:17:16.666476Z",
    "lead_time": 0.1
  },
  {
    "text": "因此，总的平均读写操作时间Ta可表示为式中，Ts表示平均寻道时间，b表示传送的字节数，N表示每磁道字节数，brN表示数据传输时间",
    "id": 3794,
    "label": [
      {
        "start": 47,
        "end": 49,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "平均寻道时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 58,
        "end": 64,
        "text": "数据传输时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 5,
        "end": 13,
        "text": "平均读写操作时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5227,
    "created_at": "2024-08-01T12:17:17.542460Z",
    "updated_at": "2024-08-01T12:17:17.542460Z",
    "lead_time": 0.065
  },
  {
    "text": "指令部件本身又构成一个流水线，即指令流水线，它由取指令、指令译码、计算操作数地址、取操作数等几个过程段组成",
    "id": 3795,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "指令译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5228,
    "created_at": "2024-08-01T12:17:18.393417Z",
    "updated_at": "2024-08-01T12:17:18.393417Z",
    "lead_time": 0.092
  },
  {
    "text": "图是Pentium计算机主板的总线结构框图",
    "id": 3796,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5229,
    "created_at": "2024-08-01T12:17:19.419710Z",
    "updated_at": "2024-08-01T12:17:19.419710Z",
    "lead_time": 0.078
  },
  {
    "text": "自IBM公司推出VGA后，VESA美国视频电子标准协会定义了一个VGA扩展集，将显示方式标准化，从而成为著名的SuperVGA模式",
    "id": 3797,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "IBM公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 17,
        "end": 27,
        "text": "美国视频电子标准协会",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 32,
        "end": 38,
        "text": "VGA扩展集",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5230,
    "created_at": "2024-08-01T12:17:20.341582Z",
    "updated_at": "2024-08-01T12:17:20.341582Z",
    "lead_time": 0.09
  },
  {
    "text": "图d画出了间接寻址方式的示意图",
    "id": 3798,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5231,
    "created_at": "2024-08-01T12:17:21.150285Z",
    "updated_at": "2024-08-01T12:17:21.150285Z",
    "lead_time": 0.061
  },
  {
    "text": "有顺序寻址和跳跃寻址两种，由指令计数器来跟踪",
    "id": 3799,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "跳跃寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "指令计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "顺序寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5232,
    "created_at": "2024-08-01T12:17:22.031643Z",
    "updated_at": "2024-08-01T12:17:22.031643Z",
    "lead_time": 0.089
  },
  {
    "text": "存储器读写周期的解释，取决于PCI总线上的存储器控制器是否支持存储器cache之间的PCI传输协议",
    "id": 3800,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5233,
    "created_at": "2024-08-01T12:17:22.925685Z",
    "updated_at": "2024-08-01T12:17:22.925685Z",
    "lead_time": 0.091
  },
  {
    "text": "PCI总线周期由当前被授权的主设备发起",
    "id": 3801,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5234,
    "created_at": "2024-08-01T12:17:23.814826Z",
    "updated_at": "2024-08-01T12:17:23.814826Z",
    "lead_time": 0.07
  },
  {
    "text": "相对寻址：适用于转移控制类指令",
    "id": 3802,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "相对寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5235,
    "created_at": "2024-08-01T12:17:24.682493Z",
    "updated_at": "2024-08-01T12:17:24.682493Z",
    "lead_time": 0.076
  },
  {
    "text": "当然，计算机中有些部件，如算术逻辑运算单元ALU只用电位信号工作就可以了",
    "id": 3803,
    "label": [
      {
        "start": 13,
        "end": 21,
        "text": "算术逻辑运算单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "电位信号",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5236,
    "created_at": "2024-08-01T12:17:25.581305Z",
    "updated_at": "2024-08-01T12:17:25.581305Z",
    "lead_time": 0.073
  },
  {
    "text": "为了理解方便，可以把主存首先分区，每个区的块数与cache的行数m相等",
    "id": 3804,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5237,
    "created_at": "2024-08-01T12:17:26.346739Z",
    "updated_at": "2024-08-01T12:17:26.346739Z",
    "lead_time": 0.051
  },
  {
    "text": "表列出了典型RISC指令系统的基本特征",
    "id": 3805,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5238,
    "created_at": "2024-08-01T12:17:27.146858Z",
    "updated_at": "2024-08-01T12:17:27.146858Z",
    "lead_time": 0.059
  },
  {
    "text": "用当前指令指针寄存器EIP或IP的内容下一条指令地址加上一个有符号的偏移量，形成CS段的段内偏移",
    "id": 3806,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5239,
    "created_at": "2024-08-01T12:17:28.242432Z",
    "updated_at": "2024-08-01T12:17:28.242432Z",
    "lead_time": 0.094
  },
  {
    "text": "若系统的总线宽度为W位，则带宽W存取周期bits",
    "id": 3807,
    "label": [
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "总线宽度",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "bits",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5240,
    "created_at": "2024-08-01T12:17:29.137270Z",
    "updated_at": "2024-08-01T12:17:29.137270Z",
    "lead_time": 0.089
  },
  {
    "text": "总线的特性物理特性总线的物理特性是指总线的物理连接方式，包括总线的根数，总线的插头、插座的形状，引脚线的排列方式等",
    "id": 3808,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "物理特性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "物理特性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5241,
    "created_at": "2024-08-01T12:17:29.981767Z",
    "updated_at": "2024-08-01T12:17:29.981767Z",
    "lead_time": 0.09
  },
  {
    "text": "早期的只读存储器中存储的原始数据必须在其工作以前离线存入芯片中，现代的许多只读存储器都能够支持在线更新其存储的内容，但更新操作与RAM的写操作完全不同，不仅控制复杂，而且耗时长，更新所需的时间比ROM的读操作时间长很多，可以重复更新的次数也相对较少",
    "id": 3809,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 97,
        "end": 100,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 101,
        "end": 104,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5242,
    "created_at": "2024-08-01T12:17:30.986397Z",
    "updated_at": "2024-08-01T12:17:30.986397Z",
    "lead_time": 0.069
  },
  {
    "text": "当从辅存调页至主存而主存已满时，也需要进行主存页面的替换",
    "id": 3810,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5243,
    "created_at": "2024-08-01T12:17:31.953640Z",
    "updated_at": "2024-08-01T12:17:31.953640Z",
    "lead_time": 0.089
  },
  {
    "text": "因为计算机高速地进行工作，每一个动作的时间是非常严格的，不能太早也不能太迟",
    "id": 3811,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5244,
    "created_at": "2024-08-01T12:17:32.960886Z",
    "updated_at": "2024-08-01T12:17:32.960886Z",
    "lead_time": 0.064
  },
  {
    "text": "目前的高性能微处理机几乎无一例外地使用了流水技术",
    "id": 3812,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "微处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5245,
    "created_at": "2024-08-01T12:17:33.957774Z",
    "updated_at": "2024-08-01T12:17:33.957774Z",
    "lead_time": 0.057
  },
  {
    "text": "一台计算机通常有几十种基本指令，从而构成了该计算机的指令系统",
    "id": 3813,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5246,
    "created_at": "2024-08-01T12:17:34.711737Z",
    "updated_at": "2024-08-01T12:17:34.711737Z",
    "lead_time": 0.063
  },
  {
    "text": "在竞争期间，由于W位输入的作用，各设备在其内部的CN线上保留其竞争号并不破坏AB线上的信息",
    "id": 3814,
    "label": [
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5247,
    "created_at": "2024-08-01T12:17:35.578956Z",
    "updated_at": "2024-08-01T12:17:35.578956Z",
    "lead_time": 0.072
  },
  {
    "text": "注意，菱形符号代表判别测试，它的动作在时间上依附于第一条微指令",
    "id": 3815,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5248,
    "created_at": "2024-08-01T12:17:36.587814Z",
    "updated_at": "2024-08-01T12:17:36.587814Z",
    "lead_time": 0.059
  },
  {
    "text": "本章先说明计算机的分类，然后采用自上而下的方法，简要地介绍硬件、软件的概念和组成，目的在于使读者先有一个粗略的总体概念，以便于展开后续各章内容",
    "id": 3816,
    "label": [
      {
        "start": 29,
        "end": 31,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5249,
    "created_at": "2024-08-01T12:17:37.426634Z",
    "updated_at": "2024-08-01T12:17:37.426634Z",
    "lead_time": 0.089
  },
  {
    "text": "多核机是多于一个处理器的计算机芯片，具有更强的能力",
    "id": 3817,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "多核机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5250,
    "created_at": "2024-08-01T12:17:38.239724Z",
    "updated_at": "2024-08-01T12:17:38.239724Z",
    "lead_time": 0.067
  },
  {
    "text": "不管什么样的外围设备，只要选用某种数据传送控制方法，并按它的规定通过总线和主机连接，就可进行信息交换",
    "id": 3818,
    "label": [
      {
        "start": 17,
        "end": 25,
        "text": "数据传送控制方法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5251,
    "created_at": "2024-08-01T12:17:39.186872Z",
    "updated_at": "2024-08-01T12:17:39.186872Z",
    "lead_time": 0.065
  },
  {
    "text": "这样，内存储器就分为cache和主存两部分，由此构成了三级存储系统，其结构如图所示",
    "id": 3819,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5252,
    "created_at": "2024-08-01T12:17:39.990884Z",
    "updated_at": "2024-08-01T12:17:39.990884Z",
    "lead_time": 0.078
  },
  {
    "text": "这个器件的商业标号为ALU",
    "id": 3820,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5253,
    "created_at": "2024-08-01T12:17:40.721542Z",
    "updated_at": "2024-08-01T12:17:40.721542Z",
    "lead_time": 0.046
  },
  {
    "text": "在第四个CPU周期开始时，按微地址读出第四条微指令，其编码是微指令发出RX，RY，，LDR的微命令，运算器完成了RRR的操作功能",
    "id": 3821,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5254,
    "created_at": "2024-08-01T12:17:41.768024Z",
    "updated_at": "2024-08-01T12:17:41.768024Z",
    "lead_time": 0.112
  },
  {
    "text": "SRAM的存储元是一个触发器，它具有两个稳定的状态",
    "id": 3822,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5255,
    "created_at": "2024-08-01T12:17:42.680637Z",
    "updated_at": "2024-08-01T12:17:42.680637Z",
    "lead_time": 0.078
  },
  {
    "text": "它与一样，都是位微处理器，但更快，有更丰富的指令系统和更强的寻址能力",
    "id": 3823,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5256,
    "created_at": "2024-08-01T12:17:43.787036Z",
    "updated_at": "2024-08-01T12:17:43.788056Z",
    "lead_time": 0.102
  },
  {
    "text": "例如，执行一个加法操作时，第一个操作数先放入A缓冲寄存器，然后再把第二个操作数放入B缓冲寄存器",
    "id": 3824,
    "label": [
      {
        "start": 23,
        "end": 28,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5257,
    "created_at": "2024-08-01T12:17:44.813408Z",
    "updated_at": "2024-08-01T12:17:44.813408Z",
    "lead_time": 0.081
  },
  {
    "text": "这种电压的高低，脉冲的有无，在电子器件中很容易实现，而且设备也最省",
    "id": 3825,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "电子器件",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5258,
    "created_at": "2024-08-01T12:17:45.710514Z",
    "updated_at": "2024-08-01T12:17:45.710514Z",
    "lead_time": 0.056
  },
  {
    "text": "但是计算机系统对传输性能的要求仍在不断提升中，PCI总线逐渐难以满足高速显卡等高性能传输模块的性能要求",
    "id": 3826,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "高速显卡",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5259,
    "created_at": "2024-08-01T12:17:46.516800Z",
    "updated_at": "2024-08-01T12:17:46.516800Z",
    "lead_time": 0.062
  },
  {
    "text": "不同命令通常要占用长短不一的若干个总线写周期",
    "id": 3827,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5260,
    "created_at": "2024-08-01T12:17:47.672695Z",
    "updated_at": "2024-08-01T12:17:47.672695Z",
    "lead_time": 0.086
  },
  {
    "text": "它是采用较长的微程序结构去换取较短的微指令结构",
    "id": 3828,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5261,
    "created_at": "2024-08-01T12:17:48.525004Z",
    "updated_at": "2024-08-01T12:17:48.525004Z",
    "lead_time": 0.065
  },
  {
    "text": "接着从存储器取出第二条指令，再执行这第二条指令",
    "id": 3829,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5262,
    "created_at": "2024-08-01T12:17:49.459948Z",
    "updated_at": "2024-08-01T12:17:49.459948Z",
    "lead_time": 0.069
  },
  {
    "text": "表中括号内的数字，如，指的是三原色RGB每色所占的位数，有的还在前面有，表示I加亮占位",
    "id": 3830,
    "label": [
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5263,
    "created_at": "2024-08-01T12:17:50.690782Z",
    "updated_at": "2024-08-01T12:17:50.690782Z",
    "lead_time": 0.056
  },
  {
    "text": "概括起来，主要有三种形式：时间并行；空间并行；时间并行空间并行",
    "id": 3831,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5264,
    "created_at": "2024-08-01T12:17:51.486101Z",
    "updated_at": "2024-08-01T12:17:51.486101Z",
    "lead_time": 0.069
  },
  {
    "text": "cond指明条件，该字段涉及条件转移指令",
    "id": 3832,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "cond指明条件",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5265,
    "created_at": "2024-08-01T12:17:52.359683Z",
    "updated_at": "2024-08-01T12:17:52.359683Z",
    "lead_time": 0.06
  },
  {
    "text": "当操作控制字段某一位信息为“”时，表示发出微命令；而某一位信息为“”时，表示不发出微命令",
    "id": 3833,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "操作控制字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5266,
    "created_at": "2024-08-01T12:17:53.449933Z",
    "updated_at": "2024-08-01T12:17:53.449933Z",
    "lead_time": 0.08
  },
  {
    "text": "要特别注意控制信号是电位有效还是脉冲有效，如果是脉冲有效，必须加入节拍脉冲信号进行相“与”",
    "id": 3834,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 39,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5267,
    "created_at": "2024-08-01T12:17:54.258858Z",
    "updated_at": "2024-08-01T12:17:54.259870Z",
    "lead_time": 0.061
  },
  {
    "text": "在定点机中，当运算结果发生溢出时表示出错，机器通过逻辑电路自动检查出这种溢出，并进行中断处理",
    "id": 3835,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "定点机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5268,
    "created_at": "2024-08-01T12:17:55.047028Z",
    "updated_at": "2024-08-01T12:17:55.047028Z",
    "lead_time": 0.08
  },
  {
    "text": "拼音码拼音码是以汉语拼音为基础的输入方法",
    "id": 3836,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "拼音码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "拼音码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5269,
    "created_at": "2024-08-01T12:17:56.122146Z",
    "updated_at": "2024-08-01T12:17:56.122146Z",
    "lead_time": 0.075
  },
  {
    "text": "在段式虚拟存储系统中，虚地址由段号和段内地址偏移量组成",
    "id": 3837,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "段式虚拟存储",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "段号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "段内地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5270,
    "created_at": "2024-08-01T12:17:56.938259Z",
    "updated_at": "2024-08-01T12:17:56.938259Z",
    "lead_time": 0.081
  },
  {
    "text": "半导体只读存储器ROM最大的特点是其非易失性，其访问速度比RAM稍低，可以按地址随机访问并在线执行程序，因而在计算机中用于储存固件、引导加载程序、监控程序及不变或很少改变的数据",
    "id": 3838,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "半导体只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "非易失性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "随机访问",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5271,
    "created_at": "2024-08-01T12:17:57.772870Z",
    "updated_at": "2024-08-01T12:17:57.772870Z",
    "lead_time": 0.07
  },
  {
    "text": "控制总线中各条线一般是单向的，有CPU发出的，也有进入CPU的，有高电平有效的，也有低电平有效的",
    "id": 3839,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "控制总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5272,
    "created_at": "2024-08-01T12:17:58.718110Z",
    "updated_at": "2024-08-01T12:17:58.718110Z",
    "lead_time": 0.068
  },
  {
    "text": "磁盘记录面经这样编址后，就可用n磁道m扇区的磁盘地址找到实际磁盘上与之相对应的记录区",
    "id": 3840,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "记录面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "记录区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5273,
    "created_at": "2024-08-01T12:17:59.667884Z",
    "updated_at": "2024-08-01T12:17:59.667884Z",
    "lead_time": 0.094
  },
  {
    "text": "出发点相同二者都是为了提高存储系统的性能价格比而构造的分层存储体系，都力图使存储系统的性能接近高速存储器，而价格和容量接近低速存储器",
    "id": 3841,
    "label": [
      {
        "start": 61,
        "end": 66,
        "text": "低速存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "高速存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5274,
    "created_at": "2024-08-01T12:18:00.759806Z",
    "updated_at": "2024-08-01T12:18:00.760805Z",
    "lead_time": 0.098
  },
  {
    "text": "主方结束一个总线周期时不要求目标方确认",
    "id": 3842,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5275,
    "created_at": "2024-08-01T12:18:01.630393Z",
    "updated_at": "2024-08-01T12:18:01.630393Z",
    "lead_time": 0.061
  },
  {
    "text": "在PCI总线体系结构中有三种桥",
    "id": 3843,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5276,
    "created_at": "2024-08-01T12:18:02.410318Z",
    "updated_at": "2024-08-01T12:18:02.410318Z",
    "lead_time": 0.056
  },
  {
    "text": "显然，由于采用同步工作方式，长指令和短指令对节拍时间的利用都是一样的",
    "id": 3844,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "短指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "节拍时间",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5277,
    "created_at": "2024-08-01T12:18:03.271273Z",
    "updated_at": "2024-08-01T12:18:03.271273Z",
    "lead_time": 0.086
  },
  {
    "text": "因此，仲裁器清楚当前总线的使用状态：是处于空闲状态还是一个有效的总线周期",
    "id": 3845,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5278,
    "created_at": "2024-08-01T12:18:04.261391Z",
    "updated_at": "2024-08-01T12:18:04.261391Z",
    "lead_time": 0.073
  },
  {
    "text": "PCI总线用于连接高速的IO设备模块，如图形显示器适配器、网络接口控制器、硬盘控制器等",
    "id": 3846,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "图形显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 29,
        "end": 36,
        "text": "网络接口控制器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "硬盘控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5279,
    "created_at": "2024-08-01T12:18:05.087241Z",
    "updated_at": "2024-08-01T12:18:05.087241Z",
    "lead_time": 0.086
  },
  {
    "text": "读出后，输入缓冲器关闭，刷新缓冲器打开，输出缓冲器读放打开，读出的数据DOUT又经刷新缓冲器送到位线上，再经MOS管写到电容上，存储元重写",
    "id": 3847,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5280,
    "created_at": "2024-08-01T12:18:05.999401Z",
    "updated_at": "2024-08-01T12:18:05.999401Z",
    "lead_time": 0.074
  },
  {
    "text": "字节串可从到字节长",
    "id": 3848,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5281,
    "created_at": "2024-08-01T12:18:06.713117Z",
    "updated_at": "2024-08-01T12:18:06.713117Z",
    "lead_time": 0.04
  },
  {
    "text": "假设现在的标准时间为点正，而有一只表已经点了，为了校准时间，可以采用两种方法：一是将时针退格；一是将时针向前拨格",
    "id": 3849,
    "annotator": 1,
    "annotation_id": 5282,
    "created_at": "2024-08-01T12:18:07.325933Z",
    "updated_at": "2024-08-01T12:18:07.325933Z",
    "lead_time": 0.034
  },
  {
    "text": "作为串行通信总线，PCIe所有的数据都是以数据包为单位进行传输的",
    "id": 3850,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "串行通信总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5283,
    "created_at": "2024-08-01T12:18:08.070232Z",
    "updated_at": "2024-08-01T12:18:08.070232Z",
    "lead_time": 0.054
  },
  {
    "text": "在这种表示中，规定数位加符号位之和必须为偶数，当和不为偶数时，应在最高数字位之前补一个",
    "id": 3851,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5284,
    "created_at": "2024-08-01T12:18:08.921028Z",
    "updated_at": "2024-08-01T12:18:08.921028Z",
    "lead_time": 0.065
  },
  {
    "text": "从存储元读出时，输入缓冲器和刷新缓冲器关闭，输出缓冲器读放打开RW为高",
    "id": 3852,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5285,
    "created_at": "2024-08-01T12:18:09.603389Z",
    "updated_at": "2024-08-01T12:18:09.603389Z",
    "lead_time": 0.058
  },
  {
    "text": "计算机语言发展的方向是标准化、积木化、产品化，最终是向自然语言发展，它们能够自动生成程序",
    "id": 3853,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5286,
    "created_at": "2024-08-01T12:18:10.341121Z",
    "updated_at": "2024-08-01T12:18:10.341121Z",
    "lead_time": 0.047
  },
  {
    "text": "串行传送当信息以串行方式传送时，只有一条传输线，且采用脉冲传送",
    "id": 3854,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5287,
    "created_at": "2024-08-01T12:18:11.121555Z",
    "updated_at": "2024-08-01T12:18:11.121555Z",
    "lead_time": 0.048
  },
  {
    "text": "最简单的纠错码是汉明码",
    "id": 3855,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "汉明码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "纠错码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5288,
    "created_at": "2024-08-01T12:18:11.777349Z",
    "updated_at": "2024-08-01T12:18:11.777349Z",
    "lead_time": 0.048
  },
  {
    "text": "下面对位寻址方式作几点说明",
    "id": 3856,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5289,
    "created_at": "2024-08-01T12:18:12.492218Z",
    "updated_at": "2024-08-01T12:18:12.492218Z",
    "lead_time": 0.053
  },
  {
    "text": "计算机中，一个机器浮点数由阶码和尾数及其符号位组成：大多数通用性较强的计算机都能直接处理十进制形式表示的数据",
    "id": 3857,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5290,
    "created_at": "2024-08-01T12:18:13.352375Z",
    "updated_at": "2024-08-01T12:18:13.352375Z",
    "lead_time": 0.099
  },
  {
    "text": "例如，磁盘设备中，驱动装置用于转动磁盘并进行定位",
    "id": 3858,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "驱动装置",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5291,
    "created_at": "2024-08-01T12:18:14.214631Z",
    "updated_at": "2024-08-01T12:18:14.214631Z",
    "lead_time": 0.057
  },
  {
    "text": "再次，用到了笔，利用笔把原始数据和解题步骤记录到纸上，还可把计算结果写出来告诉人",
    "id": 3859,
    "annotator": 1,
    "annotation_id": 5292,
    "created_at": "2024-08-01T12:18:14.942637Z",
    "updated_at": "2024-08-01T12:18:14.942637Z",
    "lead_time": 0.036
  },
  {
    "text": "电子模拟计算机由于精度和解题能力都有限，所以应用范围较小",
    "id": 3860,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "电子模拟计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5293,
    "created_at": "2024-08-01T12:18:15.586474Z",
    "updated_at": "2024-08-01T12:18:15.586474Z",
    "lead_time": 0.055
  },
  {
    "text": "取指周期中CPU完成三件事：从指存取出指令；对程序计数器PC加，以便为取下一条指令做好准备；对指令操作码进行译码或测试，以便确定进行什么操作",
    "id": 3861,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 30,
        "text": "程序计数器PC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5294,
    "created_at": "2024-08-01T12:18:16.506579Z",
    "updated_at": "2024-08-01T12:18:16.506579Z",
    "lead_time": 0.103
  },
  {
    "text": "近年来，人们在传统DRAM的基础上应用了诸多技术提升其访问速度",
    "id": 3862,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5295,
    "created_at": "2024-08-01T12:18:17.373550Z",
    "updated_at": "2024-08-01T12:18:17.373550Z",
    "lead_time": 0.053
  },
  {
    "text": "通常，一个算术操作产生一个运算结果，而一个逻辑操作则产生一个判决",
    "id": 3863,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "逻辑操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "算术操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5296,
    "created_at": "2024-08-01T12:18:18.255419Z",
    "updated_at": "2024-08-01T12:18:18.255419Z",
    "lead_time": 0.087
  },
  {
    "text": "各存储体可同时和独立工作，也可选择顺序工作或交替工作",
    "id": 3864,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5297,
    "created_at": "2024-08-01T12:18:19.129231Z",
    "updated_at": "2024-08-01T12:18:19.129231Z",
    "lead_time": 0.045
  },
  {
    "text": "在计算机系统中，微程序设计技术是利用软件方法来设计硬件的一门技术",
    "id": 3865,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5298,
    "created_at": "2024-08-01T12:18:19.886478Z",
    "updated_at": "2024-08-01T12:18:19.886478Z",
    "lead_time": 0.064
  },
  {
    "text": "而某一模块出现故障时，其他模块可以照常工作",
    "id": 3866,
    "annotator": 1,
    "annotation_id": 5299,
    "created_at": "2024-08-01T12:18:20.728246Z",
    "updated_at": "2024-08-01T12:18:20.728246Z",
    "lead_time": 0.039
  },
  {
    "text": "一种是统一编址方式：输入输出设备接口中的控制寄存器、数据寄存器、状态寄存器等和内存单元一样看待，它们和内存单元联合在一起编排地址",
    "id": 3867,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "统一编址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "控制寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "数据寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "状态寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "内存单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "内存单元",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5300,
    "created_at": "2024-08-01T12:18:21.721470Z",
    "updated_at": "2024-08-01T12:18:21.721470Z",
    "lead_time": 0.099
  },
  {
    "text": "有效地址计算公式为EAAR它要求指令中有两个地址字段，至少其中一个是显示的",
    "id": 3868,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5301,
    "created_at": "2024-08-01T12:18:22.702247Z",
    "updated_at": "2024-08-01T12:18:22.702247Z",
    "lead_time": 0.074
  },
  {
    "text": "执行单元它执行微指令，从L数据cache中取所需数据，并在寄存器组中暂存运算结果",
    "id": 3869,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "执行单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "寄存器组",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5302,
    "created_at": "2024-08-01T12:18:23.588862Z",
    "updated_at": "2024-08-01T12:18:23.588862Z",
    "lead_time": 0.096
  },
  {
    "text": "MO盘和纯磁盘的基本区别是：磁光盘的磁表面需要高温来改变磁极",
    "id": 3870,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "MO盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "磁光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5303,
    "created_at": "2024-08-01T12:18:24.406674Z",
    "updated_at": "2024-08-01T12:18:24.406674Z",
    "lead_time": 0.048
  },
  {
    "text": "闪速Flash存储器闪存也属于电可擦、可在线编程的非易失性只读存储器",
    "id": 3871,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 10,
        "text": "闪速Flash存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 34,
        "text": "非易失性只读存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5304,
    "created_at": "2024-08-01T12:18:25.120637Z",
    "updated_at": "2024-08-01T12:18:25.120637Z",
    "lead_time": 0.06
  },
  {
    "text": "因此规格化的位浮点数x的真值为浮点数所表示的范围远比定点数大",
    "id": 3872,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5305,
    "created_at": "2024-08-01T12:18:26.062501Z",
    "updated_at": "2024-08-01T12:18:26.062501Z",
    "lead_time": 0.089
  },
  {
    "text": "计算机从第三代起，与集成电路技术的发展密切相关",
    "id": 3873,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5306,
    "created_at": "2024-08-01T12:18:27.294222Z",
    "updated_at": "2024-08-01T12:18:27.294222Z",
    "lead_time": 0.073
  },
  {
    "text": "指令结构中的RR型指令，就是采用寄存器寻址方式的例子",
    "id": 3874,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "RR型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5307,
    "created_at": "2024-08-01T12:18:28.119683Z",
    "updated_at": "2024-08-01T12:18:28.119683Z",
    "lead_time": 0.065
  },
  {
    "text": "若E且M，则NS",
    "id": 3875,
    "annotator": 1,
    "annotation_id": 5308,
    "created_at": "2024-08-01T12:18:29.028775Z",
    "updated_at": "2024-08-01T12:18:29.028775Z",
    "lead_time": 0.044
  },
  {
    "text": "由于种类繁多且速度各异，因而它们不是直接与高速工作的主机相连接，而是通过适配器部件与主机相联系",
    "id": 3876,
    "label": [
      {
        "start": 36,
        "end": 41,
        "text": "适配器部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5309,
    "created_at": "2024-08-01T12:18:29.891411Z",
    "updated_at": "2024-08-01T12:18:29.891411Z",
    "lead_time": 0.055
  },
  {
    "text": "随着高档微处理器芯片的出现，构造处理机流水线将变得容易了",
    "id": 3877,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5310,
    "created_at": "2024-08-01T12:18:30.920806Z",
    "updated_at": "2024-08-01T12:18:30.920806Z",
    "lead_time": 0.087
  },
  {
    "text": "因此先要除去鼓表面的电荷，然后经清扫刷，将残余的碳粉全部清除",
    "id": 3878,
    "annotator": 1,
    "annotation_id": 5311,
    "created_at": "2024-08-01T12:18:31.875675Z",
    "updated_at": "2024-08-01T12:18:31.875675Z",
    "lead_time": 0.061
  },
  {
    "text": "顺序控制部分直接给出下一条微指令的地址为，按该地址取出的微指令是“取指”微指令",
    "id": 3879,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "取指",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5312,
    "created_at": "2024-08-01T12:18:32.728375Z",
    "updated_at": "2024-08-01T12:18:32.728375Z",
    "lead_time": 0.063
  },
  {
    "text": "图示出了典型的多总线结构框图",
    "id": 3880,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5313,
    "created_at": "2024-08-01T12:18:33.502633Z",
    "updated_at": "2024-08-01T12:18:33.502633Z",
    "lead_time": 0.04
  },
  {
    "text": "前者采用空间并行技术，后者采用时间并行技术",
    "id": 3881,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "空间并行技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "时间并行技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5314,
    "created_at": "2024-08-01T12:18:34.262815Z",
    "updated_at": "2024-08-01T12:18:34.262815Z",
    "lead_time": 0.051
  },
  {
    "text": "只有在对全都是CPU寄存器中的两个操作数进行操作时，单总线结构的运算器才会造成一定的时间损失",
    "id": 3882,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5315,
    "created_at": "2024-08-01T12:18:35.424746Z",
    "updated_at": "2024-08-01T12:18:35.424746Z",
    "lead_time": 0.08
  },
  {
    "text": "硬磁盘按盘片结构，分成可换盘片式与固定盘片式两种；磁头也分为可移动磁头和固定磁头两种",
    "id": 3883,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "可移动磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "固定磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "可换盘片式",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "固定盘片式",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5316,
    "created_at": "2024-08-01T12:18:36.302745Z",
    "updated_at": "2024-08-01T12:18:36.302745Z",
    "lead_time": 0.077
  },
  {
    "text": "所有的Pentium处理器包含两个片内Lcache，一个是Dcache数据cache，一个是Icache指令cache",
    "id": 3884,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 42,
        "text": "数据cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 59,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5317,
    "created_at": "2024-08-01T12:18:37.222819Z",
    "updated_at": "2024-08-01T12:18:37.222819Z",
    "lead_time": 0.105
  },
  {
    "text": "虚线框中的IO接口、图像存储器刷新存储器、AD与DA变换等组成单独的一个部分，称为图像输入控制板或视频数字化仪",
    "id": 3885,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "图像存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 53,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5318,
    "created_at": "2024-08-01T12:18:38.091337Z",
    "updated_at": "2024-08-01T12:18:38.091337Z",
    "lead_time": 0.057
  },
  {
    "text": "国际上采用的字符系统是七单位的ASCII码",
    "id": 3886,
    "label": [
      {
        "start": 15,
        "end": 21,
        "text": "ASCII码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5319,
    "created_at": "2024-08-01T12:18:39.052727Z",
    "updated_at": "2024-08-01T12:18:39.052727Z",
    "lead_time": 0.066
  },
  {
    "text": "并行传送用并行方式传送二进制信息时，对每个数据位都需要单独一条传输线",
    "id": 3887,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "并行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "数据位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5320,
    "created_at": "2024-08-01T12:18:40.084486Z",
    "updated_at": "2024-08-01T12:18:40.084486Z",
    "lead_time": 0.097
  },
  {
    "text": "这些外围设备有高速的也有低速的，有机电结构的，也有全电子式的",
    "id": 3888,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5321,
    "created_at": "2024-08-01T12:18:40.937926Z",
    "updated_at": "2024-08-01T12:18:40.938942Z",
    "lead_time": 0.058
  },
  {
    "text": "为了简化节拍控制，指令的执行过程可采用同步工作方式，即各条指令的执行阶段均用最长节拍数M来考虑",
    "id": 3889,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "同步工作方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5322,
    "created_at": "2024-08-01T12:18:41.652932Z",
    "updated_at": "2024-08-01T12:18:41.652932Z",
    "lead_time": 0.054
  },
  {
    "text": "Ci的时间延迟为T，其中T被定义为相应于单级逻辑电路的单位门延迟",
    "id": 3890,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5323,
    "created_at": "2024-08-01T12:18:42.472000Z",
    "updated_at": "2024-08-01T12:18:42.472000Z",
    "lead_time": 0.086
  },
  {
    "text": "CPU将数据放到数据线上，与此同时启动状态线和地址线",
    "id": 3891,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "状态线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5324,
    "created_at": "2024-08-01T12:18:43.440810Z",
    "updated_at": "2024-08-01T12:18:43.441808Z",
    "lead_time": 0.076
  },
  {
    "text": "在段式虚拟存储系统中，虚地址由段号和段内地址偏移量组成",
    "id": 3892,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "段式虚拟存储",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "段号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "段内地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5325,
    "created_at": "2024-08-01T12:18:44.296736Z",
    "updated_at": "2024-08-01T12:18:44.296736Z",
    "lead_time": 0.078
  },
  {
    "text": "另外的个字符，其编码值为和，则不对应任何一个可以显示或打印的实际字符，它们被用作控制码，控制计算机某些外围设备的工作特性和某些计算机软件的运行情况",
    "id": 3893,
    "label": [
      {
        "start": 40,
        "end": 43,
        "text": "控制码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 63,
        "end": 68,
        "text": "计算机软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5326,
    "created_at": "2024-08-01T12:18:45.272752Z",
    "updated_at": "2024-08-01T12:18:45.272752Z",
    "lead_time": 0.108
  },
  {
    "text": "上式在数学上称为同余式",
    "id": 3894,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "同余式",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5327,
    "created_at": "2024-08-01T12:18:46.226800Z",
    "updated_at": "2024-08-01T12:18:46.226800Z",
    "lead_time": 0.05
  },
  {
    "text": "奔腾CPU内的数据cache是一个路组相联结构，就采用这种简捷的LRU替换算法",
    "id": 3895,
    "label": [
      {
        "start": 7,
        "end": 14,
        "text": "数据cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 39,
        "text": "LRU替换算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5328,
    "created_at": "2024-08-01T12:18:47.096182Z",
    "updated_at": "2024-08-01T12:18:47.096182Z",
    "lead_time": 0.07
  },
  {
    "text": "地址线是单向的，用来传送主存与设备的地址；数据线是双向的，用来传送数据；控制线一般而言对每一根线是单向的CPU发向接口，或接口发向CPU，用来指明数据传送的方向存储器读、存储器写、IO读、IO写、中断控制请求、识别和定时控制等",
    "id": 3896,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 80,
        "end": 84,
        "text": "存储器读",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 85,
        "end": 89,
        "text": "存储器写",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "IO读",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 94,
        "end": 97,
        "text": "IO写",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 98,
        "end": 104,
        "text": "中断控制请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5329,
    "created_at": "2024-08-01T12:18:48.194325Z",
    "updated_at": "2024-08-01T12:18:48.194325Z",
    "lead_time": 0.14
  },
  {
    "text": "计算机软件一般分为两大类：一类叫系统程序，一类叫应用程序",
    "id": 3897,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "计算机软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "系统程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5330,
    "created_at": "2024-08-01T12:18:49.081890Z",
    "updated_at": "2024-08-01T12:18:49.081890Z",
    "lead_time": 0.061
  },
  {
    "text": "在计算机系统中，运算器和控制器通常被组合在一个集成电路芯片中，合称为中央处理器（中央处理机），简称处理器，英文缩写为CPU",
    "id": 3898,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "中央处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 45,
        "text": "中央处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5331,
    "created_at": "2024-08-01T12:18:49.950745Z",
    "updated_at": "2024-08-01T12:18:49.950745Z",
    "lead_time": 0.08
  },
  {
    "text": "在读写周期时，主存地址中A，RAS有效；A，RAS有效",
    "id": 3899,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5332,
    "created_at": "2024-08-01T12:18:51.152763Z",
    "updated_at": "2024-08-01T12:18:51.152763Z",
    "lead_time": 0.087
  },
  {
    "text": "而DRAM的信息是用电荷储存在电容上，随着时间的推移，电荷会逐渐漏掉，储存信息也会丢失，因此要周期性地对其“刷新”",
    "id": 3900,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5333,
    "created_at": "2024-08-01T12:18:51.903351Z",
    "updated_at": "2024-08-01T12:18:51.903351Z",
    "lead_time": 0.054
  },
  {
    "text": "图c表示流水计算机的时空图",
    "id": 3901,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "时空图",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5334,
    "created_at": "2024-08-01T12:18:52.772050Z",
    "updated_at": "2024-08-01T12:18:52.772050Z",
    "lead_time": 0.065
  },
  {
    "text": "为了将全加器的功能进行扩展以完成多种算术逻辑运算，我们先不将输入Ai、Bi和下一位的进位数Ci直接进行全加，而是将Ai和Bi先组合成由控制参数S、S、S、S控制的组合函数Xi和Yi图，然后再将Xi、Yi和下一位进位数通过全加器进行全加",
    "id": 3902,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 110,
        "end": 113,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 44,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 104,
        "end": 105,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 106,
        "end": 107,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5335,
    "created_at": "2024-08-01T12:18:53.844097Z",
    "updated_at": "2024-08-01T12:18:53.844097Z",
    "lead_time": 0.102
  },
  {
    "text": "为了获取闪存内部的工作状态，可以读取RYBYReadyBusy信号的电平：高表示芯片准备好接收新的命令，低表示芯片内部正忙于处理上一操作",
    "id": 3903,
    "label": [
      {
        "start": 40,
        "end": 42,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5336,
    "created_at": "2024-08-01T12:18:54.789894Z",
    "updated_at": "2024-08-01T12:18:54.789894Z",
    "lead_time": 0.065
  },
  {
    "text": "根据上面所列的函数关系，即可列出Xi和Yi的逻辑表达式这样，对一片ALU来说，可有三个进位输出",
    "id": 3904,
    "label": [
      {
        "start": 33,
        "end": 36,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 45,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5337,
    "created_at": "2024-08-01T12:18:55.674108Z",
    "updated_at": "2024-08-01T12:18:55.674108Z",
    "lead_time": 0.068
  },
  {
    "text": "光道上划分出一个个扇区，它是光盘的最小可寻址单位",
    "id": 3905,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5338,
    "created_at": "2024-08-01T12:18:56.708612Z",
    "updated_at": "2024-08-01T12:18:56.708612Z",
    "lead_time": 0.065
  },
  {
    "text": "堆栈是一种特殊的数据寻址方式，采用“先进后出”原理",
    "id": 3906,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5339,
    "created_at": "2024-08-01T12:19:05.569327Z",
    "updated_at": "2024-08-01T12:19:05.569327Z",
    "lead_time": 1.261
  },
  {
    "text": "S设置状态，该字段涉及条件转移指令",
    "id": 3907,
    "label": [
      {
        "start": 11,
        "end": 17,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5340,
    "created_at": "2024-08-01T12:19:06.485421Z",
    "updated_at": "2024-08-01T12:19:06.485421Z",
    "lead_time": 0.279
  },
  {
    "text": "设Xxxxn是一个n位字，则奇校验位C定义为节已介绍了数的补码表示法，负数用补码表示后，就可以和正数一样来处理",
    "id": 3908,
    "label": [
      {
        "start": 29,
        "end": 31,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "奇校验位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5341,
    "created_at": "2024-08-01T12:19:07.390446Z",
    "updated_at": "2024-08-01T12:19:07.390446Z",
    "lead_time": 0.326
  },
  {
    "text": "如果要传送的数据由位二进制位组成字节，那么就使用条线组成的扁平电缆",
    "id": 3909,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5342,
    "created_at": "2024-08-01T12:19:08.239359Z",
    "updated_at": "2024-08-01T12:19:08.239359Z",
    "lead_time": 0.205
  },
  {
    "text": "只有取数指令、存数指令访问存储器",
    "id": 3910,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "取数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5343,
    "created_at": "2024-08-01T12:19:09.100386Z",
    "updated_at": "2024-08-01T12:19:09.100386Z",
    "lead_time": 0.065
  },
  {
    "text": "作为开关使用，而所存储的信息或则是由电容器上的电荷量来体现当电容器充满电荷时，代表存储了，当电容器放电没有电荷时，代表存储了",
    "id": 3911,
    "annotator": 1,
    "annotation_id": 5344,
    "created_at": "2024-08-01T12:19:10.263371Z",
    "updated_at": "2024-08-01T12:19:10.263371Z",
    "lead_time": 0.532
  },
  {
    "text": "用户的虚拟地址空间是GB",
    "id": 3912,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "虚拟地址空间",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5345,
    "created_at": "2024-08-01T12:19:11.119508Z",
    "updated_at": "2024-08-01T12:19:11.119508Z",
    "lead_time": 0.183
  },
  {
    "text": "目前许多计算机包括微型机，都配有数据库管理系统",
    "id": 3913,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 16,
        "end": 23,
        "text": "数据库管理系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5346,
    "created_at": "2024-08-01T12:19:12.351375Z",
    "updated_at": "2024-08-01T12:19:12.351375Z",
    "lead_time": 0.435
  },
  {
    "text": "地址期为一个总线时钟周期，一个数据期在没有等待状态下也是一个时钟周期",
    "id": 3914,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "地址期",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "数据期",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5347,
    "created_at": "2024-08-01T12:19:13.006835Z",
    "updated_at": "2024-08-01T12:19:13.006835Z",
    "lead_time": 0.067
  },
  {
    "text": "思考题温盘的发明具有划时代意义，你能说说为什么吗？磁盘驱动器它是一种精密的电子和机械装置，因此各部件的加工安装有严格的技术要求",
    "id": 3915,
    "label": [
      {
        "start": 25,
        "end": 30,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5348,
    "created_at": "2024-08-01T12:19:13.855051Z",
    "updated_at": "2024-08-01T12:19:13.855051Z",
    "lead_time": 0.075
  },
  {
    "text": "基于多通道的数据传递方式",
    "id": 3916,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "多通道",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5349,
    "created_at": "2024-08-01T12:19:21.013573Z",
    "updated_at": "2024-08-01T12:19:21.013573Z",
    "lead_time": 6.338
  },
  {
    "text": "强调通用寄存器资源的优化使用",
    "id": 3917,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5350,
    "created_at": "2024-08-01T12:19:22.515395Z",
    "updated_at": "2024-08-01T12:19:22.515395Z",
    "lead_time": 0.947
  },
  {
    "text": "、两种寻址方式是、两种寻址方式的组合，此时偏移量可有可无",
    "id": 3918,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5351,
    "created_at": "2024-08-01T12:19:24.015299Z",
    "updated_at": "2024-08-01T12:19:24.015299Z",
    "lead_time": 0.854
  },
  {
    "text": "每一条线分别代表了二进制数的不同位值",
    "id": 3919,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5352,
    "created_at": "2024-08-01T12:19:24.965066Z",
    "updated_at": "2024-08-01T12:19:24.965066Z",
    "lead_time": 0.393
  },
  {
    "text": "主方启动一个总线周期时要求目标方确认",
    "id": 3920,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5353,
    "created_at": "2024-08-01T12:19:26.153372Z",
    "updated_at": "2024-08-01T12:19:26.153372Z",
    "lead_time": 0.57
  },
  {
    "text": "如图a所示，所有区的第块在调入cache时只能映射到cache的第组，所有区的第块在调入cache时只能映射到cache的第组，所有区的第u块在调入cache时只能映射到cache的第u组",
    "id": 3921,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 74,
        "end": 79,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 85,
        "end": 90,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5354,
    "created_at": "2024-08-01T12:19:26.868471Z",
    "updated_at": "2024-08-01T12:19:26.868471Z",
    "lead_time": 0.068
  },
  {
    "text": "共有三种模式：模式规定数据区和校验区的全部字节都是，这种扇区不用于记录数据，而是用于光盘的导入区和导出区；模式规定字节的校验区为字节的检测码EDC、字节的保留域未定义和字节的纠错码ECC，这种扇区模式有字节的数据并有很强的检测和纠错能力，适合于保存计算机的程序和数据；模式规定字节的校验区也用于存放数据，用于保存声音、图像等对误码率要求不高的数据",
    "id": 3922,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 124,
        "end": 127,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 128,
        "end": 130,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 96,
        "end": 98,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 84,
        "end": 86,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 101,
        "end": 103,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 87,
        "end": 90,
        "text": "纠错码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 138,
        "end": 140,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5355,
    "created_at": "2024-08-01T12:19:27.684673Z",
    "updated_at": "2024-08-01T12:19:27.684673Z",
    "lead_time": 0.097
  },
  {
    "text": "显然，硬布线控制器的基本原理，归纳起来可叙述为：某一微操作控制信号C是指令操作码译码器输出Im、时序信号节拍电位Mi，节拍脉冲Tk和状态条件信号Bj的逻辑函数，即CfImMiTkBj这个控制信号是用门电路、触发器等许多器件采用布尔代数方法来设计实现的",
    "id": 3923,
    "label": [
      {
        "start": 113,
        "end": 117,
        "text": "布尔代数",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 103,
        "end": 106,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 33,
        "text": "微操作控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 43,
        "text": "操作码译码器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 66,
        "end": 72,
        "text": "状态条件信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 93,
        "end": 97,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 99,
        "end": 102,
        "text": "门电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5356,
    "created_at": "2024-08-01T12:19:28.711857Z",
    "updated_at": "2024-08-01T12:19:28.711857Z",
    "lead_time": 0.131
  },
  {
    "text": "后面将利用这个单元的延迟时间来精确确定除法时间",
    "id": 3924,
    "annotator": 1,
    "annotation_id": 5357,
    "created_at": "2024-08-01T12:19:29.737264Z",
    "updated_at": "2024-08-01T12:19:29.737264Z",
    "lead_time": 0.126
  },
  {
    "text": "由于计算机仅使用和两个二进制数字，所以使用“位”bit作为数字计算机的最小信息单位",
    "id": 3925,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5358,
    "created_at": "2024-08-01T12:19:31.218548Z",
    "updated_at": "2024-08-01T12:19:31.218548Z",
    "lead_time": 0.816
  },
  {
    "text": "节拍脉冲和存储器读写时序我们假定在一个CPU周期中产生四个等间隔的节拍脉冲TT，每个节拍脉冲的脉冲宽度均为ns，因此一个CPU周期便是ns，在下一个CPU周期中，它们又按固定的时间关系重复",
    "id": 3926,
    "label": [
      {
        "start": 5,
        "end": 12,
        "text": "存储器读写时序",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 60,
        "end": 65,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 74,
        "end": 79,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5359,
    "created_at": "2024-08-01T12:19:33.851147Z",
    "updated_at": "2024-08-01T12:19:33.851147Z",
    "lead_time": 1.948
  },
  {
    "text": "这意味着该IO接口就获得了总线控制权",
    "id": 3927,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5360,
    "created_at": "2024-08-01T12:19:35.235472Z",
    "updated_at": "2024-08-01T12:19:35.235472Z",
    "lead_time": 0.766
  },
  {
    "text": "例如，微型计算机系统中采用的标准总线，从ISA总线位，带宽MBs发展到EISA总线位，带宽MBs，又发展到VESA总线位，带宽MBs，而PCI总线又进一步过渡到位，MHz",
    "id": 3928,
    "label": [
      {
        "start": 68,
        "end": 73,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 3,
        "end": 10,
        "text": "微型计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "ISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "EISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 82,
        "end": 85,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 59,
        "end": 60,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 80,
        "end": 81,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5361,
    "created_at": "2024-08-01T12:19:36.711733Z",
    "updated_at": "2024-08-01T12:19:36.711733Z",
    "lead_time": 0.733
  },
  {
    "text": "读出时，当激光束聚焦点照射在凹坑上时将发生衍射，反射率低；而聚焦点照射在凸面上时大部分光将返回",
    "id": 3929,
    "annotator": 1,
    "annotation_id": 5362,
    "created_at": "2024-08-01T12:19:37.442515Z",
    "updated_at": "2024-08-01T12:19:37.442515Z",
    "lead_time": 0.07
  },
  {
    "text": "mm磁带mm磁带最初为视频行业设计，现已被计算机行业采用，被认为是存储大量计算机数据的可靠方式",
    "id": 3930,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5363,
    "created_at": "2024-08-01T12:19:38.628939Z",
    "updated_at": "2024-08-01T12:19:38.628939Z",
    "lead_time": 0.475
  },
  {
    "text": "这个特征对于转移预测处理是很有用的",
    "id": 3931,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "转移预测",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5364,
    "created_at": "2024-08-01T12:19:39.582714Z",
    "updated_at": "2024-08-01T12:19:39.582714Z",
    "lead_time": 0.146
  },
  {
    "text": "在单总线系统中，某些外围设备也可以指定地址",
    "id": 3932,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "单总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5365,
    "created_at": "2024-08-01T12:19:40.383724Z",
    "updated_at": "2024-08-01T12:19:40.383724Z",
    "lead_time": 0.065
  },
  {
    "text": "不同的计算机系统，显示器的组成方式也不同",
    "id": 3933,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5366,
    "created_at": "2024-08-01T12:19:41.470598Z",
    "updated_at": "2024-08-01T12:19:41.470598Z",
    "lead_time": 0.221
  },
  {
    "text": "显然，这两个阶段是相互关联的",
    "id": 3934,
    "annotator": 1,
    "annotation_id": 5367,
    "created_at": "2024-08-01T12:19:42.292842Z",
    "updated_at": "2024-08-01T12:19:42.292842Z",
    "lead_time": 0.037
  },
  {
    "text": "所有的取数存数、算术、逻辑指令，在操作码之后是两个位的寄存器字段，这表示可以使用个通用寄存器",
    "id": 3935,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "逻辑指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5368,
    "created_at": "2024-08-01T12:19:43.895419Z",
    "updated_at": "2024-08-01T12:19:43.895419Z",
    "lead_time": 0.797
  },
  {
    "text": "结果规格化在浮点加减运算时，尾数求和的结果也可以得到或，即两符号位不相等，这在定点加减运算中称为溢出，是不允许的",
    "id": 3936,
    "label": [
      {
        "start": 48,
        "end": 50,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "结果规格化",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "尾数求和",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5369,
    "created_at": "2024-08-01T12:19:45.483919Z",
    "updated_at": "2024-08-01T12:19:45.483919Z",
    "lead_time": 0.786
  },
  {
    "text": "分页对程序员而言是不可见的，而分段通常对程序员而言是可见的，因而分段为组织程序和数据提供了方便",
    "id": 3937,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5370,
    "created_at": "2024-08-01T12:19:46.584497Z",
    "updated_at": "2024-08-01T12:19:46.584497Z",
    "lead_time": 0.108
  },
  {
    "text": "在我们所举的例子中，由微指令顺序控制字段的位信息来决定",
    "id": 3938,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5371,
    "created_at": "2024-08-01T12:19:48.468920Z",
    "updated_at": "2024-08-01T12:19:48.468920Z",
    "lead_time": 0.734
  },
  {
    "text": "因而每字节分别存放十进制的，，，，，，，，，，，，，，，，为了能直接使用西文标准键盘把汉字输入到计算机，就必须为汉字设计相应的输入编码方法",
    "id": 3939,
    "label": [
      {
        "start": 36,
        "end": 42,
        "text": "西文标准键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5372,
    "created_at": "2024-08-01T12:19:49.883565Z",
    "updated_at": "2024-08-01T12:19:49.883565Z",
    "lead_time": 0.499
  },
  {
    "text": "为此，人们在常规内存储器与CPU之间增加了速度更高但容量更小的半导体高速缓冲存储器，即cache，用于存放常规内存中正在使用的一些信息块的副本",
    "id": 3940,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 41,
        "text": "半导体高速缓冲存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5373,
    "created_at": "2024-08-01T12:19:50.778911Z",
    "updated_at": "2024-08-01T12:19:50.779922Z",
    "lead_time": 0.084
  },
  {
    "text": "缺点是，cache对CPU向主存的写操作无高速缓冲功能，降低了cache的性能",
    "id": 3941,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "高速缓冲",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5374,
    "created_at": "2024-08-01T12:19:52.169140Z",
    "updated_at": "2024-08-01T12:19:52.170156Z",
    "lead_time": 0.139
  },
  {
    "text": "它的主要功能是进行加、减、乘、除等算术运算",
    "id": 3942,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5375,
    "created_at": "2024-08-01T12:19:53.390811Z",
    "updated_at": "2024-08-01T12:19:53.390811Z",
    "lead_time": 0.054
  },
  {
    "text": "一次性编程ROM、紫外线擦除PROM、EPROM和闪速存储器均可由用户编程",
    "id": 3943,
    "label": [
      {
        "start": 25,
        "end": 30,
        "text": "闪速存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 8,
        "text": "一次性编程ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 18,
        "text": "紫外线擦除PROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5376,
    "created_at": "2024-08-01T12:19:54.409195Z",
    "updated_at": "2024-08-01T12:19:54.409195Z",
    "lead_time": 0.099
  },
  {
    "text": "操作数检查步骤则用来完成这一功能",
    "id": 3944,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5377,
    "created_at": "2024-08-01T12:19:55.878927Z",
    "updated_at": "2024-08-01T12:19:55.878927Z",
    "lead_time": 0.101
  },
  {
    "text": "虚拟存储器的替换算法与cache的替换算法类似，有FIFO算法、LRU算法、LFU算法等",
    "id": 3945,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "LRU算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 25,
        "end": 31,
        "text": "FIFO算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "LFU算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5378,
    "created_at": "2024-08-01T12:19:57.213961Z",
    "updated_at": "2024-08-01T12:19:57.213961Z",
    "lead_time": 0.14
  },
  {
    "text": "通常，产生后继微地址有两种方法",
    "id": 3946,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5379,
    "created_at": "2024-08-01T12:19:58.387054Z",
    "updated_at": "2024-08-01T12:19:58.387054Z",
    "lead_time": 0.068
  },
  {
    "text": "然而控制器完全可以区分开哪些是指令字，哪些是数据字",
    "id": 3947,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5380,
    "created_at": "2024-08-01T12:19:59.609209Z",
    "updated_at": "2024-08-01T12:19:59.609209Z",
    "lead_time": 0.105
  },
  {
    "text": "cache的基本原理cache除包含SRAM外，还要有控制逻辑",
    "id": 3948,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5381,
    "created_at": "2024-08-01T12:20:02.018364Z",
    "updated_at": "2024-08-01T12:20:02.018364Z",
    "lead_time": 1.025
  },
  {
    "text": "对正数来说，则是简单截尾；对负数来说，只要多余位不全为，则向最低有效位进",
    "id": 3949,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "截尾",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5382,
    "created_at": "2024-08-01T12:20:09.188446Z",
    "updated_at": "2024-08-01T12:20:09.188446Z",
    "lead_time": 0.615
  },
  {
    "text": "寄存器间接寻址寄存器间接寻址与寄存器寻址的区别在于：指令格式中的寄存器内容不是操作数，而是操作数的地址，该地址指明的操作数在内存中，如图f所示",
    "id": 3950,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "寄存器间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 14,
        "text": "寄存器间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "寄存器寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5383,
    "created_at": "2024-08-01T12:20:11.636410Z",
    "updated_at": "2024-08-01T12:20:11.638442Z",
    "lead_time": 1.529
  },
  {
    "text": "控制存储器控制存储器用来存放实现全部指令系统的微程序，它是一种只读型存储器",
    "id": 3951,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 37,
        "text": "只读型存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5384,
    "created_at": "2024-08-01T12:20:14.974252Z",
    "updated_at": "2024-08-01T12:20:14.974252Z",
    "lead_time": 1.713
  },
  {
    "text": "由于TLB的缓冲过程与cache的缓冲过程是独立的，所以在每次存储器访问过程中有可能要经历多次变换",
    "id": 3952,
    "label": [
      {
        "start": 31,
        "end": 34,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5385,
    "created_at": "2024-08-01T12:20:16.476027Z",
    "updated_at": "2024-08-01T12:20:16.476027Z",
    "lead_time": 0.443
  },
  {
    "text": "MC的指令流水线由于MC是超标量流水CPU，所以指令流水线在每个机器时钟周期完成两条指令",
    "id": 3953,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 21,
        "text": "超标量流水CPU",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5386,
    "created_at": "2024-08-01T12:20:18.282539Z",
    "updated_at": "2024-08-01T12:20:18.282539Z",
    "lead_time": 0.131
  },
  {
    "text": "虚存是在主存和辅存之外附加一些硬件和软件实现的",
    "id": 3954,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5387,
    "created_at": "2024-08-01T12:20:20.833646Z",
    "updated_at": "2024-08-01T12:20:20.833646Z",
    "lead_time": 0.793
  },
  {
    "text": "这意味着主存地址位数大于寄存器中的偏移量位数，与基址寻址刚好相反",
    "id": 3955,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "基址寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5388,
    "created_at": "2024-08-01T12:20:23.078565Z",
    "updated_at": "2024-08-01T12:20:23.078565Z",
    "lead_time": 0.299
  },
  {
    "text": "当阶码E为全且尾数M也为全时，表示的真值N为零称为机器，结合符号位S为或，有正零和负零之分",
    "id": 3956,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5389,
    "created_at": "2024-08-01T12:20:25.209226Z",
    "updated_at": "2024-08-01T12:20:25.210246Z",
    "lead_time": 0.203
  },
  {
    "text": "双端口存储器的逻辑结构双端口存储器由于同一个存储器具有两组相互独立的读写控制电路而得名",
    "id": 3957,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "双端口存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "双端口存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "读写控制电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5390,
    "created_at": "2024-08-01T12:20:33.092489Z",
    "updated_at": "2024-08-01T12:20:33.092489Z",
    "lead_time": 5.934
  },
  {
    "text": "决定后继微指令地址的方法不只一种",
    "id": 3958,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5391,
    "created_at": "2024-08-01T12:20:38.884603Z",
    "updated_at": "2024-08-01T12:20:38.884603Z",
    "lead_time": 3.5
  },
  {
    "text": "段起址指明在该段已经调入实存的情况下，该段在实存中的首地址",
    "id": 3959,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "段起址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "首地址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5392,
    "created_at": "2024-08-01T12:20:51.197198Z",
    "updated_at": "2024-08-01T12:20:51.198196Z",
    "lead_time": 10.289
  },
  {
    "text": "然后，CPU撤销写命令，存储器模块撤销确认信号",
    "id": 3960,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5393,
    "created_at": "2024-08-01T12:20:56.226076Z",
    "updated_at": "2024-08-01T12:20:56.226076Z",
    "lead_time": 3.367
  },
  {
    "text": "存储系统是模块化的，主存中每个K模块和容量字的cache相联系",
    "id": 3961,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "容量字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5394,
    "created_at": "2024-08-01T12:20:59.463157Z",
    "updated_at": "2024-08-01T12:20:59.463157Z",
    "lead_time": 1.761
  },
  {
    "text": "近期最少使用LRU算法LRU算法将近期内长久未被访问过的行换出",
    "id": 3962,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "LRU算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "LRU算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5395,
    "created_at": "2024-08-01T12:21:07.292433Z",
    "updated_at": "2024-08-01T12:21:07.292433Z",
    "lead_time": 5.175
  },
  {
    "text": "为防止状态机的误动作，闪存的各种命令是以“向特定地址写入特定内容的命令序列”方式定义的",
    "id": 3963,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5396,
    "created_at": "2024-08-01T12:21:18.475247Z",
    "updated_at": "2024-08-01T12:21:18.476247Z",
    "lead_time": 9.671
  },
  {
    "text": "形成操作数地址的方式，称为数据寻址方式",
    "id": 3964,
    "label": [
      {
        "start": 13,
        "end": 19,
        "text": "数据寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5397,
    "created_at": "2024-08-01T12:21:34.010844Z",
    "updated_at": "2024-08-01T12:21:34.011867Z",
    "lead_time": 14.267
  },
  {
    "text": "中断和同步总线用于处理带优先级的中断操作，包括中断请求线和中断认可线",
    "id": 3965,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "中断操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "中断请求线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "中断认可线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5398,
    "created_at": "2024-08-01T12:22:05.179920Z",
    "updated_at": "2024-08-01T12:22:05.179920Z",
    "lead_time": 29.96
  },
  {
    "text": "水平型微指令执行一条指令的时间短，垂直型微指令执行时间长",
    "id": 3966,
    "label": [
      {
        "start": 17,
        "end": 23,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5399,
    "created_at": "2024-08-01T12:22:08.359208Z",
    "updated_at": "2024-08-01T12:22:08.359208Z",
    "lead_time": 1.632
  },
  {
    "text": "一般来说，一个功能更强、更完善的指令系统，必定有更好的有效性",
    "id": 3967,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5400,
    "created_at": "2024-08-01T12:22:10.636681Z",
    "updated_at": "2024-08-01T12:22:10.636681Z",
    "lead_time": 0.833
  },
  {
    "text": "其中高位用于存储体选择字扩展，个存储体为MB，全系统有个MB存储体",
    "id": 3968,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "字扩展",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5401,
    "created_at": "2024-08-01T12:22:12.007127Z",
    "updated_at": "2024-08-01T12:22:12.008128Z",
    "lead_time": 0.126
  },
  {
    "text": "例如，微型机的字长可以是位，也可以达到位",
    "id": 3969,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5402,
    "created_at": "2024-08-01T12:22:18.074141Z",
    "updated_at": "2024-08-01T12:22:18.074141Z",
    "lead_time": 4.475
  },
  {
    "text": "Pentium指令格式Pentium机的指令字长度是可变的：从B到B，B表示字节",
    "id": 3970,
    "label": [
      {
        "start": 38,
        "end": 40,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5403,
    "created_at": "2024-08-01T12:22:21.214912Z",
    "updated_at": "2024-08-01T12:22:21.214912Z",
    "lead_time": 2.427
  },
  {
    "text": "当任务连续不断地输入流水线时，在流水线的输出端便连续不断地吐出执行结果，从而实现了子任务级的并行性",
    "id": 3971,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5404,
    "created_at": "2024-08-01T12:22:25.560349Z",
    "updated_at": "2024-08-01T12:22:25.560349Z",
    "lead_time": 3.444
  },
  {
    "text": "通常有两种不同的编址方式",
    "id": 3972,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5405,
    "created_at": "2024-08-01T12:22:29.223130Z",
    "updated_at": "2024-08-01T12:22:29.223130Z",
    "lead_time": 2.833
  },
  {
    "text": "第一代为年，电子管计算机",
    "id": 3973,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "电子管计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5406,
    "created_at": "2024-08-01T12:22:32.569932Z",
    "updated_at": "2024-08-01T12:22:32.569932Z",
    "lead_time": 2.157
  },
  {
    "text": "注意，加数、被加数、进位与和数都是用电平来表示的，因此，所谓稳定的求和输出，就是指稳定的电平输出",
    "id": 3974,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5407,
    "created_at": "2024-08-01T12:22:39.778269Z",
    "updated_at": "2024-08-01T12:22:39.778269Z",
    "lead_time": 6.157
  },
  {
    "text": "利用磁光克尔效应读出数据：当激光束照射到记录点时，记录点的磁化方向不同，会引起反射光的偏振面发生不同结果，从而检测出所记录的数据“”或“”",
    "id": 3975,
    "annotator": 1,
    "annotation_id": 5408,
    "created_at": "2024-08-01T12:22:41.298560Z",
    "updated_at": "2024-08-01T12:22:41.298560Z",
    "lead_time": 0.106
  },
  {
    "text": "时钟源时钟源用来为环形脉冲发生器提供频率稳定且电平匹配的方波时钟脉冲信号",
    "id": 3976,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5409,
    "created_at": "2024-08-01T12:23:02.568453Z",
    "updated_at": "2024-08-01T12:23:02.569968Z",
    "lead_time": 20.265
  },
  {
    "text": "结构技术为了解决存储器与CPU速度不匹配问题，需要改进存储器与CPU之间的连接方式，加速CPU和存储器之间的有效传输",
    "id": 3977,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "结构技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5410,
    "created_at": "2024-08-01T12:23:04.875836Z",
    "updated_at": "2024-08-01T12:23:04.875836Z",
    "lead_time": 1.267
  },
  {
    "text": "中央控制与局部控制结合",
    "id": 3978,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "中央控制",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "局部控制",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5411,
    "created_at": "2024-08-01T12:23:11.748687Z",
    "updated_at": "2024-08-01T12:23:11.748687Z",
    "lead_time": 5.599
  },
  {
    "text": "世界上第一台电子数字计算机是年在美国宾夕法尼亚大学制成的",
    "id": 3979,
    "label": [
      {
        "start": 6,
        "end": 13,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 18,
        "end": 25,
        "text": "宾夕法尼亚大学",
        "labels": [
          "GRP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5412,
    "created_at": "2024-08-01T12:23:17.631887Z",
    "updated_at": "2024-08-01T12:23:17.631887Z",
    "lead_time": 4.758
  },
  {
    "text": "后来，为了编写程序方便和提高机器的使用效率，人们想了一种办法，用一些约定的文字、符号和数字按规定的格式来表示各种不同的指令，然后再用这些特殊符号表示的指令来编写程序",
    "id": 3980,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 45,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5413,
    "created_at": "2024-08-01T12:23:20.038769Z",
    "updated_at": "2024-08-01T12:23:20.038769Z",
    "lead_time": 1.453
  },
  {
    "text": "三地址指令中A，A，A通常指定为运算器中通用寄存器的地址，这是为了加快指令执行速度",
    "id": 3981,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "三地址指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5414,
    "created_at": "2024-08-01T12:23:21.733883Z",
    "updated_at": "2024-08-01T12:23:21.733883Z",
    "lead_time": 0.151
  },
  {
    "text": "第一种简单办法是，无条件地丢掉正常尾数最低位之后的全部数值",
    "id": 3982,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5415,
    "created_at": "2024-08-01T12:23:22.955105Z",
    "updated_at": "2024-08-01T12:23:22.956097Z",
    "lead_time": 0.076
  },
  {
    "text": "电子数字计算机进一步又可分为专用计算机和通用计算机",
    "id": 3983,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "专用计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "通用计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5416,
    "created_at": "2024-08-01T12:23:24.397056Z",
    "updated_at": "2024-08-01T12:23:24.398038Z",
    "lead_time": 0.383
  },
  {
    "text": "由此可见，每个程序的虚地址空间可以远大于实地址空间，也可以远小于实地址空间",
    "id": 3984,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "虚地址空间",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "实地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "实地址空间",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5417,
    "created_at": "2024-08-01T12:23:25.990143Z",
    "updated_at": "2024-08-01T12:23:25.990143Z",
    "lead_time": 0.532
  },
  {
    "text": "对存储容量要求更多的系统还可以用磁带等可更换介质实现无容量限制的存储",
    "id": 3985,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5418,
    "created_at": "2024-08-01T12:23:27.745257Z",
    "updated_at": "2024-08-01T12:23:27.746259Z",
    "lead_time": 0.896
  },
  {
    "text": "IO接口模块和外设的数据交换可能是并行方式，也可能是串行方式",
    "id": 3986,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5419,
    "created_at": "2024-08-01T12:23:29.276756Z",
    "updated_at": "2024-08-01T12:23:29.277756Z",
    "lead_time": 0.834
  },
  {
    "text": "进一步的发展，就是设计所谓面向高级语言的计算机",
    "id": 3987,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5420,
    "created_at": "2024-08-01T12:23:30.664893Z",
    "updated_at": "2024-08-01T12:23:30.664893Z",
    "lead_time": 0.4
  },
  {
    "text": "专用寄存器分成两组，它们分别与一条总线交换数据",
    "id": 3988,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5421,
    "created_at": "2024-08-01T12:23:32.131274Z",
    "updated_at": "2024-08-01T12:23:32.131274Z",
    "lead_time": 0.413
  },
  {
    "text": "图a表示流水CPU中一个指令周期的任务分解",
    "id": 3989,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "流水CPU",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5422,
    "created_at": "2024-08-01T12:23:33.702942Z",
    "updated_at": "2024-08-01T12:23:33.703947Z",
    "lead_time": 0.374
  },
  {
    "text": "通常，在间接寻址情况下，由寻址特征位给予指示",
    "id": 3990,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "寻址特征位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5423,
    "created_at": "2024-08-01T12:23:35.148359Z",
    "updated_at": "2024-08-01T12:23:35.148359Z",
    "lead_time": 0.097
  },
  {
    "text": "Intel于年推出了位微处理器Intel",
    "id": 3991,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5424,
    "created_at": "2024-08-01T12:23:36.600436Z",
    "updated_at": "2024-08-01T12:23:36.600436Z",
    "lead_time": 0.282
  },
  {
    "text": "第位发出LDIR，将IBUS上的“十进制加法”指令打入到指令寄存器IR",
    "id": 3992,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "IBUS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5425,
    "created_at": "2024-08-01T12:23:38.436381Z",
    "updated_at": "2024-08-01T12:23:38.436381Z",
    "lead_time": 0.214
  },
  {
    "text": "为了把主存块放到cache中，必须应用某种方法把主存地址定位到cache中，称为地址映射",
    "id": 3993,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5426,
    "created_at": "2024-08-01T12:23:39.709422Z",
    "updated_at": "2024-08-01T12:23:39.709422Z",
    "lead_time": 0.107
  },
  {
    "text": "而一个CPU周期时间又包含有若干个时钟周期又称T周期或节拍脉冲，它是处理操作的最基本单位",
    "id": 3994,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 44,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5427,
    "created_at": "2024-08-01T12:23:42.214130Z",
    "updated_at": "2024-08-01T12:23:42.214130Z",
    "lead_time": 0.971
  },
  {
    "text": "总线时钟频率为MHz或MHz，CPU内部时钟是此时钟频率的倍频",
    "id": 3995,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "内部时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "总线时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "时钟频率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5428,
    "created_at": "2024-08-01T12:23:51.472900Z",
    "updated_at": "2024-08-01T12:23:51.472900Z",
    "lead_time": 8.179
  },
  {
    "text": "ASCII码规定个二进制位的最高一位为，余下的位可以给出个编码，表示个不同的字符",
    "id": 3996,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "ASCII码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5429,
    "created_at": "2024-08-01T12:24:07.549140Z",
    "updated_at": "2024-08-01T12:24:07.549140Z",
    "lead_time": 15.284
  },
  {
    "text": "m的最小值mminT称为交叉存取度",
    "id": 3997,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "交叉存取度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5430,
    "created_at": "2024-08-01T12:24:13.780906Z",
    "updated_at": "2024-08-01T12:24:13.780906Z",
    "lead_time": 5.409
  },
  {
    "text": "调度问题决定哪些程序和数据应被调入主存",
    "id": 3998,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5431,
    "created_at": "2024-08-01T12:24:30.999760Z",
    "updated_at": "2024-08-01T12:24:30.999760Z",
    "lead_time": 16.398
  },
  {
    "text": "数据加工所谓数据加工，就是对数据进行算术运算和逻辑运算处理",
    "id": 3999,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "数据加工",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "数据加工",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5432,
    "created_at": "2024-08-01T12:24:32.969622Z",
    "updated_at": "2024-08-01T12:24:32.969622Z",
    "lead_time": 1.073
  },
  {
    "text": "独立请求方式独立请求方式原理示于图c",
    "id": 4000,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5433,
    "created_at": "2024-08-01T12:25:07.677799Z",
    "updated_at": "2024-08-01T12:25:07.677799Z",
    "lead_time": 33.585
  },
  {
    "text": "“十进制加法”指令的功能是用BCD码来完成十进制数的加法运算",
    "id": 4001,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "BCD码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5434,
    "created_at": "2024-08-01T12:25:38.912601Z",
    "updated_at": "2024-08-01T12:25:38.912601Z",
    "lead_time": 30.431
  },
  {
    "text": "目前多采用二地址、单地址、零地址混合方式的指令格式",
    "id": 4002,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "二地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "单地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "零地址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5435,
    "created_at": "2024-08-01T12:25:44.381685Z",
    "updated_at": "2024-08-01T12:25:44.381685Z",
    "lead_time": 4.791
  },
  {
    "text": "其中条源总线，条源总线，条目标总线",
    "id": 4003,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "源总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "源总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "目标总线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5436,
    "created_at": "2024-08-01T12:25:59.127892Z",
    "updated_at": "2024-08-01T12:25:59.127892Z",
    "lead_time": 14.029
  },
  {
    "text": "显然这要占用一定的存储空间和运算时间",
    "id": 4004,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5437,
    "created_at": "2024-08-01T12:26:02.062833Z",
    "updated_at": "2024-08-01T12:26:02.062833Z",
    "lead_time": 2.085
  },
  {
    "text": "信息由多少二进制位组成，就需要多少条传输线，从而使得二进制数“”或“”在不同的线上同时进行传送",
    "id": 4005,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5438,
    "created_at": "2024-08-01T12:26:12.885904Z",
    "updated_at": "2024-08-01T12:26:12.885904Z",
    "lead_time": 10.036
  },
  {
    "text": "cache替换问题主要是选择和执行替换算法，以便在cache不命中时替换cache中的内容",
    "id": 4006,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 41,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5439,
    "created_at": "2024-08-01T12:26:26.757125Z",
    "updated_at": "2024-08-01T12:26:26.757125Z",
    "lead_time": 13.081
  },
  {
    "text": "运算器由算术逻辑运算单元ALU、通用寄存器、数据缓冲寄存器DR和程序状态字寄存器状态条件寄存器，PSWR组成，它是数据加工处理部件",
    "id": 4007,
    "label": [
      {
        "start": 32,
        "end": 40,
        "text": "程序状态字寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 47,
        "text": "状态条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "数据加工",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 12,
        "text": "算术逻辑运算单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 29,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5440,
    "created_at": "2024-08-01T12:26:34.498121Z",
    "updated_at": "2024-08-01T12:26:34.498121Z",
    "lead_time": 7.066
  },
  {
    "text": "电子数字计算机则与电子模拟计算机不同，它是以近似于人类的“思维过程”来进行工作的，所以有人把它叫做电脑",
    "id": 4008,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 9,
        "end": 16,
        "text": "电子模拟计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5441,
    "created_at": "2024-08-01T12:26:50.061048Z",
    "updated_at": "2024-08-01T12:26:50.061048Z",
    "lead_time": 14.951
  },
  {
    "text": "相比早期的ISA和EISA等第一代总线，PCI总线的传输速度有明显提升",
    "id": 4009,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "ISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "EISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5442,
    "created_at": "2024-08-01T12:26:56.893667Z",
    "updated_at": "2024-08-01T12:26:56.893667Z",
    "lead_time": 6.255
  },
  {
    "text": "指令系统不仅是硬件设计的依据，而且是软件设计的基础",
    "id": 4010,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5443,
    "created_at": "2024-08-01T12:27:06.313021Z",
    "updated_at": "2024-08-01T12:27:06.313021Z",
    "lead_time": 8.741
  },
  {
    "text": "其中被除数xxxxxxx双倍长除数yyyy商数qqqq余数rrrrr字长n由图看出，该阵列除法器是用一个可控加法减法CAS单元所组成的流水阵列来实现的",
    "id": 4011,
    "label": [
      {
        "start": 34,
        "end": 36,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5444,
    "created_at": "2024-08-01T12:27:26.148638Z",
    "updated_at": "2024-08-01T12:27:26.148638Z",
    "lead_time": 19.127
  },
  {
    "text": "异步定时的优点是总线周期长度可变，不把响应时间强加到功能模块上，因而允许快速和慢速的功能模块都能连接到同一总线上",
    "id": 4012,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5445,
    "created_at": "2024-08-01T12:27:27.131692Z",
    "updated_at": "2024-08-01T12:27:27.131692Z",
    "lead_time": 0.402
  },
  {
    "text": "灰度级越多，图像层次越清楚逼真",
    "id": 4013,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5446,
    "created_at": "2024-08-01T12:27:27.861618Z",
    "updated_at": "2024-08-01T12:27:27.861618Z",
    "lead_time": 0.106
  },
  {
    "text": "光盘和磁光盘是近年发展起来的一种外存设备，是多媒体计算机不可缺少的设备",
    "id": 4014,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 28,
        "text": "多媒体计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "磁光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5447,
    "created_at": "2024-08-01T12:27:28.683434Z",
    "updated_at": "2024-08-01T12:27:28.683434Z",
    "lead_time": 0.066
  },
  {
    "text": "当图像已经记录到某种介质上时，要利用读出装置读出图像",
    "id": 4015,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "读出装置",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5448,
    "created_at": "2024-08-01T12:27:29.839716Z",
    "updated_at": "2024-08-01T12:27:29.839716Z",
    "lead_time": 0.091
  },
  {
    "text": "对性能要求更高的系统还可以将cache分成一级Lcache和二级Lcache，甚至更多级",
    "id": 4016,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 29,
        "text": "一级Lcache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 38,
        "text": "二级Lcache",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5449,
    "created_at": "2024-08-01T12:27:30.939671Z",
    "updated_at": "2024-08-01T12:27:30.939671Z",
    "lead_time": 0.081
  },
  {
    "text": "例如，在前ns时间内运算器进行运算，在ns时间的末尾运算器已经运算完毕，可用T上升沿将运算结果打入某个寄存器",
    "id": 4017,
    "label": [
      {
        "start": 51,
        "end": 54,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5450,
    "created_at": "2024-08-01T12:27:42.108063Z",
    "updated_at": "2024-08-01T12:27:42.108063Z",
    "lead_time": 10.312
  },
  {
    "text": "显示适配器的顶部另有一个VFC插头，通过一个芯扁平电缆与视频卡相连，通过传送像素的电平信号，还可以实现视频图像与PC图形的合成",
    "id": 4018,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "VFC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "电平信号",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5451,
    "created_at": "2024-08-01T12:28:35.816697Z",
    "updated_at": "2024-08-01T12:28:35.816697Z",
    "lead_time": 52.954
  },
  {
    "text": "如果把高速工作的处理器同按照不同速度工作的外围设备相连接，那么首先遇到的一个问题，就是如何保证处理器与外围设备在时间上同步这就是我们要讨论的外围设备的定时问题",
    "id": 4019,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 70,
        "end": 74,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5452,
    "created_at": "2024-08-01T12:28:40.793022Z",
    "updated_at": "2024-08-01T12:28:40.793022Z",
    "lead_time": 4.344
  },
  {
    "text": "例如，在一个位的对求补器中，如果输入数为，那么输出数应是，其中从右算起的第位，就是所遇到的第一个“”的位置",
    "id": 4020,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 52,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5453,
    "created_at": "2024-08-01T12:28:41.914278Z",
    "updated_at": "2024-08-01T12:28:41.914278Z",
    "lead_time": 0.386
  },
  {
    "text": "采用动态微程序设计时，微指令和微程序可以根据需要加以改变，因而可在一台机器上实现不同类型的指令系统",
    "id": 4021,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "动态微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5454,
    "created_at": "2024-08-01T12:28:43.278408Z",
    "updated_at": "2024-08-01T12:28:43.278408Z",
    "lead_time": 0.25
  },
  {
    "text": "尽管众多厂家生产的RISC处理器实现手段有所不同，但是RISC概括的三个基本要素是普遍认同的",
    "id": 4022,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5455,
    "created_at": "2024-08-01T12:28:44.486966Z",
    "updated_at": "2024-08-01T12:28:44.486966Z",
    "lead_time": 0.362
  },
  {
    "text": "存取时间又称存储器访问时间，是从存储器接收到读写命令开始到信息被读出或写入完成所需的时间，取决于存储介质的物理特性和寻址部件的结构",
    "id": 4023,
    "label": [
      {
        "start": 48,
        "end": 52,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 6,
        "end": 13,
        "text": "存储器访问时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "物理特性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5456,
    "created_at": "2024-08-01T12:28:45.782972Z",
    "updated_at": "2024-08-01T12:28:45.782972Z",
    "lead_time": 0.196
  },
  {
    "text": "CPU写入输出数据口的信息要由外设取走",
    "id": 4024,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5457,
    "created_at": "2024-08-01T12:28:46.820293Z",
    "updated_at": "2024-08-01T12:28:46.821299Z",
    "lead_time": 0.059
  },
  {
    "text": "它由存储器取出装入通用寄存器时，寄存器左端以填充",
    "id": 4025,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5458,
    "created_at": "2024-08-01T12:28:48.065301Z",
    "updated_at": "2024-08-01T12:28:48.065301Z",
    "lead_time": 0.421
  },
  {
    "text": "转移条件有进位标志C、结果为零标志Z、结果为负标志N、结果溢出标志V和结果奇偶标志P等",
    "id": 4026,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "转移条件",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "进位标志",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "零标志",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "负标志",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "结果溢出标志",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 41,
        "text": "结果奇偶标志",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5459,
    "created_at": "2024-08-01T12:28:49.632222Z",
    "updated_at": "2024-08-01T12:28:49.632222Z",
    "lead_time": 0.553
  },
  {
    "text": "因此，指令系统是衡量计算机性能的一个重要标志",
    "id": 4027,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5460,
    "created_at": "2024-08-01T12:28:51.138310Z",
    "updated_at": "2024-08-01T12:28:51.138310Z",
    "lead_time": 0.527
  },
  {
    "text": "队列最多能保存条指令",
    "id": 4028,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "队列",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5461,
    "created_at": "2024-08-01T12:28:52.924351Z",
    "updated_at": "2024-08-01T12:28:52.924351Z",
    "lead_time": 1.061
  },
  {
    "text": "这是一种非常经济而实用的并行技术，能保证计算机系统具有较高的性能价格比",
    "id": 4029,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5462,
    "created_at": "2024-08-01T12:28:53.952167Z",
    "updated_at": "2024-08-01T12:28:53.952167Z",
    "lead_time": 0.136
  },
  {
    "text": "其中K，M，G",
    "id": 4030,
    "annotator": 1,
    "annotation_id": 5463,
    "created_at": "2024-08-01T12:28:55.015161Z",
    "updated_at": "2024-08-01T12:28:55.015161Z",
    "lead_time": 0.063
  },
  {
    "text": "将当前的商反馈到下一行，我们就能确定下一行的操作",
    "id": 4031,
    "annotator": 1,
    "annotation_id": 5464,
    "created_at": "2024-08-01T12:28:56.427121Z",
    "updated_at": "2024-08-01T12:28:56.427121Z",
    "lead_time": 0.375
  },
  {
    "text": "整个总线分成如下四部分",
    "id": 4032,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5465,
    "created_at": "2024-08-01T12:28:57.780488Z",
    "updated_at": "2024-08-01T12:28:57.780488Z",
    "lead_time": 0.324
  },
  {
    "text": "每当一条指令发射时，它预约的目的寄存器在位向量中的相应位上置“”，表示该寄存器“忙”",
    "id": 4033,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "位向量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5466,
    "created_at": "2024-08-01T12:28:59.707617Z",
    "updated_at": "2024-08-01T12:28:59.707617Z",
    "lead_time": 0.727
  },
  {
    "text": "例如，在不采用三级时序的系统中，机器周期就相当于时钟周期",
    "id": 4034,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5467,
    "created_at": "2024-08-01T12:29:00.869306Z",
    "updated_at": "2024-08-01T12:29:00.869306Z",
    "lead_time": 0.443
  },
  {
    "text": "平坦存储器模型flatmemorymodel内存被组织成单一的、连续的地址空间，称为“线性地址空间”",
    "id": 4035,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "平坦存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 49,
        "text": "线性地址空间",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5468,
    "created_at": "2024-08-01T12:29:01.961347Z",
    "updated_at": "2024-08-01T12:29:01.961347Z",
    "lead_time": 0.088
  },
  {
    "text": "在大型计算机中，显示器作为终端设备独立存在，即键盘输入和CRT显示输出是一个整体，通过标准的串行接口与主机相连",
    "id": 4036,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "CRT显示",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "串行接口",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5469,
    "created_at": "2024-08-01T12:29:03.108607Z",
    "updated_at": "2024-08-01T12:29:03.108607Z",
    "lead_time": 0.084
  },
  {
    "text": "指令队列是一个先进先出FIFO的寄存器栈，用于存放经过译码的指令和取来的操作数",
    "id": 4037,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令队列",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "FIFO",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "寄存器栈",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5470,
    "created_at": "2024-08-01T12:29:15.073124Z",
    "updated_at": "2024-08-01T12:29:15.073124Z",
    "lead_time": 1.211
  },
  {
    "text": "图中将外围设备本体与它自己的控制电路画在一起，统称为外围设备",
    "id": 4038,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "控制电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5471,
    "created_at": "2024-08-01T12:29:16.926792Z",
    "updated_at": "2024-08-01T12:29:16.926792Z",
    "lead_time": 1.191
  },
  {
    "text": "图示出了当代流行的总线内部结构，它是一些标准总线，追求与结构、CPU、技术无关的开发标准，并满足包括多个CPU在内的主控者环境需求",
    "id": 4039,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5472,
    "created_at": "2024-08-01T12:29:18.086573Z",
    "updated_at": "2024-08-01T12:29:18.086573Z",
    "lead_time": 0.478
  },
  {
    "text": "由一片巨大规模集成电路实现的单片计算机开始出现",
    "id": 4040,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "单片计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5473,
    "created_at": "2024-08-01T12:29:21.017694Z",
    "updated_at": "2024-08-01T12:29:21.017694Z",
    "lead_time": 2.223
  },
  {
    "text": "当一个存储字的字长高于八位时，就存在一个存储字内部的多字节的排列顺序问题，第章存储系统其排列方式称为端模式",
    "id": 4041,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "端模式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5474,
    "created_at": "2024-08-01T12:29:22.047703Z",
    "updated_at": "2024-08-01T12:29:22.047703Z",
    "lead_time": 0.143
  },
  {
    "text": "一般在高档微机以上的计算机中同时采用定点、浮点表示，由使用者进行选择",
    "id": 4042,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "高档微机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "浮点表示",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5475,
    "created_at": "2024-08-01T12:29:23.353121Z",
    "updated_at": "2024-08-01T12:29:23.353121Z",
    "lead_time": 0.321
  },
  {
    "text": "光盘的记录信息以凹坑方式永久性存储",
    "id": 4043,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "永久性存储",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5476,
    "created_at": "2024-08-01T12:29:24.302448Z",
    "updated_at": "2024-08-01T12:29:24.302448Z",
    "lead_time": 0.073
  },
  {
    "text": "交叉存储器要求其模块数必须大于或等于mmin，以保证启动某模块后经m时间再次启动该模块时，它的上次存取操作已经完成",
    "id": 4044,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "交叉存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "存取操作",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5477,
    "created_at": "2024-08-01T12:29:25.626899Z",
    "updated_at": "2024-08-01T12:29:25.626899Z",
    "lead_time": 0.448
  },
  {
    "text": "所有区的第块在调入cache时只能映射到cache的第行，所有区的第块在调入cache时只能映射到cache的第行所有区的第m块在调入cache时只能映射到cache的第m行",
    "id": 4045,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 54,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 67,
        "end": 72,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 78,
        "end": 83,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5478,
    "created_at": "2024-08-01T12:29:26.649443Z",
    "updated_at": "2024-08-01T12:29:26.649443Z",
    "lead_time": 0.12
  },
  {
    "text": "但是在单处理器系统中也得到了广泛应用",
    "id": 4046,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "单处理器",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5479,
    "created_at": "2024-08-01T12:29:27.542756Z",
    "updated_at": "2024-08-01T12:29:27.542756Z",
    "lead_time": 0.054
  },
  {
    "text": "道密度是沿磁盘半径方向单位长度上的磁道数，单位为道英寸",
    "id": 4047,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "道密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5480,
    "created_at": "2024-08-01T12:29:28.391806Z",
    "updated_at": "2024-08-01T12:29:28.391806Z",
    "lead_time": 0.083
  },
  {
    "text": "解题步骤的每一步，只完成一种基本操作，所以就是一条指令，而整个解题步骤就是一个简单的计算程序",
    "id": 4048,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5481,
    "created_at": "2024-08-01T12:29:29.638959Z",
    "updated_at": "2024-08-01T12:29:29.638959Z",
    "lead_time": 0.108
  },
  {
    "text": "该常数可作为操作数送入ALU运算，也可作为计数器初值用来控制微程序循环次数",
    "id": 4049,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5482,
    "created_at": "2024-08-01T12:29:30.715809Z",
    "updated_at": "2024-08-01T12:29:30.715809Z",
    "lead_time": 0.091
  },
  {
    "text": "下面进行定量分析",
    "id": 4050,
    "annotator": 1,
    "annotation_id": 5483,
    "created_at": "2024-08-01T12:29:32.092484Z",
    "updated_at": "2024-08-01T12:29:32.092484Z",
    "lead_time": 0.612
  },
  {
    "text": "rt字段指定第个源操作数寄存器，最多有个寄存器",
    "id": 4051,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "源操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5484,
    "created_at": "2024-08-01T12:29:34.557806Z",
    "updated_at": "2024-08-01T12:29:34.557806Z",
    "lead_time": 1.854
  },
  {
    "text": "其中的地址是指芯片地址线上应该给出的地址模式，形式上为片内偏移地址，但并非向存储矩阵的相应单元写入，而是与其他地址和数据模式组合代表特定命令",
    "id": 4052,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "偏移地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "地址模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 62,
        "text": "数据模式",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5485,
    "created_at": "2024-08-01T12:29:35.358679Z",
    "updated_at": "2024-08-01T12:29:35.358679Z",
    "lead_time": 0.119
  },
  {
    "text": "击打式是利用机械作用使印字机构与色带和纸相撞击而打印字符",
    "id": 4053,
    "label": [
      {
        "start": 12,
        "end": 13,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5486,
    "created_at": "2024-08-01T12:29:36.235130Z",
    "updated_at": "2024-08-01T12:29:36.235130Z",
    "lead_time": 0.056
  },
  {
    "text": "在定点整数机器中，数的表示范围xn",
    "id": 4054,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "定点整数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5487,
    "created_at": "2024-08-01T12:29:37.883365Z",
    "updated_at": "2024-08-01T12:29:37.883365Z",
    "lead_time": 0.632
  },
  {
    "text": "数据寻址方式有隐含寻址、立即寻址、直接寻址、间接寻址、寄存器寻址、寄存器间接寻址、相对寻址、基值寻址、变址寻址、块寻址、段寻址等多种",
    "id": 4055,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "隐含寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "立即寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "相对寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 40,
        "text": "寄存器间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "数据寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "寄存器寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "基值寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "变址寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "块寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "段寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5488,
    "created_at": "2024-08-01T12:29:38.699768Z",
    "updated_at": "2024-08-01T12:29:38.699768Z",
    "lead_time": 0.115
  },
  {
    "text": "为此将整个MB空间存储器按照最大长度KB划分成若干段",
    "id": 4056,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5489,
    "created_at": "2024-08-01T12:29:40.321944Z",
    "updated_at": "2024-08-01T12:29:40.321944Z",
    "lead_time": 0.643
  },
  {
    "text": "为此，必须使用程序计数器又称指令指针寄存器PC来计数指令的顺序号，该顺序号就是指令在内存中的地址",
    "id": 4057,
    "label": [
      {
        "start": 14,
        "end": 21,
        "text": "指令指针寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5490,
    "created_at": "2024-08-01T12:29:41.119643Z",
    "updated_at": "2024-08-01T12:29:41.119643Z",
    "lead_time": 0.169
  },
  {
    "text": "而两个负数相加，结果小于机器所能表示的最小负数，称为负溢，如图所示",
    "id": 4058,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "负溢",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5491,
    "created_at": "2024-08-01T12:29:42.252944Z",
    "updated_at": "2024-08-01T12:29:42.252944Z",
    "lead_time": 0.061
  },
  {
    "text": "图b为K位SRAM的逻辑图",
    "id": 4059,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5492,
    "created_at": "2024-08-01T12:29:43.211887Z",
    "updated_at": "2024-08-01T12:29:43.211887Z",
    "lead_time": 0.138
  },
  {
    "text": "随着半导体技术的发展，CPU和内存储器的工作速度都在提高，但CPU速度提高得更快，而更高速度的内存储器价格非常高",
    "id": 4060,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5493,
    "created_at": "2024-08-01T12:29:44.120986Z",
    "updated_at": "2024-08-01T12:29:44.120986Z",
    "lead_time": 0.088
  },
  {
    "text": "若两数阶码相同，表示小数点是对齐的，就可以进行尾数的加减运算",
    "id": 4061,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5494,
    "created_at": "2024-08-01T12:29:45.197516Z",
    "updated_at": "2024-08-01T12:29:45.197516Z",
    "lead_time": 0.088
  },
  {
    "text": "总线周期长度由主方确定",
    "id": 4062,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5495,
    "created_at": "2024-08-01T12:29:46.365926Z",
    "updated_at": "2024-08-01T12:29:46.365926Z",
    "lead_time": 0.413
  },
  {
    "text": "对路组相联的cache来说，LRU算法的硬件实现可以简化",
    "id": 4063,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "LRU算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5496,
    "created_at": "2024-08-01T12:29:47.496043Z",
    "updated_at": "2024-08-01T12:29:47.496043Z",
    "lead_time": 0.241
  },
  {
    "text": "在人的控制下，按照解题步骤一步一步进行操作，直到完成全部运算",
    "id": 4064,
    "annotator": 1,
    "annotation_id": 5497,
    "created_at": "2024-08-01T12:29:49.516898Z",
    "updated_at": "2024-08-01T12:29:49.516898Z",
    "lead_time": 1.233
  },
  {
    "text": "主频的倒数称为CPU时钟周期T，Tf，度量单位是s、ns",
    "id": 4065,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主频",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 14,
        "text": "CPU时钟周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5498,
    "created_at": "2024-08-01T12:29:51.178077Z",
    "updated_at": "2024-08-01T12:29:51.178077Z",
    "lead_time": 1.01
  },
  {
    "text": "读出时，当记录介质相对磁头运动时，位磁化存储元形成的空间磁场在读磁头线圈中产生感应电势，此读出信息经放大检测就可还原成原来存入的数据",
    "id": 4066,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "磁化存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5499,
    "created_at": "2024-08-01T12:29:51.923982Z",
    "updated_at": "2024-08-01T12:29:51.923982Z",
    "lead_time": 0.104
  },
  {
    "text": "随着集成电路技术的发展，当今的CPU芯片变成运算器、cache和控制器三大部分，CPU中至少有六类寄存器：指令寄存器、程序计数器、地址寄存器、数据缓冲寄存器、通用寄存器、状态条件寄存器",
    "id": 4067,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 71,
        "end": 78,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 85,
        "end": 92,
        "text": "状态条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 79,
        "end": 84,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 65,
        "end": 70,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5500,
    "created_at": "2024-08-01T12:29:52.986006Z",
    "updated_at": "2024-08-01T12:29:52.986518Z",
    "lead_time": 0.142
  },
  {
    "text": "最新技术通过增加磁带的长度和宽度，使磁带的存储容量达到GB",
    "id": 4068,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5501,
    "created_at": "2024-08-01T12:29:54.215767Z",
    "updated_at": "2024-08-01T12:29:54.215767Z",
    "lead_time": 0.108
  },
  {
    "text": "显示适配器作为CRT与CPU的接口，由刷新存储器、显示控制器、ROMBIOS三部分组成",
    "id": 4069,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "BIOS",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5502,
    "created_at": "2024-08-01T12:29:55.419044Z",
    "updated_at": "2024-08-01T12:29:55.419044Z",
    "lead_time": 0.097
  },
  {
    "text": "计分牌是一个位向量，寄存器堆中每个寄存器都有一个相应位",
    "id": 4070,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "位向量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5503,
    "created_at": "2024-08-01T12:29:56.391203Z",
    "updated_at": "2024-08-01T12:29:56.391203Z",
    "lead_time": 0.074
  },
  {
    "text": "其中节拍电位信号就是节规定的机器周期CPU周期信号，节拍脉冲信号是时钟周期信号",
    "id": 4071,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "节拍电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5504,
    "created_at": "2024-08-01T12:29:57.593230Z",
    "updated_at": "2024-08-01T12:29:57.593230Z",
    "lead_time": 0.14
  },
  {
    "text": "在第一次存取后，一系列数据能够快速地输出",
    "id": 4072,
    "annotator": 1,
    "annotation_id": 5505,
    "created_at": "2024-08-01T12:29:58.933896Z",
    "updated_at": "2024-08-01T12:29:58.933896Z",
    "lead_time": 0.146
  },
  {
    "text": "当代的总线标准大都能支持以下四类模式的数据传送，如图所示",
    "id": 4073,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "总线标准",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5506,
    "created_at": "2024-08-01T12:29:59.999216Z",
    "updated_at": "2024-08-01T12:29:59.999216Z",
    "lead_time": 0.382
  },
  {
    "text": "在CRT显示设备中，以扫描方式不同，分成光栅扫描和随机扫描两种显示器；以分辨率不同，分成高分辨率显示器和低分辨率显示器；以显示的颜色分类，有单色黑白显示器和彩色显示器",
    "id": 4074,
    "label": [
      {
        "start": 31,
        "end": 34,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 1,
        "end": 8,
        "text": "CRT显示设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "光栅扫描",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "随机扫描",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 51,
        "text": "高分辨率显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 53,
        "end": 59,
        "text": "分辨率显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 70,
        "end": 77,
        "text": "单色黑白显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 78,
        "end": 83,
        "text": "彩色显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5507,
    "created_at": "2024-08-01T12:30:01.016906Z",
    "updated_at": "2024-08-01T12:30:01.016906Z",
    "lead_time": 0.098
  },
  {
    "text": "ISA总线Pentium机使用该总线与低速IO设备连接",
    "id": 4075,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "低速IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "ISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5508,
    "created_at": "2024-08-01T12:30:02.235263Z",
    "updated_at": "2024-08-01T12:30:02.235905Z",
    "lead_time": 0.091
  },
  {
    "text": "运算器的设计，主要是围绕着ALU和寄存器同数据总线之间如何传送操作数和运算结果而进行的",
    "id": 4076,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5509,
    "created_at": "2024-08-01T12:30:03.415970Z",
    "updated_at": "2024-08-01T12:30:03.415970Z",
    "lead_time": 0.091
  },
  {
    "text": "双总线结构的运算器双总线结构的运算器如图b所示",
    "id": 4077,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "双总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "双总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5510,
    "created_at": "2024-08-01T12:30:04.336893Z",
    "updated_at": "2024-08-01T12:30:04.336893Z",
    "lead_time": 0.078
  },
  {
    "text": "在全相联映射中，将主存中一个块的地址块号与块的内容字一起存于cache的行中，其中块地址存于cache行的标记tag部分中",
    "id": 4078,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "全相联映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "地址块号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "块地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "标记tag",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5511,
    "created_at": "2024-08-01T12:30:05.649328Z",
    "updated_at": "2024-08-01T12:30:05.649328Z",
    "lead_time": 0.172
  },
  {
    "text": "因此位浮点数表示的绝对值的范围是",
    "id": 4079,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5512,
    "created_at": "2024-08-01T12:30:06.845131Z",
    "updated_at": "2024-08-01T12:30:06.845131Z",
    "lead_time": 0.073
  },
  {
    "text": "图d表示超标量流水计算机的时空图",
    "id": 4080,
    "label": [
      {
        "start": 4,
        "end": 12,
        "text": "超标量流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "时空图",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5513,
    "created_at": "2024-08-01T12:30:07.656083Z",
    "updated_at": "2024-08-01T12:30:07.656083Z",
    "lead_time": 0.061
  },
  {
    "text": "记录面上一系列同心圆称为磁道",
    "id": 4081,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "记录面",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5514,
    "created_at": "2024-08-01T12:30:08.791193Z",
    "updated_at": "2024-08-01T12:30:08.791193Z",
    "lead_time": 0.079
  },
  {
    "text": "如图所示，在由cache、主存、磁盘和磁带构成的多级存储体系中，存储容量、存储密度逐级提升，访问速度和价格逐级降低，构成金字塔式的存储结构",
    "id": 4082,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 24,
        "end": 30,
        "text": "多级存储体系",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 61,
        "end": 62,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5515,
    "created_at": "2024-08-01T12:30:09.918937Z",
    "updated_at": "2024-08-01T12:30:09.918937Z",
    "lead_time": 0.128
  },
  {
    "text": "电子束扫过之后其发光亮度只能维持几十毫秒便消失",
    "id": 4083,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "电子束",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5516,
    "created_at": "2024-08-01T12:30:11.258800Z",
    "updated_at": "2024-08-01T12:30:11.258800Z",
    "lead_time": 0.073
  },
  {
    "text": "每个扇区开始时由磁盘控制器产生一个扇标脉冲",
    "id": 4084,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5517,
    "created_at": "2024-08-01T12:30:12.116999Z",
    "updated_at": "2024-08-01T12:30:12.116999Z",
    "lead_time": 0.073
  },
  {
    "text": "特殊周期用于主设备将其信息如状态信息广播到多个目标方",
    "id": 4085,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "广播",
        "labels": [
          "PROT"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5518,
    "created_at": "2024-08-01T12:30:12.958350Z",
    "updated_at": "2024-08-01T12:30:12.958350Z",
    "lead_time": 0.059
  },
  {
    "text": "ns后运算完毕，公共总线上输出稳定的运算结果，由LDR或LDR，LDR信号打入到相应的寄存器，其时间关系如图所示",
    "id": 4086,
    "label": [
      {
        "start": 43,
        "end": 46,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5519,
    "created_at": "2024-08-01T12:30:14.328591Z",
    "updated_at": "2024-08-01T12:30:14.328591Z",
    "lead_time": 0.096
  },
  {
    "text": "每一个扇区记录一个记录块",
    "id": 4087,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "记录块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5520,
    "created_at": "2024-08-01T12:30:15.440837Z",
    "updated_at": "2024-08-01T12:30:15.440837Z",
    "lead_time": 0.088
  },
  {
    "text": "设高级语言程序经编译后在机器上运行的机器指令数为I，每条机器指令执行时所需要的平均机器周期数是C，每个机器周期的执行时间为T",
    "id": 4088,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "高级语言程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "编译",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 46,
        "text": "平均机器周期数",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5521,
    "created_at": "2024-08-01T12:30:16.543878Z",
    "updated_at": "2024-08-01T12:30:16.543878Z",
    "lead_time": 0.105
  },
  {
    "text": "可以看出，PCIe总线上包括四类实体：根复合体、交换器、PCIe桥和端点",
    "id": 4089,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "PCIe桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "根复合体",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "交换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "端点",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5522,
    "created_at": "2024-08-01T12:30:18.863512Z",
    "updated_at": "2024-08-01T12:30:18.863512Z",
    "lead_time": 1.003
  },
  {
    "text": "这个专用于页表缓存的高速存储部件通常称为转换后援缓冲器TLB，又称为快表",
    "id": 4090,
    "label": [
      {
        "start": 34,
        "end": 36,
        "text": "快表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "高速存储部件",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "缓存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5523,
    "created_at": "2024-08-01T12:30:22.948226Z",
    "updated_at": "2024-08-01T12:30:22.948226Z",
    "lead_time": 3.35
  },
  {
    "text": "这种简单的总线一般也由条信号线组成，这些信号线按其功能可分为三类：地址线、数据线和控制线",
    "id": 4091,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5524,
    "created_at": "2024-08-01T12:30:23.913420Z",
    "updated_at": "2024-08-01T12:30:23.913420Z",
    "lead_time": 0.087
  },
  {
    "text": "图像显示器采用光栅扫描方式，其分辨率在像素像素或像素像素，与图形显示兼容的图像显示器已达像素像素，灰度级在级",
    "id": 4092,
    "label": [
      {
        "start": 49,
        "end": 52,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "图像显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "图像显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "光栅扫描",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5525,
    "created_at": "2024-08-01T12:30:24.906566Z",
    "updated_at": "2024-08-01T12:30:24.906566Z",
    "lead_time": 0.089
  },
  {
    "text": "因为时间的约束是如此严格，以至于时间进度既不能来得太早，也不能来得太晚",
    "id": 4093,
    "annotator": 1,
    "annotation_id": 5526,
    "created_at": "2024-08-01T12:30:26.109598Z",
    "updated_at": "2024-08-01T12:30:26.109598Z",
    "lead_time": 0.076
  },
  {
    "text": "记录信息时，低功率激光束在光盘表面灼烧形成微小的凹陷区",
    "id": 4094,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5527,
    "created_at": "2024-08-01T12:30:26.970167Z",
    "updated_at": "2024-08-01T12:30:26.970167Z",
    "lead_time": 0.069
  },
  {
    "text": "一个相当于单个磁芯大小的芯片，包含了位的存储器",
    "id": 4095,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5528,
    "created_at": "2024-08-01T12:30:28.158983Z",
    "updated_at": "2024-08-01T12:30:28.159982Z",
    "lead_time": 0.109
  },
  {
    "text": "然而不管是哪一类，时序信号产生器最基本的构成是一样的",
    "id": 4096,
    "label": [
      {
        "start": 9,
        "end": 16,
        "text": "时序信号产生器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5529,
    "created_at": "2024-08-01T12:30:29.406632Z",
    "updated_at": "2024-08-01T12:30:29.406632Z",
    "lead_time": 0.093
  },
  {
    "text": "磁盘上的信息经读磁头读出以后送读出放大器，然后进行数据与时钟的分离，再进行串并变换、格式变换，最后送入数据缓冲器，经DMA直接存储器传送控制将数据传送到主机总线",
    "id": 4097,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "放大器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 58,
        "end": 66,
        "text": "DMA直接存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 76,
        "end": 80,
        "text": "主机总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5530,
    "created_at": "2024-08-01T12:30:30.580485Z",
    "updated_at": "2024-08-01T12:30:30.580485Z",
    "lead_time": 0.131
  },
  {
    "text": "控制器的基本任务，就是按照计算程序所排的指令序列，先从存储器取出一条指令放到控制器中，对该指令的操作码由译码器进行分析判别，然后根据指令性质，执行这条指令，进行相应的操作",
    "id": 4098,
    "label": [
      {
        "start": 48,
        "end": 51,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "指令序列",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "译码器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5531,
    "created_at": "2024-08-01T12:30:31.789193Z",
    "updated_at": "2024-08-01T12:30:31.789193Z",
    "lead_time": 0.106
  },
  {
    "text": "换句话说，可以使用取数、存数指令来代替输入输出指令",
    "id": 4099,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "输入输出指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5532,
    "created_at": "2024-08-01T12:30:32.604521Z",
    "updated_at": "2024-08-01T12:30:32.604521Z",
    "lead_time": 0.058
  },
  {
    "text": "图示出了Pentium的三级cache的布局",
    "id": 4100,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5533,
    "created_at": "2024-08-01T12:30:33.473154Z",
    "updated_at": "2024-08-01T12:30:33.473154Z",
    "lead_time": 0.073
  },
  {
    "text": "广泛使用的SRAM和DRAM都是半导体随机读写存储器，前者速度比后者快，但集成度不如后者高",
    "id": 4101,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 26,
        "text": "半导体随机读写存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5534,
    "created_at": "2024-08-01T12:30:34.632655Z",
    "updated_at": "2024-08-01T12:30:34.632655Z",
    "lead_time": 0.091
  },
  {
    "text": "当外部输入数据为时，锁存器便记忆了；当外部输入数据为时，锁存器便记忆了",
    "id": 4102,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5535,
    "created_at": "2024-08-01T12:30:35.637590Z",
    "updated_at": "2024-08-01T12:30:35.637590Z",
    "lead_time": 0.083
  },
  {
    "text": "由于被乘数和乘数的符号组合只有四种情况xfyf，因此积的符号可按“异或”按位加运算得到",
    "id": 4103,
    "label": [
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5536,
    "created_at": "2024-08-01T12:30:36.643566Z",
    "updated_at": "2024-08-01T12:30:36.643566Z",
    "lead_time": 0.079
  },
  {
    "text": "自nFRAME、nIRDY信号变为无效开始，个时钟周期内信号仍不变为有效，中央仲裁器认为被授权的主设备为“死设备”，并收回授权，以后也不再授权给该设备",
    "id": 4104,
    "label": [
      {
        "start": 37,
        "end": 42,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "FRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5537,
    "created_at": "2024-08-01T12:30:38.129303Z",
    "updated_at": "2024-08-01T12:30:38.130307Z",
    "lead_time": 0.54
  },
  {
    "text": "反之，当运行触发器“”时，就关闭时序产生器",
    "id": 4105,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5538,
    "created_at": "2024-08-01T12:30:39.240785Z",
    "updated_at": "2024-08-01T12:30:39.241789Z",
    "lead_time": 0.092
  },
  {
    "text": "而世纪年代以来，计算机的生产数量每年以的速度递增",
    "id": 4106,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5539,
    "created_at": "2024-08-01T12:30:40.538644Z",
    "updated_at": "2024-08-01T12:30:40.538644Z",
    "lead_time": 0.557
  },
  {
    "text": "换句话说，第一级和第二级的边界范围，要向第三级乃至更高级扩展",
    "id": 4107,
    "annotator": 1,
    "annotation_id": 5540,
    "created_at": "2024-08-01T12:30:41.521651Z",
    "updated_at": "2024-08-01T12:30:41.521651Z",
    "lead_time": 0.211
  },
  {
    "text": "其中个编码，对应着计算机终端能敲入并且可以显示的个字符，打印机设备也能打印这个字符，如大小写各个英文字母，这个数字符，通用的运算符和标点符号，，，，，，等",
    "id": 4108,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "打印机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 56,
        "end": 57,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5541,
    "created_at": "2024-08-01T12:30:42.653363Z",
    "updated_at": "2024-08-01T12:30:42.653363Z",
    "lead_time": 0.118
  },
  {
    "text": "一般规定送入CPU的信号叫输入IN信号，从CPU发出的信号叫输出OUT信号",
    "id": 4109,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5542,
    "created_at": "2024-08-01T12:30:43.905651Z",
    "updated_at": "2024-08-01T12:30:43.905651Z",
    "lead_time": 0.182
  },
  {
    "text": "即以nFRAME无效后，nIRDY也变为无效的时刻表明一个总线周期结束",
    "id": 4110,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "FRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5543,
    "created_at": "2024-08-01T12:30:44.914551Z",
    "updated_at": "2024-08-01T12:30:44.914551Z",
    "lead_time": 0.066
  },
  {
    "text": "采用硬件指令的目的是提高程序执行速度，便于用户编写程序",
    "id": 4111,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "硬件指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5544,
    "created_at": "2024-08-01T12:30:46.172404Z",
    "updated_at": "2024-08-01T12:30:46.172404Z",
    "lead_time": 0.118
  },
  {
    "text": "被灼烧的部分和未被灼烧的部分分别表示和",
    "id": 4112,
    "annotator": 1,
    "annotation_id": 5545,
    "created_at": "2024-08-01T12:30:47.423779Z",
    "updated_at": "2024-08-01T12:30:47.423779Z",
    "lead_time": 0.066
  },
  {
    "text": "RAID用于高速数据传输和高速IO请求",
    "id": 4113,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "IO请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5546,
    "created_at": "2024-08-01T12:30:48.344655Z",
    "updated_at": "2024-08-01T12:30:48.344655Z",
    "lead_time": 0.266
  },
  {
    "text": "在这里，由始终管理cache使用情况的硬件逻辑电路来实现替换算法",
    "id": 4114,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5547,
    "created_at": "2024-08-01T12:30:49.479624Z",
    "updated_at": "2024-08-01T12:30:49.479624Z",
    "lead_time": 0.189
  },
  {
    "text": "PCI支持任何主设备和从设备之间点到点的对等访问，也支持某些主设备的广播读写",
    "id": 4115,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "从设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "广播",
        "labels": [
          "PROT"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5548,
    "created_at": "2024-08-01T12:30:50.658873Z",
    "updated_at": "2024-08-01T12:30:50.658873Z",
    "lead_time": 0.099
  },
  {
    "text": "由于启动计算机是随机的，停机也是随机的，为此必须要求：当计算机启动时，一定要从第个节拍脉冲前沿开始工作，而在停机时一定要在第个节拍脉冲结束后关闭时序产生器",
    "id": 4116,
    "label": [
      {
        "start": 72,
        "end": 77,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 63,
        "end": 67,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5549,
    "created_at": "2024-08-01T12:30:51.793772Z",
    "updated_at": "2024-08-01T12:30:51.793772Z",
    "lead_time": 0.069
  },
  {
    "text": "随着IBMPC系列机的升级发展，PC机采用的显示标准经历了很多变化",
    "id": 4117,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "IBM",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5550,
    "created_at": "2024-08-01T12:30:53.317897Z",
    "updated_at": "2024-08-01T12:30:53.317897Z",
    "lead_time": 0.572
  },
  {
    "text": "在CISC计算机中，一个指令系统中指令字的长度和指令中的地址结构并不是单一的，往往采用多种格式混合使用，这样可以增强指令的功能",
    "id": 4118,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5551,
    "created_at": "2024-08-01T12:30:58.956492Z",
    "updated_at": "2024-08-01T12:30:58.956492Z",
    "lead_time": 4.84
  },
  {
    "text": "此时读写命令RW低电平表示写，在此期间，数据线上必须送入欲写入的数据DIN或",
    "id": 4119,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5552,
    "created_at": "2024-08-01T12:31:00.349558Z",
    "updated_at": "2024-08-01T12:31:00.349558Z",
    "lead_time": 0.547
  },
  {
    "text": "断电后仍能保存信息的存储器，称为非易失性存储器",
    "id": 4120,
    "label": [
      {
        "start": 16,
        "end": 23,
        "text": "非易失性存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5553,
    "created_at": "2024-08-01T12:31:01.144996Z",
    "updated_at": "2024-08-01T12:31:01.144996Z",
    "lead_time": 0.061
  },
  {
    "text": "寻址方式分为两类，即指令寻址方式和数据寻址方式，前者比较简单，后者比较复杂",
    "id": 4121,
    "label": [
      {
        "start": 17,
        "end": 23,
        "text": "数据寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "指令寻址方式",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5554,
    "created_at": "2024-08-01T12:31:02.365020Z",
    "updated_at": "2024-08-01T12:31:02.365020Z",
    "lead_time": 0.116
  },
  {
    "text": "当一个IO请求送到磁盘驱动时，首先搜索驱动器上的高速缓冲行是否已写上数据？如果是读操作，且要读的数据已在cache中，则为命中，可从cache行中读出数据，否则需从磁盘介质上读出",
    "id": 4122,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "高速缓冲",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 57,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "IO请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "磁盘驱动",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 66,
        "end": 71,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 82,
        "end": 84,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5555,
    "created_at": "2024-08-01T12:31:03.748576Z",
    "updated_at": "2024-08-01T12:31:03.749567Z",
    "lead_time": 0.165
  },
  {
    "text": "本来ADD指令应该先写R，SUB指令后读R，结果变成SUB指令先读R，ADD指令后写R",
    "id": 4123,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "ADD指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "SUB指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "ADD指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "SUB指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5556,
    "created_at": "2024-08-01T12:31:07.713808Z",
    "updated_at": "2024-08-01T12:31:07.713808Z",
    "lead_time": 2.966
  },
  {
    "text": "计算机组成原理补码加法的公式是x补y补xy补modn可分四种情况来证明",
    "id": 4124,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "计算机组成原理",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5557,
    "created_at": "2024-08-01T12:31:08.695086Z",
    "updated_at": "2024-08-01T12:31:08.695086Z",
    "lead_time": 0.319
  },
  {
    "text": "计算机组成原理我们先以钟表对时为例说明补码的概念",
    "id": 4125,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "计算机组成原",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5558,
    "created_at": "2024-08-01T12:31:09.728734Z",
    "updated_at": "2024-08-01T12:31:09.728734Z",
    "lead_time": 0.253
  },
  {
    "text": "由于约定在固定的位置，小数点就不再使用记号“”来表示",
    "id": 4126,
    "label": [
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5559,
    "created_at": "2024-08-01T12:31:10.887918Z",
    "updated_at": "2024-08-01T12:31:10.887918Z",
    "lead_time": 0.078
  },
  {
    "text": "三总线结构的运算器三总线结构的运算器如图c所示",
    "id": 4127,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "三总线结构",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "三总线结构",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5560,
    "created_at": "2024-08-01T12:31:11.876104Z",
    "updated_at": "2024-08-01T12:31:11.876104Z",
    "lead_time": 0.07
  },
  {
    "text": "NAND闪存通常被称为非线性闪存，最早由三星和东芝等公司生产",
    "id": 4128,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "非线性闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "三星",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "东芝",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "AND",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5561,
    "created_at": "2024-08-01T12:31:13.199775Z",
    "updated_at": "2024-08-01T12:31:13.199775Z",
    "lead_time": 0.079
  },
  {
    "text": "这就是所谓的汇编语言，它是一种能被转化为二进制文件的符号语言",
    "id": 4129,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5562,
    "created_at": "2024-08-01T12:31:14.252800Z",
    "updated_at": "2024-08-01T12:31:14.252800Z",
    "lead_time": 0.072
  },
  {
    "text": "通用计算机分为超级计算机、大型机、服务器、PC机、单片机、多核机六类，其结构复杂性、性能、价格依次递减",
    "id": 4130,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "超级计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "多核机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "大型机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5563,
    "created_at": "2024-08-01T12:31:15.888910Z",
    "updated_at": "2024-08-01T12:31:15.888910Z",
    "lead_time": 0.085
  },
  {
    "text": "如果是总线写周期，CPU在第个时钟周期开始将数据放到数据线上，待数据稳定后CPU发出一个写命令，存储器模块在第个时钟周期存入数据",
    "id": 4131,
    "label": [
      {
        "start": 48,
        "end": 51,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5564,
    "created_at": "2024-08-01T12:31:16.902125Z",
    "updated_at": "2024-08-01T12:31:16.902125Z",
    "lead_time": 0.107
  },
  {
    "text": "当然，为了缩短加法时间，最下一行的行波进位加法器也可以用先行进位加法器来代替",
    "id": 4132,
    "label": [
      {
        "start": 17,
        "end": 24,
        "text": "行波进位加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 35,
        "text": "先行进位加法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5565,
    "created_at": "2024-08-01T12:31:18.210027Z",
    "updated_at": "2024-08-01T12:31:18.210027Z",
    "lead_time": 0.082
  },
  {
    "text": "对于某一机器功能采用硬件方案还是软件方案，取决于器件价格、速度、可靠性、存储容量和变更周期等因素",
    "id": 4133,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5566,
    "created_at": "2024-08-01T12:31:19.338768Z",
    "updated_at": "2024-08-01T12:31:19.338768Z",
    "lead_time": 0.081
  },
  {
    "text": "一个典型的计算机系统具有各种类型的外围设备，因而有各种类型的适配器，它使得被连接的外围设备通过系统总线与主机进行联系，以便使主机和外围设备并行协调地工作",
    "id": 4134,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 69,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5567,
    "created_at": "2024-08-01T12:31:20.545036Z",
    "updated_at": "2024-08-01T12:31:20.545036Z",
    "lead_time": 0.113
  },
  {
    "text": "显然，移码中符号位ek表示的规律与原码、补码、反码相反",
    "id": 4135,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5568,
    "created_at": "2024-08-01T12:31:21.588267Z",
    "updated_at": "2024-08-01T12:31:21.588267Z",
    "lead_time": 0.084
  },
  {
    "text": "在我们给定的数据通路中，多路开关的每个控制门仅是一个常闭的开关，它的一个输入端代表来自寄存器的信息，而另一个输入端则作为操作控制端",
    "id": 4136,
    "label": [
      {
        "start": 43,
        "end": 46,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5569,
    "created_at": "2024-08-01T12:31:22.886710Z",
    "updated_at": "2024-08-01T12:31:22.886710Z",
    "lead_time": 0.095
  },
  {
    "text": "控制电路，向存储介质发送数据或从存储介质接收数据",
    "id": 4137,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "控制电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5570,
    "created_at": "2024-08-01T12:31:23.938895Z",
    "updated_at": "2024-08-01T12:31:23.938895Z",
    "lead_time": 0.088
  },
  {
    "text": "转移指令的转移地址一般采用直接寻址和相对寻址方式来确定",
    "id": 4138,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "转移地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "相对寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5571,
    "created_at": "2024-08-01T12:31:24.894185Z",
    "updated_at": "2024-08-01T12:31:24.894185Z",
    "lead_time": 0.085
  },
  {
    "text": "字库中存储了每个汉字的点阵代码",
    "id": 4139,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "字库",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "点阵代码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5572,
    "created_at": "2024-08-01T12:31:26.120208Z",
    "updated_at": "2024-08-01T12:31:26.120208Z",
    "lead_time": 0.106
  },
  {
    "text": "我们看到，CPU总线、PCI总线、ISA总线通过两个“桥”芯片连成整体",
    "id": 4140,
    "label": [
      {
        "start": 29,
        "end": 31,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "ISA总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5573,
    "created_at": "2024-08-01T12:31:27.272940Z",
    "updated_at": "2024-08-01T12:31:27.272940Z",
    "lead_time": 0.103
  },
  {
    "text": "温彻斯特磁盘机温彻斯特磁盘简称温盘，是一种采用先进技术研制的可移动磁头固定盘片的磁盘机",
    "id": 4141,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "温彻斯特磁盘机",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 13,
        "text": "温彻斯特磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5574,
    "created_at": "2024-08-01T12:31:28.401019Z",
    "updated_at": "2024-08-01T12:31:28.402032Z",
    "lead_time": 0.085
  },
  {
    "text": "目标方传输速度跟不上主方速度，可用nTRDY无效通知主方加入等待状态时钟周期",
    "id": 4142,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5575,
    "created_at": "2024-08-01T12:31:29.308216Z",
    "updated_at": "2024-08-01T12:31:29.308216Z",
    "lead_time": 0.051
  },
  {
    "text": "直接使用西文标准键盘输入汉字，进行处理，并显示打印汉字，是一项重大成就",
    "id": 4143,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "西文标准键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5576,
    "created_at": "2024-08-01T12:31:30.497207Z",
    "updated_at": "2024-08-01T12:31:30.497207Z",
    "lead_time": 0.117
  },
  {
    "text": "显然，超标量流水计算机是时间并行技术和空间并行技术的综合应用",
    "id": 4144,
    "label": [
      {
        "start": 12,
        "end": 18,
        "text": "时间并行技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "空间并行技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 11,
        "text": "超标量流水计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5577,
    "created_at": "2024-08-01T12:31:31.770920Z",
    "updated_at": "2024-08-01T12:31:31.770920Z",
    "lead_time": 0.099
  },
  {
    "text": "条件转移微指令",
    "id": 4145,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "条件转移微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5578,
    "created_at": "2024-08-01T12:31:32.667187Z",
    "updated_at": "2024-08-01T12:31:32.667187Z",
    "lead_time": 0.066
  },
  {
    "text": "由于内存按字节编址，所以单字长指令每执行一条指令后，指令地址加",
    "id": 4146,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "单字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5579,
    "created_at": "2024-08-01T12:31:33.950229Z",
    "updated_at": "2024-08-01T12:31:33.950229Z",
    "lead_time": 0.133
  },
  {
    "text": "一般而言，有些指令固定使用某种寻址方式；有些指令则允许使用多种寻址方式，或者在指令中加入寻址方式字段指明，或者对不同的寻址方式分配不同的操作码而把它们看作不同的指令",
    "id": 4147,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5580,
    "created_at": "2024-08-01T12:31:35.276416Z",
    "updated_at": "2024-08-01T12:31:35.276416Z",
    "lead_time": 0.121
  },
  {
    "text": "由此可见，这种结构的主要缺点是操作速度较慢",
    "id": 4148,
    "annotator": 1,
    "annotation_id": 5581,
    "created_at": "2024-08-01T12:31:36.461447Z",
    "updated_at": "2024-08-01T12:31:36.461447Z",
    "lead_time": 0.058
  },
  {
    "text": "对程序计数器加，做好取下一条机器指令的准备",
    "id": 4149,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5582,
    "created_at": "2024-08-01T12:31:37.362294Z",
    "updated_at": "2024-08-01T12:31:37.362294Z",
    "lead_time": 0.068
  },
  {
    "text": "图a示出了可控加法减法CAS单元的逻辑电路图，它有四个输出端和四个输入端",
    "id": 4150,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5583,
    "created_at": "2024-08-01T12:31:38.619167Z",
    "updated_at": "2024-08-01T12:31:38.619167Z",
    "lead_time": 0.114
  },
  {
    "text": "这种乘法器要实现n位n位时，需要nn个全加器和n个与门",
    "id": 4151,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "与门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5584,
    "created_at": "2024-08-01T12:31:39.797239Z",
    "updated_at": "2024-08-01T12:31:39.797239Z",
    "lead_time": 0.107
  },
  {
    "text": "一类是电子模拟计算机",
    "id": 4152,
    "label": [
      {
        "start": 3,
        "end": 10,
        "text": "电子模拟计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5585,
    "created_at": "2024-08-01T12:31:40.740166Z",
    "updated_at": "2024-08-01T12:31:40.740166Z",
    "lead_time": 0.061
  },
  {
    "text": "CKE为时钟使能信号，只有该信号有效时，时钟输入才能作用于SDRAM芯片",
    "id": 4153,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5586,
    "created_at": "2024-08-01T12:31:41.863961Z",
    "updated_at": "2024-08-01T12:31:41.863961Z",
    "lead_time": 0.093
  },
  {
    "text": "所谓跳跃，是指下条指令的地址码不是由程序计数器给出的，而是由本条指令给出",
    "id": 4154,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5587,
    "created_at": "2024-08-01T12:31:43.026802Z",
    "updated_at": "2024-08-01T12:31:43.026802Z",
    "lead_time": 0.085
  },
  {
    "text": "点阵是由mn个点组成的阵列，并以此来构造字符",
    "id": 4155,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5588,
    "created_at": "2024-08-01T12:31:44.302446Z",
    "updated_at": "2024-08-01T12:31:44.302446Z",
    "lead_time": 0.073
  },
  {
    "text": "一个正整数，当用原码、反码、补码表示时，符号位都固定为，用二进制表示的数位值都相同，即三种表示方法完全一样",
    "id": 4156,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5589,
    "created_at": "2024-08-01T12:31:45.284170Z",
    "updated_at": "2024-08-01T12:31:45.285167Z",
    "lead_time": 0.088
  },
  {
    "text": "为解决此问题，特设置了BUSY标志",
    "id": 4157,
    "label": [
      {
        "start": 11,
        "end": 17,
        "text": "BUSY标志",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5590,
    "created_at": "2024-08-01T12:31:46.449121Z",
    "updated_at": "2024-08-01T12:31:46.449121Z",
    "lead_time": 0.088
  },
  {
    "text": "当主存缺页时，调页操作首先要定位辅存，而外页表的结构与辅存的寻址机制密切相关",
    "id": 4158,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "缺页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "寻址机制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5591,
    "created_at": "2024-08-01T12:31:47.565255Z",
    "updated_at": "2024-08-01T12:31:47.565255Z",
    "lead_time": 0.133
  },
  {
    "text": "因此在某些超高速新型计算机结构中，又选用了硬布线控制器，或与微程序控制器混合使用",
    "id": 4159,
    "label": [
      {
        "start": 30,
        "end": 36,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 27,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5592,
    "created_at": "2024-08-01T12:31:48.819467Z",
    "updated_at": "2024-08-01T12:31:48.819467Z",
    "lead_time": 0.264
  },
  {
    "text": "这时虚拟存储器简称虚存并没有太大的用处",
    "id": 4160,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5593,
    "created_at": "2024-08-01T12:31:49.772341Z",
    "updated_at": "2024-08-01T12:31:49.772341Z",
    "lead_time": 0.078
  },
  {
    "text": "根据程序的局部性原理，多数虚拟存储器访问都将通过TLB进行，从而有效降低访存的时间延迟",
    "id": 4161,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5594,
    "created_at": "2024-08-01T12:31:50.840219Z",
    "updated_at": "2024-08-01T12:31:50.840219Z",
    "lead_time": 0.083
  },
  {
    "text": "多级存储系统的出发点是提高存储系统的性能价格比，让整个存储系统在速度上接近cache，而在容量和价格上接近外存",
    "id": 4162,
    "label": [
      {
        "start": 53,
        "end": 55,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "多级存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5595,
    "created_at": "2024-08-01T12:31:51.963816Z",
    "updated_at": "2024-08-01T12:31:51.963816Z",
    "lead_time": 0.074
  },
  {
    "text": "为了不断提供刷新图像的信号，必须把一帧图像信息存储在刷新存储器，也称视频存储器",
    "id": 4163,
    "label": [
      {
        "start": 26,
        "end": 31,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "视频存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5596,
    "created_at": "2024-08-01T12:31:52.941394Z",
    "updated_at": "2024-08-01T12:31:52.941394Z",
    "lead_time": 0.066
  },
  {
    "text": "系统总线还用于访问IO资源",
    "id": 4164,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5597,
    "created_at": "2024-08-01T12:31:54.017026Z",
    "updated_at": "2024-08-01T12:31:54.017026Z",
    "lead_time": 0.093
  },
  {
    "text": "将点阵存入由ROM构成的字符发生器中，在CRT进行光栅扫描的过程中，从字符发生器中依次读出某个字符的点阵，按照点阵中和代码不同控制扫描电子束的开或关，从而在屏幕上显示出字符，如图a所示",
    "id": 4165,
    "label": [
      {
        "start": 67,
        "end": 70,
        "text": "电子束",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "字符发生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "字符发生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "光栅扫描",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 84,
        "end": 85,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5598,
    "created_at": "2024-08-01T12:31:55.198181Z",
    "updated_at": "2024-08-01T12:31:55.198181Z",
    "lead_time": 0.134
  },
  {
    "text": "机器指令对数据进行操作，数据通常分以下四类：地址数据地址实际上也是一种形式的数据",
    "id": 4166,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5599,
    "created_at": "2024-08-01T12:31:56.397380Z",
    "updated_at": "2024-08-01T12:31:56.397380Z",
    "lead_time": 0.138
  },
  {
    "text": "如果支持，则存储器读写一般是通过cache来进行；否则，是以数据块非缓存方式来传输",
    "id": 4167,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "缓存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5600,
    "created_at": "2024-08-01T12:32:00.943305Z",
    "updated_at": "2024-08-01T12:32:00.943305Z",
    "lead_time": 3.611
  },
  {
    "text": "在此期间，SDRAM完成读或写的内部操作如行列选择、地址译码、数据读出或写入、数据放大等，处理器则可照常安全地执行其他任务，不必单纯等待，以此来提高系统效率",
    "id": 4168,
    "label": [
      {
        "start": 45,
        "end": 48,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5601,
    "created_at": "2024-08-01T12:32:01.951382Z",
    "updated_at": "2024-08-01T12:32:01.951382Z",
    "lead_time": 0.071
  },
  {
    "text": "使用同步时序协议，总线时钟为方波信号，频率为MHz",
    "id": 4169,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "同步时序协议",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "总线时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5602,
    "created_at": "2024-08-01T12:32:03.063661Z",
    "updated_at": "2024-08-01T12:32:03.063661Z",
    "lead_time": 0.08
  },
  {
    "text": "一个机器字可以包含数字节，所以一个存储单元也可占用数个能够单独编址的字节地址",
    "id": 4170,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5603,
    "created_at": "2024-08-01T12:32:04.270502Z",
    "updated_at": "2024-08-01T12:32:04.270502Z",
    "lead_time": 0.106
  },
  {
    "text": "假设片组的先行进位输出依次为P，G，P，G，P，G，P，G，那么参考式的进位逻辑表达式，先行进位部件CLA所提供的进位逻辑关系如下：CnxGPCnCnyGPCnxGGPPPCnCnzGPCnyGGPGPPPPPCnCnGPCnzGGPGPPGPPPPPPPCnGPCn其中PPPPPGGGPGPPGPPP根据以上表达式，用TTL器件实现的成组先行进位部件的逻辑电路图如图所示",
    "id": 4171,
    "label": [
      {
        "start": 44,
        "end": 50,
        "text": "先行进位部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 178,
        "end": 182,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 161,
        "end": 164,
        "text": "TTL",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 169,
        "end": 177,
        "text": "成组先行进位部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 59,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5604,
    "created_at": "2024-08-01T12:32:06.013707Z",
    "updated_at": "2024-08-01T12:32:06.014729Z",
    "lead_time": 0.743
  },
  {
    "text": "按结构不同，分为寄存器堆栈和存储器堆栈",
    "id": 4172,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "寄存器堆栈",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "存储器堆栈",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5605,
    "created_at": "2024-08-01T12:32:06.990326Z",
    "updated_at": "2024-08-01T12:32:06.990326Z",
    "lead_time": 0.047
  },
  {
    "text": "当机器加电工作时，某一操作控制信号C在某条特定指令和状态条件下，在某一序号的特定节拍电位和节拍脉冲时间间隔中起作用，从而激活这条控制信号线，对执行部件实施控制",
    "id": 4173,
    "label": [
      {
        "start": 11,
        "end": 17,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5606,
    "created_at": "2024-08-01T12:32:07.731382Z",
    "updated_at": "2024-08-01T12:32:07.731382Z",
    "lead_time": 0.056
  },
  {
    "text": "主方主设备可以启动一个总线周期，而从方从设备只能响应主方的请求",
    "id": 4174,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "从设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5607,
    "created_at": "2024-08-01T12:32:15.163522Z",
    "updated_at": "2024-08-01T12:32:15.163522Z",
    "lead_time": 6.764
  },
  {
    "text": "对于一个机器的指令系统，在指令字中操作码字段和地址码字段长度通常是固定的",
    "id": 4175,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5608,
    "created_at": "2024-08-01T12:32:19.725532Z",
    "updated_at": "2024-08-01T12:32:19.725532Z",
    "lead_time": 3.976
  },
  {
    "text": "为了减少存取时间，可采取的措施有：提高磁盘机主轴转速，提高IO总线速度，采用磁盘cache磁盘缓存等",
    "id": 4176,
    "label": [
      {
        "start": 45,
        "end": 49,
        "text": "磁盘缓存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "IO总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 45,
        "text": "磁盘cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5609,
    "created_at": "2024-08-01T12:32:26.105453Z",
    "updated_at": "2024-08-01T12:32:26.105453Z",
    "lead_time": 5.797
  },
  {
    "text": "计算机之所以能自动地工作，是因为CPU能从存放程序的内存里取出一条指令并执行这条指令；紧接着又是取指令，执行指令如此周而复始，构成了一个封闭的循环",
    "id": 4177,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5610,
    "created_at": "2024-08-01T12:32:26.774803Z",
    "updated_at": "2024-08-01T12:32:26.774803Z",
    "lead_time": 0.076
  },
  {
    "text": "执行指令阶段执行周期MOV指令的执行周期示于图中，在此阶段，CPU的动作如下：操作控制器OC送出控制信号到通用寄存器，选择R作源寄存器，选择R作目标寄存器；OC送出控制信号到ALU，指定ALU做传送操作；OC送出控制信号，打开ALU输出三态门，将ALU输出送到数据总线DBUS上",
    "id": 4178,
    "label": [
      {
        "start": 53,
        "end": 58,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 87,
        "end": 90,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 130,
        "end": 134,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 67,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "执行指令阶段",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "MOV指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 73,
        "end": 77,
        "text": "标寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 93,
        "end": 96,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 113,
        "end": 116,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 118,
        "end": 121,
        "text": "三态门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 123,
        "end": 126,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 82,
        "end": 86,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5611,
    "created_at": "2024-08-01T12:32:27.727775Z",
    "updated_at": "2024-08-01T12:32:27.728785Z",
    "lead_time": 0.162
  },
  {
    "text": "图a表示存储容量为K位的SRAM逻辑结构图",
    "id": 4179,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5612,
    "created_at": "2024-08-01T12:32:29.226796Z",
    "updated_at": "2024-08-01T12:32:29.226796Z",
    "lead_time": 0.76
  },
  {
    "text": "组相联映射方式全相联映射和直接映射两种方式的优缺点正好相反",
    "id": 4180,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "组相联映射方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "全相联映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "直接映射",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5613,
    "created_at": "2024-08-01T12:32:30.037845Z",
    "updated_at": "2024-08-01T12:32:30.037845Z",
    "lead_time": 0.06
  },
  {
    "text": "这是因为，当两数相加时，如果是同号则数值相加；如果是异号，则要进行减法",
    "id": 4181,
    "annotator": 1,
    "annotation_id": 5614,
    "created_at": "2024-08-01T12:32:30.771039Z",
    "updated_at": "2024-08-01T12:32:30.771039Z",
    "lead_time": 0.046
  },
  {
    "text": "虚拟存储器的替换算法与cache的替换算法不同的是：cache的替换全部靠硬件实现，而虚拟存储器的替换有操作系统的支持",
    "id": 4182,
    "label": [
      {
        "start": 37,
        "end": 39,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5615,
    "created_at": "2024-08-01T12:32:31.489460Z",
    "updated_at": "2024-08-01T12:32:31.489460Z",
    "lead_time": 0.065
  },
  {
    "text": "由于一次访问指存，一次访问数存，因此指令周期需个CPU周期，其中执行周期为个CPU周期，如图所示",
    "id": 4183,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5616,
    "created_at": "2024-08-01T12:32:32.689678Z",
    "updated_at": "2024-08-01T12:32:32.689678Z",
    "lead_time": 0.064
  },
  {
    "text": "另一种是IO独立编址方式：内存地址和IO设备地址是分开的，访问内存和访问IO设备使用不同的指令，即访问IO设备有专门的IO指令组",
    "id": 4184,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "IO独立编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 59,
        "end": 64,
        "text": "IO指令组",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5617,
    "created_at": "2024-08-01T12:32:33.542909Z",
    "updated_at": "2024-08-01T12:32:33.542909Z",
    "lead_time": 0.087
  },
  {
    "text": "内务操作时间一般很短一般在ms左右，可忽略不计",
    "id": 4185,
    "annotator": 1,
    "annotation_id": 5618,
    "created_at": "2024-08-01T12:32:34.437787Z",
    "updated_at": "2024-08-01T12:32:34.437787Z",
    "lead_time": 0.058
  },
  {
    "text": "在FIFO算法中，FIFO队列中的页面始终按照从a到c的顺序依次推进，页面从a位置进入队列，替换始终在页面c的位置进行",
    "id": 4186,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "FIFO算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "FIFO",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "队列",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "队列",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 56,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5619,
    "created_at": "2024-08-01T12:32:35.194071Z",
    "updated_at": "2024-08-01T12:32:35.194071Z",
    "lead_time": 0.084
  },
  {
    "text": "当执行转移指令时，依据转移条件的产生结果，可能为顺序取下条指令；也可能转移到新的目标地址取指令，从而使流水线发生断流",
    "id": 4187,
    "label": [
      {
        "start": 44,
        "end": 47,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "转移条件",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "目标地址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5620,
    "created_at": "2024-08-01T12:32:36.125849Z",
    "updated_at": "2024-08-01T12:32:36.125849Z",
    "lead_time": 0.077
  },
  {
    "text": "个片组组合成一个M位的存储模块",
    "id": 4188,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "存储模块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5621,
    "created_at": "2024-08-01T12:32:37.059377Z",
    "updated_at": "2024-08-01T12:32:37.059377Z",
    "lead_time": 0.059
  },
  {
    "text": "多级存储系统的组成在CPU内部有少量的寄存器可以存储正在执行的指令或者正在参加运算的数据，寄存器的访问速度非常快，但数量较少",
    "id": 4189,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "多级存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5622,
    "created_at": "2024-08-01T12:32:39.429975Z",
    "updated_at": "2024-08-01T12:32:39.429975Z",
    "lead_time": 1.683
  },
  {
    "text": "因为，原始信息只有经过加工处理后才能对人们有用",
    "id": 4190,
    "annotator": 1,
    "annotation_id": 5623,
    "created_at": "2024-08-01T12:32:42.093417Z",
    "updated_at": "2024-08-01T12:32:42.093417Z",
    "lead_time": 2.028
  },
  {
    "text": "实际带宽会受到总线布线长度、总线驱动器接收器性能、连接在总线上的模块数等因素的影响",
    "id": 4191,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "实际带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "总线驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5624,
    "created_at": "2024-08-01T12:32:43.205825Z",
    "updated_at": "2024-08-01T12:32:43.205825Z",
    "lead_time": 0.376
  },
  {
    "text": "本章小结一台计算机中所有机器指令的集合，称为这台计算机的指令系统",
    "id": 4192,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5625,
    "created_at": "2024-08-01T12:32:44.340939Z",
    "updated_at": "2024-08-01T12:32:44.340939Z",
    "lead_time": 0.089
  },
  {
    "text": "由于铁芯是高导磁率材料，而铁芯空隙处为非磁性材料，故在铁芯空隙处集中很强的磁场",
    "id": 4193,
    "annotator": 1,
    "annotation_id": 5626,
    "created_at": "2024-08-01T12:32:45.442999Z",
    "updated_at": "2024-08-01T12:32:45.442999Z",
    "lead_time": 0.063
  },
  {
    "text": "CPU中也有一个类似“作息时间”的东西，它称为时序信号",
    "id": 4194,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5627,
    "created_at": "2024-08-01T12:32:46.414644Z",
    "updated_at": "2024-08-01T12:32:46.414644Z",
    "lead_time": 0.098
  },
  {
    "text": "全相联方式的主要缺点是高速比较器电路难于设计和实现，因此只适合于小容量cache采用",
    "id": 4195,
    "label": [
      {
        "start": 35,
        "end": 40,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "全相联方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "比较器电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5628,
    "created_at": "2024-08-01T12:32:47.486085Z",
    "updated_at": "2024-08-01T12:32:47.486085Z",
    "lead_time": 0.063
  },
  {
    "text": "PCI是一个与处理器无关的高速外围总线，又是至关重要的层间总线",
    "id": 4196,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 19,
        "text": "高速外围总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5629,
    "created_at": "2024-08-01T12:32:48.473059Z",
    "updated_at": "2024-08-01T12:32:48.473059Z",
    "lead_time": 0.069
  },
  {
    "text": "总线的一次信息传送过程，大致可分为如下五个阶段：请求总线，总线仲裁，寻址目的地址，信息传送，状态返回或错误报告",
    "id": 4197,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "请求总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "目的地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5630,
    "created_at": "2024-08-01T12:32:58.459075Z",
    "updated_at": "2024-08-01T12:32:58.459075Z",
    "lead_time": 8.934
  },
  {
    "text": "它采用同步时序协议和集中式仲裁策略，并具有自动配置能力",
    "id": 4198,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "同步时序协议",
        "labels": [
          "PROT"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5631,
    "created_at": "2024-08-01T12:32:59.645950Z",
    "updated_at": "2024-08-01T12:32:59.645950Z",
    "lead_time": 0.279
  },
  {
    "text": "既然微程序是由微指令组成的，那么当执行当前一条微指令时，必须指出后继微指令的地址，以便当前一条微指令执行完毕后，取出下一条微指令",
    "id": 4199,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5632,
    "created_at": "2024-08-01T12:33:02.212935Z",
    "updated_at": "2024-08-01T12:33:02.212935Z",
    "lead_time": 1.759
  },
  {
    "text": "浮点数支持IEEE中定义的单、双精度浮点数据类型",
    "id": 4200,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "双精度浮点数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5633,
    "created_at": "2024-08-01T12:33:03.213905Z",
    "updated_at": "2024-08-01T12:33:03.213905Z",
    "lead_time": 0.105
  },
  {
    "text": "IO接口是由半导体介质构成的逻辑电路，它作为一个转换器，保证外部设备用计算机系统特性所要求的形式发送或接收信息",
    "id": 4201,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "转换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5634,
    "created_at": "2024-08-01T12:33:07.726476Z",
    "updated_at": "2024-08-01T12:33:07.726476Z",
    "lead_time": 3.362
  },
  {
    "text": "图示出了一个具有使能控制的二进制对求补器电路图，其逻辑表达式如下：C，CiaiCiiaaiECi，in对求补时，采用按位扫描技术来执行所需要的求补操作",
    "id": 4202,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 59,
        "end": 60,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5635,
    "created_at": "2024-08-01T12:33:09.950018Z",
    "updated_at": "2024-08-01T12:33:09.950266Z",
    "lead_time": 1.162
  },
  {
    "text": "世纪末，主机与外围设备的价格比为",
    "id": 4203,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5636,
    "created_at": "2024-08-01T12:33:11.215497Z",
    "updated_at": "2024-08-01T12:33:11.215497Z",
    "lead_time": 0.097
  },
  {
    "text": "一种情况是，大部分操作序列安排在固定的机器周期中，对某些时间难以确定的操作则以执行部件的“回答”信号作为本次操作的结束标志",
    "id": 4204,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "操作序列",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5637,
    "created_at": "2024-08-01T12:33:12.854391Z",
    "updated_at": "2024-08-01T12:33:12.854391Z",
    "lead_time": 0.615
  },
  {
    "text": "可见，这样实现的方式是按序发射，图b示出了指令配对情况",
    "id": 4205,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5638,
    "created_at": "2024-08-01T12:33:14.471921Z",
    "updated_at": "2024-08-01T12:33:14.471921Z",
    "lead_time": 0.093
  },
  {
    "text": "在图所示的流水线浮点加法器框图中，标出了上述例子在每一个过程段和锁存器L中保存的流水运算结果值",
    "id": 4206,
    "label": [
      {
        "start": 5,
        "end": 13,
        "text": "流水线浮点加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5639,
    "created_at": "2024-08-01T12:33:15.570268Z",
    "updated_at": "2024-08-01T12:33:15.570268Z",
    "lead_time": 0.077
  },
  {
    "text": "激光印字机激光印字机是激光技术和电子照相技术结合的产物，其基本原理与静电复印机相似",
    "id": 4207,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "激光印字机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "静电复印机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "激光印字机",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5640,
    "created_at": "2024-08-01T12:33:16.934636Z",
    "updated_at": "2024-08-01T12:33:16.934636Z",
    "lead_time": 0.089
  },
  {
    "text": "我们发现，单总线结构容易扩展成多CPU系统",
    "id": 4208,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "多CPU",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5641,
    "created_at": "2024-08-01T12:33:18.726211Z",
    "updated_at": "2024-08-01T12:33:18.726211Z",
    "lead_time": 0.594
  },
  {
    "text": "图所示为数字计算机的主要组成结构，其中双线及箭头表示数据代码传送通路",
    "id": 4209,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "传送通路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5642,
    "created_at": "2024-08-01T12:33:36.120211Z",
    "updated_at": "2024-08-01T12:33:36.120211Z",
    "lead_time": 16.462
  },
  {
    "text": "广播、广集操作一般而言，数据传送只在一个主方和一个从方之间进行",
    "id": 4210,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "广播",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "广集",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5643,
    "created_at": "2024-08-01T12:33:37.668478Z",
    "updated_at": "2024-08-01T12:33:37.668478Z",
    "lead_time": 0.641
  },
  {
    "text": "因为根据程序的局部性原理，刚被访问的页面在最近的将来被再次访问的概率较大，故将其被替换的时间延后",
    "id": 4211,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5644,
    "created_at": "2024-08-01T12:33:38.828596Z",
    "updated_at": "2024-08-01T12:33:38.828596Z",
    "lead_time": 0.079
  },
  {
    "text": "在一个程序执行期间，设Nc表示cache完成存取的总次数，Nm表示主存完成存取的总次数，h定义为命中率，则有若tc表示命中时的cache访问时间，tm表示未命中时的主存访问时间，h表示未命中率缺失率，则cache主存系统的平均访问时间ta为tahtchtm我们追求的目标是，以较小的硬件代价使cache主存系统的平均访问时间ta越接近tc越好",
    "id": 4212,
    "label": [
      {
        "start": 141,
        "end": 143,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 63,
        "end": 68,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 101,
        "end": 110,
        "text": "cache主存系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 111,
        "end": 117,
        "text": "平均访问时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 146,
        "end": 155,
        "text": "cache主存系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 156,
        "end": 162,
        "text": "平均访问时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 93,
        "end": 96,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 82,
        "end": 84,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5645,
    "created_at": "2024-08-01T12:33:39.928220Z",
    "updated_at": "2024-08-01T12:33:39.928220Z",
    "lead_time": 0.107
  },
  {
    "text": "刷新周期是在RAS有效下输入刷新地址，此地址指示的一行所有存储元全部被再生",
    "id": 4213,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5646,
    "created_at": "2024-08-01T12:33:41.354330Z",
    "updated_at": "2024-08-01T12:33:41.354330Z",
    "lead_time": 0.109
  },
  {
    "text": "信息易失性断电后信息消失的存储器，称为易失性存储器",
    "id": 4214,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "易失性存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5647,
    "created_at": "2024-08-01T12:33:42.544715Z",
    "updated_at": "2024-08-01T12:33:42.544715Z",
    "lead_time": 0.077
  },
  {
    "text": "在单总线系统中，当CPU取一条指令时，首先把程序计数器PC中的地址同控制信息一起送至总线上",
    "id": 4215,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "单总线系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 22,
        "end": 29,
        "text": "程序计数器PC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5648,
    "created_at": "2024-08-01T12:33:43.784839Z",
    "updated_at": "2024-08-01T12:33:43.784839Z",
    "lead_time": 0.104
  },
  {
    "text": "只读存储器和闪速存储器正好弥补了SRAM和DRAM的缺点，即使断电也仍然保存原先写入的数据",
    "id": 4216,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "闪速存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5649,
    "created_at": "2024-08-01T12:33:44.889764Z",
    "updated_at": "2024-08-01T12:33:44.889764Z",
    "lead_time": 0.088
  },
  {
    "text": "图中声音通过话筒进入语音识别器，然后送入计算机；计算机输出数据送入语音合成器变为声音，然后由喇叭输出",
    "id": 4217,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "语音识别器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5650,
    "created_at": "2024-08-01T12:33:46.366503Z",
    "updated_at": "2024-08-01T12:33:46.366503Z",
    "lead_time": 0.089
  },
  {
    "text": "其中主存单元长度由字节组成",
    "id": 4218,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "主存单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5651,
    "created_at": "2024-08-01T12:33:48.301596Z",
    "updated_at": "2024-08-01T12:33:48.301596Z",
    "lead_time": 0.74
  },
  {
    "text": "现代计算机不仅处理数值领域的问题，而且处理大量非数值领域的问题",
    "id": 4219,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5652,
    "created_at": "2024-08-01T12:33:49.216933Z",
    "updated_at": "2024-08-01T12:33:49.216933Z",
    "lead_time": 0.055
  },
  {
    "text": "刷存通过适配器内部的位或位总线与显示控制器连接",
    "id": 4220,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5653,
    "created_at": "2024-08-01T12:33:50.572664Z",
    "updated_at": "2024-08-01T12:33:50.572664Z",
    "lead_time": 0.143
  },
  {
    "text": "一般来说，定点格式容许的数值范围有限，要求的处理硬件比较简单",
    "id": 4221,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5654,
    "created_at": "2024-08-01T12:33:52.032714Z",
    "updated_at": "2024-08-01T12:33:52.032714Z",
    "lead_time": 0.085
  },
  {
    "text": "位扩展若给定的芯片的字数地指数符合要求，但位数较短，不满足设计要求的存储器字长，则需要进行位扩展，让多片给定芯片并行工作",
    "id": 4222,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "位扩展",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "存储器字长",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "位扩展",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5655,
    "created_at": "2024-08-01T12:33:53.265298Z",
    "updated_at": "2024-08-01T12:33:53.265298Z",
    "lead_time": 0.194
  },
  {
    "text": "此软件可在磁盘子系统或主机上运行",
    "id": 4223,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5656,
    "created_at": "2024-08-01T12:33:54.721740Z",
    "updated_at": "2024-08-01T12:33:54.721740Z",
    "lead_time": 0.087
  },
  {
    "text": "这是一个存储容量为K字长位的SRAM，它提供了两个相互独立的端口，即左端口和右端口",
    "id": 4224,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5657,
    "created_at": "2024-08-01T12:33:56.021938Z",
    "updated_at": "2024-08-01T12:33:56.021938Z",
    "lead_time": 0.366
  },
  {
    "text": "指令格式由第一个字段的值来区分：每种格式的第一个字段OP都被分配了一套不同的值，因此计算机硬件可以根据OP来确定指令的后半部分是三个字段R型还是一个字段I型",
    "id": 4225,
    "label": [
      {
        "start": 42,
        "end": 47,
        "text": "计算机硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5658,
    "created_at": "2024-08-01T12:33:57.975959Z",
    "updated_at": "2024-08-01T12:33:57.976964Z",
    "lead_time": 0.832
  },
  {
    "text": "图示出了m的流水线方式存取示意图",
    "id": 4226,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5659,
    "created_at": "2024-08-01T12:33:59.234765Z",
    "updated_at": "2024-08-01T12:33:59.234765Z",
    "lead_time": 0.076
  },
  {
    "text": "接口部件在它动态联结的两个功能部件间起着缓冲器和转换器的作用，以便实现彼此之间的信息传送",
    "id": 4227,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "接口部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "转换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5660,
    "created_at": "2024-08-01T12:34:00.062087Z",
    "updated_at": "2024-08-01T12:34:00.062087Z",
    "lead_time": 0.059
  },
  {
    "text": "因此在对阶时，总是使小阶向大阶看齐，即小阶的尾数向右移位相当于小数点左移，每右移一位，其阶码加，直到两数的阶码相等为止，右移的位数等于阶差E",
    "id": 4228,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "左移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 63,
        "end": 64,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5661,
    "created_at": "2024-08-01T12:34:01.382523Z",
    "updated_at": "2024-08-01T12:34:01.382523Z",
    "lead_time": 0.174
  },
  {
    "text": "为了有一个完整概念，表列出了嵌入式处理机ARM的汇编语言",
    "id": 4229,
    "label": [
      {
        "start": 14,
        "end": 20,
        "text": "嵌入式处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5662,
    "created_at": "2024-08-01T12:34:02.902988Z",
    "updated_at": "2024-08-01T12:34:02.902988Z",
    "lead_time": 0.082
  },
  {
    "text": "不同的PCIe总线规范所定义的总线频率和链路编码方式并不相同，PCIe规范中，单通道单向传输带宽可达到MBs",
    "id": 4230,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "总线频率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "传输带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5663,
    "created_at": "2024-08-01T12:34:04.120782Z",
    "updated_at": "2024-08-01T12:34:04.121789Z",
    "lead_time": 0.126
  },
  {
    "text": "这一策略就是存储器分层，即利用不同容量、成本、功耗和速度的多种存储器构成有机结合的多级存储系统",
    "id": 4231,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 47,
        "text": "多级存储系统",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5664,
    "created_at": "2024-08-01T12:34:05.296439Z",
    "updated_at": "2024-08-01T12:34:05.296439Z",
    "lead_time": 0.09
  },
  {
    "text": "因此刷存的容量直接取决于显示器的分辨率和灰度级",
    "id": 4232,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5665,
    "created_at": "2024-08-01T12:34:06.718732Z",
    "updated_at": "2024-08-01T12:34:06.718732Z",
    "lead_time": 0.096
  },
  {
    "text": "一旦把程序装入内存储器，就可以由计算机部件来自动完成取指令和执行指令的任务",
    "id": 4233,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5666,
    "created_at": "2024-08-01T12:34:09.101974Z",
    "updated_at": "2024-08-01T12:34:09.101974Z",
    "lead_time": 1.304
  },
  {
    "text": "此时经行、列地址译码，读写命令RW高电平表示读，数据线上便有输出数据",
    "id": 4234,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5667,
    "created_at": "2024-08-01T12:34:11.301651Z",
    "updated_at": "2024-08-01T12:34:11.301651Z",
    "lead_time": 1.113
  },
  {
    "text": "由于NAND闪存的数据存取无机械运动，可靠性高，存取速度快，体积小巧，因而已经部分取代了磁介质辅存",
    "id": 4235,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "磁介质",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "AND",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5668,
    "created_at": "2024-08-01T12:34:12.391132Z",
    "updated_at": "2024-08-01T12:34:12.391132Z",
    "lead_time": 0.157
  },
  {
    "text": "速度极慢或简单的外围设备：无条件传送方式对这类设备，如机械开关、发光二极管等，在任何一次数据交换之前，外设无需进行准备操作",
    "id": 4236,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5669,
    "created_at": "2024-08-01T12:34:13.926835Z",
    "updated_at": "2024-08-01T12:34:13.926835Z",
    "lead_time": 0.616
  },
  {
    "text": "八位微型计算机的指令格式早期的位微型机字长只有位",
    "id": 4237,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "微型计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5670,
    "created_at": "2024-08-01T12:34:15.768804Z",
    "updated_at": "2024-08-01T12:34:15.768804Z",
    "lead_time": 0.629
  },
  {
    "text": "对某数进行逻辑非运算，就是按位求它的反，常用变量上方加一横来表示",
    "id": 4238,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "逻辑非",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5671,
    "created_at": "2024-08-01T12:34:17.042231Z",
    "updated_at": "2024-08-01T12:34:17.042231Z",
    "lead_time": 0.075
  },
  {
    "text": "通常流水线分为个主要单元：一个取指令发射单元，多个功能单元个或更多，一个指令完成单元",
    "id": 4239,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "功能单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5672,
    "created_at": "2024-08-01T12:34:19.013096Z",
    "updated_at": "2024-08-01T12:34:19.013096Z",
    "lead_time": 0.864
  },
  {
    "text": "位代码组合可指定种总线命令，但实际给出种",
    "id": 4240,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5673,
    "created_at": "2024-08-01T12:34:21.718226Z",
    "updated_at": "2024-08-01T12:34:21.718226Z",
    "lead_time": 1.746
  },
  {
    "text": "例如，前述的突发传输技术、同步DRAM技术和CDRAM技术等",
    "id": 4241,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "突发传输",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 19,
        "text": "同步DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5674,
    "created_at": "2024-08-01T12:34:26.991226Z",
    "updated_at": "2024-08-01T12:34:26.991226Z",
    "lead_time": 4.383
  },
  {
    "text": "当采用地址指定方式时，形成操作数或指令地址的方式，称为寻址方式",
    "id": 4242,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5675,
    "created_at": "2024-08-01T12:34:35.842301Z",
    "updated_at": "2024-08-01T12:34:35.842301Z",
    "lead_time": 8.227
  },
  {
    "text": "数码线性磁带DLTDLT是数码线性磁带的英文缩写，它是半英寸宽的磁带，比mm磁带宽，比QIC磁带宽倍",
    "id": 4243,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "数码线性磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "IC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5676,
    "created_at": "2024-08-01T12:34:37.011193Z",
    "updated_at": "2024-08-01T12:34:37.011193Z",
    "lead_time": 0.448
  },
  {
    "text": "它通常由五个以上不同的级组成，每一级都能进行程序设计",
    "id": 4244,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5677,
    "created_at": "2024-08-01T12:34:38.030068Z",
    "updated_at": "2024-08-01T12:34:38.030623Z",
    "lead_time": 0.058
  },
  {
    "text": "这个二进制代码位是存储器中最小的存储单位，称为存储位元",
    "id": 4245,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "存储位元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5678,
    "created_at": "2024-08-01T12:34:38.889499Z",
    "updated_at": "2024-08-01T12:34:38.889499Z",
    "lead_time": 0.071
  },
  {
    "text": "注意，串行传送时低位在前，高位在后",
    "id": 4246,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5679,
    "created_at": "2024-08-01T12:34:40.169087Z",
    "updated_at": "2024-08-01T12:34:40.169087Z",
    "lead_time": 0.492
  },
  {
    "text": "另一种情况是，机器周期的节拍脉冲数固定，但是各条指令周期的机器周期数不固定",
    "id": 4247,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5680,
    "created_at": "2024-08-01T12:34:45.053455Z",
    "updated_at": "2024-08-01T12:34:45.053455Z",
    "lead_time": 4.166
  },
  {
    "text": "CDRAM芯片的结构图为M位CDRAM芯片的结构框图",
    "id": 4248,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5681,
    "created_at": "2024-08-01T12:34:46.169434Z",
    "updated_at": "2024-08-01T12:34:46.169434Z",
    "lead_time": 0.427
  },
  {
    "text": "磁盘、磁带属于磁表面存储器，特点是存储容量大，位价格低，记录信息永久保存，但存取速度较慢，因此在计算机系统中作为辅助大容量存储器使用",
    "id": 4249,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 64,
        "text": "大容量存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5682,
    "created_at": "2024-08-01T12:34:47.308556Z",
    "updated_at": "2024-08-01T12:34:47.309068Z",
    "lead_time": 0.085
  },
  {
    "text": "设一个二进制整数补码有n位含位符号位xn，即x补xnxnxnxx则其补码表示的真值为由此可知，式统一表示了正负整数的补码与真值的关系",
    "id": 4250,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5683,
    "created_at": "2024-08-01T12:34:48.248524Z",
    "updated_at": "2024-08-01T12:34:48.248524Z",
    "lead_time": 0.085
  },
  {
    "text": "它们分别具有各自的地址线AA、数据线IOIO和控制线RW、CE、OE、BUSY，因而可以对存储器中任何位置上的数据进行独立的存取操作",
    "id": 4251,
    "label": [
      {
        "start": 45,
        "end": 48,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 66,
        "text": "存取操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 52,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5684,
    "created_at": "2024-08-01T12:34:49.426962Z",
    "updated_at": "2024-08-01T12:34:49.426962Z",
    "lead_time": 0.081
  },
  {
    "text": "而组相联映射方式是前两种方式的折中方案，它适度地兼顾了二者的优点又尽量避免二者的缺点，因此被普遍采用",
    "id": 4252,
    "label": [
      {
        "start": 1,
        "end": 8,
        "text": "组相联映射方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5685,
    "created_at": "2024-08-01T12:34:50.594714Z",
    "updated_at": "2024-08-01T12:34:50.594714Z",
    "lead_time": 0.321
  },
  {
    "text": "年摩尔观察到芯片上的晶体管数量每年翻一番，年这种态势减慢成每个月翻一番，这就是人们所称的摩尔定律",
    "id": 4253,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "摩尔",
        "labels": [
          "PER"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "晶体管",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "摩尔定律",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5686,
    "created_at": "2024-08-01T12:34:51.426132Z",
    "updated_at": "2024-08-01T12:34:51.426132Z",
    "lead_time": 0.102
  },
  {
    "text": "加载器将机器代码放入合适的内存位置以便处理器执行",
    "id": 4254,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "机器代码",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "加载器",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5687,
    "created_at": "2024-08-01T12:34:52.418515Z",
    "updated_at": "2024-08-01T12:34:52.418515Z",
    "lead_time": 0.07
  },
  {
    "text": "磁盘cache一次存取的数量大，数据集中，速度要求较CPU的cache低，管理工作较复杂，因此一般由硬件和软件共同完成",
    "id": 4255,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5688,
    "created_at": "2024-08-01T12:34:53.428857Z",
    "updated_at": "2024-08-01T12:34:53.428857Z",
    "lead_time": 0.25
  },
  {
    "text": "图示出了cache的原理图",
    "id": 4256,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5689,
    "created_at": "2024-08-01T12:34:54.469582Z",
    "updated_at": "2024-08-01T12:34:54.470532Z",
    "lead_time": 0.071
  },
  {
    "text": "例如，对磁盘而言，辅存地址包括磁盘机号、磁头号、磁道号和扇区号等",
    "id": 4257,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "辅存地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5690,
    "created_at": "2024-08-01T12:34:55.419342Z",
    "updated_at": "2024-08-01T12:34:55.419342Z",
    "lead_time": 0.065
  },
  {
    "text": "PCI总线是当前实用的总线，是一个高带宽且与处理器无关的标准总线，又是重要的层次总线",
    "id": 4258,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "标准总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5691,
    "created_at": "2024-08-01T12:34:56.437692Z",
    "updated_at": "2024-08-01T12:34:56.437692Z",
    "lead_time": 0.127
  },
  {
    "text": "系统中允许有多个这样的处理器模块",
    "id": 4259,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5692,
    "created_at": "2024-08-01T12:34:57.441534Z",
    "updated_at": "2024-08-01T12:34:57.441534Z",
    "lead_time": 0.06
  },
  {
    "text": "对应用程序而言，如果主存的命中率很高，虚存的访问时间就接近于主存访问时间，而虚存的大小仅仅依赖于辅存的大小",
    "id": 4260,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5693,
    "created_at": "2024-08-01T12:34:58.301212Z",
    "updated_at": "2024-08-01T12:34:58.301212Z",
    "lead_time": 0.081
  },
  {
    "text": "表列出了ALU的运算功能表，它有两种工作方式",
    "id": 4261,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5694,
    "created_at": "2024-08-01T12:34:59.531424Z",
    "updated_at": "2024-08-01T12:34:59.531424Z",
    "lead_time": 0.243
  },
  {
    "text": "但由于不同机种推出的时间不同，在结构和性能上有差异，做到所有软件都完全兼容是不可能的，只能做到“向上兼容”，即低档机上运行的软件可以在高档机上运行",
    "id": 4262,
    "label": [
      {
        "start": 30,
        "end": 32,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5695,
    "created_at": "2024-08-01T12:35:00.314633Z",
    "updated_at": "2024-08-01T12:35:00.314633Z",
    "lead_time": 0.067
  },
  {
    "text": "各种可移动硬盘的诞生，是磁盘先进技术的又一个重要进展",
    "id": 4263,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "可移动硬盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5696,
    "created_at": "2024-08-01T12:35:01.355587Z",
    "updated_at": "2024-08-01T12:35:01.355587Z",
    "lead_time": 0.177
  },
  {
    "text": "第级是操作系统级，它由操作系统程序实现",
    "id": 4264,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "系统程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5697,
    "created_at": "2024-08-01T12:35:02.292825Z",
    "updated_at": "2024-08-01T12:35:02.292825Z",
    "lead_time": 0.059
  },
  {
    "text": "该乘法器的总的乘法时间可以估算如下：令Ta为与门的传输延迟时间，Tf为全加器FA的进位传输延迟时间，假定用级“与或”逻辑来实现FA的进位链功能，那么就有TaT，TfT从图可见，最坏情况下的延迟途径，即是沿着矩阵p垂直线和最下面的一行进位及p求和",
    "id": 4265,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "与门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 68,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 117,
        "end": 118,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5698,
    "created_at": "2024-08-01T12:35:04.631167Z",
    "updated_at": "2024-08-01T12:35:04.631167Z",
    "lead_time": 1.601
  },
  {
    "text": "直接映射方式直接映射方式也是一种多对一的映射关系，但一个主存块只能拷贝到cache的一个特定行位置上去",
    "id": 4266,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "直接映射方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 41,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "直接映射方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5699,
    "created_at": "2024-08-01T12:35:06.104795Z",
    "updated_at": "2024-08-01T12:35:06.104795Z",
    "lead_time": 0.632
  },
  {
    "text": "如果块号命中，则按字地址从cache中读取一个字；如果块号未命中，则按主存地址从主存中读取这个字",
    "id": 4267,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "字地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5700,
    "created_at": "2024-08-01T12:35:08.305420Z",
    "updated_at": "2024-08-01T12:35:08.305420Z",
    "lead_time": 1.44
  },
  {
    "text": "本书重点介绍微程序控制器",
    "id": 4268,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5701,
    "created_at": "2024-08-01T12:35:09.473573Z",
    "updated_at": "2024-08-01T12:35:09.473573Z",
    "lead_time": 0.294
  },
  {
    "text": "第步，规格化与溢出检查",
    "id": 4269,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5702,
    "created_at": "2024-08-01T12:35:13.095723Z",
    "updated_at": "2024-08-01T12:35:13.095723Z",
    "lead_time": 2.892
  },
  {
    "text": "第一种方法是采用双符号位法，这称为“变形补码”，从而可使模n补码所能表示的数的范围扩大一倍",
    "id": 4270,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "变形补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "双符号位法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5703,
    "created_at": "2024-08-01T12:35:15.175858Z",
    "updated_at": "2024-08-01T12:35:15.175858Z",
    "lead_time": 1.263
  },
  {
    "text": "一般来说，操作控制器发出的各种控制信号都是时间因素时序信号和空间因素部件位置的函数",
    "id": 4271,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5704,
    "created_at": "2024-08-01T12:35:16.630863Z",
    "updated_at": "2024-08-01T12:35:16.630863Z",
    "lead_time": 0.58
  },
  {
    "text": "有的资料将CPU总线PCI总线的桥称为北桥，将PCI总线ISA总线的桥称为南桥",
    "id": 4272,
    "label": [
      {
        "start": 37,
        "end": 39,
        "text": "南桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "北桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "ISA总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5705,
    "created_at": "2024-08-01T12:35:18.394788Z",
    "updated_at": "2024-08-01T12:35:18.394788Z",
    "lead_time": 0.949
  },
  {
    "text": "总线上的任一设备要求使用总线时，通过BR线发出总线请求",
    "id": 4273,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5706,
    "created_at": "2024-08-01T12:35:20.054526Z",
    "updated_at": "2024-08-01T12:35:20.054526Z",
    "lead_time": 0.8
  },
  {
    "text": "将大部分指令安排在固定的机器周期完成，称为中央控制，对少数复杂指令乘、除、浮点运算采用另外的时序进行定时，称为局部控制",
    "id": 4274,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "中央控制",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "局部控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5707,
    "created_at": "2024-08-01T12:35:21.899488Z",
    "updated_at": "2024-08-01T12:35:21.899488Z",
    "lead_time": 0.957
  },
  {
    "text": "但这个不足随着cache容量增大而减小",
    "id": 4275,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5708,
    "created_at": "2024-08-01T12:35:35.698121Z",
    "updated_at": "2024-08-01T12:35:35.698121Z",
    "lead_time": 12.909
  },
  {
    "text": "高速差分传输",
    "id": 4276,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "高速差分传输",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5709,
    "created_at": "2024-08-01T12:35:38.108253Z",
    "updated_at": "2024-08-01T12:35:38.108253Z",
    "lead_time": 1.524
  },
  {
    "text": "在规定的记录方式下，磁带以英寸秒的速度移动",
    "id": 4277,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5710,
    "created_at": "2024-08-01T12:35:46.163659Z",
    "updated_at": "2024-08-01T12:35:46.163659Z",
    "lead_time": 7.161
  },
  {
    "text": "在这种情况下，下一条从指存取出的指令将由转移指令来规定，而不是像通常一样按顺序来取得",
    "id": 4278,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5711,
    "created_at": "2024-08-01T12:35:48.332325Z",
    "updated_at": "2024-08-01T12:35:48.332325Z",
    "lead_time": 0.945
  },
  {
    "text": "取出指令之后，CPU将检查操作码",
    "id": 4279,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5712,
    "created_at": "2024-08-01T12:35:50.229812Z",
    "updated_at": "2024-08-01T12:35:50.230324Z",
    "lead_time": 0.639
  },
  {
    "text": "存储体激活命令通过在时钟上升沿发出下列信号组合发出：CS、RAS、CAS、WE，地址线A选择存储体A",
    "id": 4280,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5713,
    "created_at": "2024-08-01T12:35:54.175886Z",
    "updated_at": "2024-08-01T12:35:54.175886Z",
    "lead_time": 2.707
  },
  {
    "text": "字形编码字形编码是用汉字的形状进行的编码",
    "id": 4281,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "字形编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "字形编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5714,
    "created_at": "2024-08-01T12:36:10.647990Z",
    "updated_at": "2024-08-01T12:36:10.647990Z",
    "lead_time": 14.891
  },
  {
    "text": "总线的电平都符合相应电平规范的定义",
    "id": 4282,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "电平规范",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5715,
    "created_at": "2024-08-01T12:36:13.213516Z",
    "updated_at": "2024-08-01T12:36:13.214503Z",
    "lead_time": 0.17
  },
  {
    "text": "段表本身也是一个段，可以存在辅存中，但一般驻留在主存中",
    "id": 4283,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5716,
    "created_at": "2024-08-01T12:36:27.822065Z",
    "updated_at": "2024-08-01T12:36:27.822065Z",
    "lead_time": 11.474
  },
  {
    "text": "另一方面，人们采用符号语言或高级语言编写程序，虽然对人提供了方便，但是机器却不懂这些语言",
    "id": 4284,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5717,
    "created_at": "2024-08-01T12:36:28.892974Z",
    "updated_at": "2024-08-01T12:36:28.892974Z",
    "lead_time": 0.076
  },
  {
    "text": "例如，通过通用IO引脚读取RYBY信号的电平可以获知闪存是处于“准备好”状态还是“忙”状态",
    "id": 4285,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5718,
    "created_at": "2024-08-01T12:36:30.862747Z",
    "updated_at": "2024-08-01T12:36:30.863745Z",
    "lead_time": 0.089
  },
  {
    "text": "打印设备的分类打印设备种类繁多，有多种分类方法",
    "id": 4286,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "打印设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "打印设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5719,
    "created_at": "2024-08-01T12:36:38.961675Z",
    "updated_at": "2024-08-01T12:36:38.961675Z",
    "lead_time": 6.631
  },
  {
    "text": "就近舍入其实质就是通常所说的“四舍五入”",
    "id": 4287,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "四舍五入",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5720,
    "created_at": "2024-08-01T12:36:40.129144Z",
    "updated_at": "2024-08-01T12:36:40.129144Z",
    "lead_time": 0.063
  },
  {
    "text": "其中：I位指示页大小I为MB页大小；I为KB大小",
    "id": 4288,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5721,
    "created_at": "2024-08-01T12:36:41.149795Z",
    "updated_at": "2024-08-01T12:36:41.149795Z",
    "lead_time": 0.089
  },
  {
    "text": "序标之后即为本扇区所记录的数据",
    "id": 4289,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5722,
    "created_at": "2024-08-01T12:36:42.378979Z",
    "updated_at": "2024-08-01T12:36:42.378979Z",
    "lead_time": 0.074
  },
  {
    "text": "系统中允许有多条PCI总线，它们可以使用HOST桥与HOST总线相连，也可使用PCIPCI桥与已和HOST总线相连的PCI总线相连，从而得以扩充整个系统的PCI总线负载能力",
    "id": 4290,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "HOST总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "HOST桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "PCI桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 55,
        "text": "HOST总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 63,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 77,
        "end": 82,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5723,
    "created_at": "2024-08-01T12:36:43.406164Z",
    "updated_at": "2024-08-01T12:36:43.406164Z",
    "lead_time": 0.101
  },
  {
    "text": "数据转换系统的作用是控制数据的写入和读出，包括磁头、磁头选择电路、读写电路以及索引、区标电路等",
    "id": 4291,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "磁头选择电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "读写电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "索引",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5724,
    "created_at": "2024-08-01T12:36:44.662957Z",
    "updated_at": "2024-08-01T12:36:44.662957Z",
    "lead_time": 0.103
  },
  {
    "text": "形式地址A，也称偏移量，它是指令字结构中给定的地址量",
    "id": 4292,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "地址量",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5725,
    "created_at": "2024-08-01T12:36:45.617174Z",
    "updated_at": "2024-08-01T12:36:45.617174Z",
    "lead_time": 0.07
  },
  {
    "text": "数据总线宽度为位，地址总线宽度为位",
    "id": 4293,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5726,
    "created_at": "2024-08-01T12:36:46.657627Z",
    "updated_at": "2024-08-01T12:36:46.657627Z",
    "lead_time": 0.08
  },
  {
    "text": "每个设备接口都有一个设备地址判别电路，当地址线上的计数值与请求总线的设备地址相一致时，该设备置“”BS线，获得了总线使用权，此时中止计数查询",
    "id": 4294,
    "label": [
      {
        "start": 12,
        "end": 18,
        "text": "地址判别电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "请求总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "设备接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 61,
        "text": "总线使用权",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 66,
        "end": 70,
        "text": "计数查询",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5727,
    "created_at": "2024-08-01T12:36:47.966893Z",
    "updated_at": "2024-08-01T12:36:47.966893Z",
    "lead_time": 0.088
  },
  {
    "text": "为了让芯片的用户能更新ROM中存储的内容，可以使用可编程ROMPROM",
    "id": 4295,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 31,
        "text": "可编程ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "PROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5728,
    "created_at": "2024-08-01T12:36:51.462739Z",
    "updated_at": "2024-08-01T12:36:51.462739Z",
    "lead_time": 0.096
  },
  {
    "text": "与广播相反的操作称为广集，它将选定的多个从方数据在总线上完成AND或OR操作，用以检测多个中断源",
    "id": 4296,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "广集",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "广播",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "AND",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5729,
    "created_at": "2024-08-01T12:36:52.801050Z",
    "updated_at": "2024-08-01T12:36:52.801050Z",
    "lead_time": 0.079
  },
  {
    "text": "DRAM有读周期、写周期和刷新周期",
    "id": 4297,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5730,
    "created_at": "2024-08-01T12:36:53.769054Z",
    "updated_at": "2024-08-01T12:36:53.769054Z",
    "lead_time": 0.056
  },
  {
    "text": "还有一个IDSEL初始化设备选择信号，用以配置读写期间的芯片选择",
    "id": 4298,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5731,
    "created_at": "2024-08-01T12:36:55.075063Z",
    "updated_at": "2024-08-01T12:36:55.075063Z",
    "lead_time": 0.075
  },
  {
    "text": "时序信号产生器的功能是用逻辑电路来实现这些时序",
    "id": 4299,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "时序信号产生器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5732,
    "created_at": "2024-08-01T12:36:56.229394Z",
    "updated_at": "2024-08-01T12:36:56.229394Z",
    "lead_time": 0.066
  },
  {
    "text": "地址转移逻辑就承担自动完成修改微地址的任务",
    "id": 4300,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "地址转移",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5733,
    "created_at": "2024-08-01T12:36:57.506243Z",
    "updated_at": "2024-08-01T12:36:57.506243Z",
    "lead_time": 0.08
  },
  {
    "text": "下面是ARM指令系统的一种指令格式：各字段的含义如下：opcode指明指令的基本操作，称为操作码",
    "id": 4301,
    "label": [
      {
        "start": 45,
        "end": 48,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5734,
    "created_at": "2024-08-01T12:36:58.571956Z",
    "updated_at": "2024-08-01T12:36:58.571956Z",
    "lead_time": 0.11
  },
  {
    "text": "当磁头对载磁体作相对运动时，由于磁头铁芯中磁通的变化，使读出线圈中感应出相应的电动势e，其值为ddekt负号表示感应电势的方向与磁通的变化方向相反",
    "id": 4302,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5735,
    "created_at": "2024-08-01T12:37:00.261312Z",
    "updated_at": "2024-08-01T12:37:00.261312Z",
    "lead_time": 0.579
  },
  {
    "text": "在一条水平型微指令中，设置有控制信息传送通路门以及进行所有操作的微命令，因此在进行微程序设计时，可以同时定义比较多的并行操作的微命令，来控制尽可能多的并行信息传送，从而使水平型微指令具有效率高及灵活性强的优点",
    "id": 4303,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 85,
        "end": 91,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 77,
        "end": 81,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5736,
    "created_at": "2024-08-01T12:37:02.867949Z",
    "updated_at": "2024-08-01T12:37:02.867949Z",
    "lead_time": 1.456
  },
  {
    "text": "从空间上来说，如果取出的代码是指令，那么一定送往指令寄存器，如果取出的代码是数据，那么一定送往运算器",
    "id": 4304,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5737,
    "created_at": "2024-08-01T12:37:06.056369Z",
    "updated_at": "2024-08-01T12:37:06.056369Z",
    "lead_time": 2.222
  },
  {
    "text": "每个记录块由头部空白段、序标段、数据段、校验字段及尾部空白段组成",
    "id": 4305,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "记录块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5738,
    "created_at": "2024-08-01T12:37:07.207205Z",
    "updated_at": "2024-08-01T12:37:07.207205Z",
    "lead_time": 0.078
  },
  {
    "text": "单总线结构在许多单处理器的计算机中，使用单一的系统总线来连接CPU、主存和IO设备，称为单总线结构，如图所示",
    "id": 4306,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "单处理器",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5739,
    "created_at": "2024-08-01T12:37:08.189364Z",
    "updated_at": "2024-08-01T12:37:08.189364Z",
    "lead_time": 0.089
  },
  {
    "text": "本章小结外围设备大体分为输入设备、输出设备、外存设备、数据通信设备、过程控制设备五大类",
    "id": 4307,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "外存设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "数据通信设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "过程控制设备",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5740,
    "created_at": "2024-08-01T12:37:09.391421Z",
    "updated_at": "2024-08-01T12:37:09.391421Z",
    "lead_time": 0.096
  },
  {
    "text": "总之，计算机的协调动作需要时间标志，而时间标志则是用时序信号来体现的",
    "id": 4308,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "时间标志",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "时间标志",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5741,
    "created_at": "2024-08-01T12:37:10.632271Z",
    "updated_at": "2024-08-01T12:37:10.632271Z",
    "lead_time": 0.088
  },
  {
    "text": "在选择计算机的数的表示方式时，需要考虑以下几个因素：要表示的数的类型小数、整数、实数和复数；可能的数值范围；数值精确度；数据存储和处理所需要的硬件代价",
    "id": 4309,
    "label": [
      {
        "start": 71,
        "end": 73,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5742,
    "created_at": "2024-08-01T12:37:11.826387Z",
    "updated_at": "2024-08-01T12:37:11.826387Z",
    "lead_time": 0.096
  },
  {
    "text": "每个功能单元都有自己的缓冲器，称为保留站，它用于暂存操作数和操作指令",
    "id": 4310,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "保留站",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "功能单元",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5743,
    "created_at": "2024-08-01T12:37:12.950292Z",
    "updated_at": "2024-08-01T12:37:12.950292Z",
    "lead_time": 0.092
  },
  {
    "text": "但有时会遇到特殊情况：机器执行到某条指令时，出现了几种不同结果，这时机器必须执行一条转移指令，根据不同结果进行转移，从而改变程序原来执行的顺序",
    "id": 4311,
    "label": [
      {
        "start": 42,
        "end": 46,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5744,
    "created_at": "2024-08-01T12:37:14.235195Z",
    "updated_at": "2024-08-01T12:37:14.235195Z",
    "lead_time": 0.099
  },
  {
    "text": "早期的计算机基于冯诺伊曼的体系结构，采用的是串行处理",
    "id": 4312,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "冯诺伊曼",
        "labels": [
          "PER"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "串行处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5745,
    "created_at": "2024-08-01T12:37:15.431294Z",
    "updated_at": "2024-08-01T12:37:15.431680Z",
    "lead_time": 0.07
  },
  {
    "text": "双向数据线有条，即IOIO",
    "id": 4313,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "双向数据线",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5746,
    "created_at": "2024-08-01T12:37:21.632099Z",
    "updated_at": "2024-08-01T12:37:21.632099Z",
    "lead_time": 5.092
  },
  {
    "text": "模式寄存器在SDRAM加电后必须先对模式寄存器进行设置，控制SDRAM工作在不同的操作模式下",
    "id": 4314,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "模式寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "模式寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5747,
    "created_at": "2024-08-01T12:37:23.040014Z",
    "updated_at": "2024-08-01T12:37:23.040014Z",
    "lead_time": 0.383
  },
  {
    "text": "这是因为同步方式对任何两个功能模块的通信都给予同样的时间安排",
    "id": 4315,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5748,
    "created_at": "2024-08-01T12:37:25.255456Z",
    "updated_at": "2024-08-01T12:37:25.255456Z",
    "lead_time": 1.337
  },
  {
    "text": "例如，DDR技术采用n预取结构，将数据总线的时钟频率提升至内部传输频率的倍，从而使外部总线数据率比DDRSDRAM提升一倍",
    "id": 4316,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "DDR技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "预取结构",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "时钟频率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 52,
        "end": 57,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "DDR",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "外部总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5749,
    "created_at": "2024-08-01T12:37:26.676632Z",
    "updated_at": "2024-08-01T12:37:26.676632Z",
    "lead_time": 0.526
  },
  {
    "text": "例如，当用手动的键盘输入时，每个字符输入的间隔可达数秒钟",
    "id": 4317,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5750,
    "created_at": "2024-08-01T12:37:28.837352Z",
    "updated_at": "2024-08-01T12:37:28.837352Z",
    "lead_time": 1.127
  },
  {
    "text": "比较阶码大小并完成对阶两浮点数进行加减，首先要看两数的阶码是否相同，即小数点位置是否对齐",
    "id": 4318,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5751,
    "created_at": "2024-08-01T12:37:30.165598Z",
    "updated_at": "2024-08-01T12:37:30.165598Z",
    "lead_time": 0.327
  },
  {
    "text": "对后一种情况，包含该地址的页必须被调入主存，并将其所在的块装入cache中，修改相应的页表和TLB表项",
    "id": 4319,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5752,
    "created_at": "2024-08-01T12:37:35.374382Z",
    "updated_at": "2024-08-01T12:37:35.374382Z",
    "lead_time": 4.187
  },
  {
    "text": "所有的用户数据和系统数据都被看成是逻辑条带，存储在一个逻辑磁盘上",
    "id": 4320,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "逻辑磁盘",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5753,
    "created_at": "2024-08-01T12:37:36.404837Z",
    "updated_at": "2024-08-01T12:37:36.404837Z",
    "lead_time": 0.08
  },
  {
    "text": "由于节拍电位是用微指令周期来体现的，因而时序信号比较简单，时序计数器及其译码电路只需产生若干节拍脉冲信号即可",
    "id": 4321,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "时序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "译码电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5754,
    "created_at": "2024-08-01T12:37:37.486157Z",
    "updated_at": "2024-08-01T12:37:37.486157Z",
    "lead_time": 0.122
  },
  {
    "text": "逻辑表达式控制参数S、S、S、S分别控制输入Ai和Bi，产生Yi和Xi的函数",
    "id": 4322,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5755,
    "created_at": "2024-08-01T12:37:42.195287Z",
    "updated_at": "2024-08-01T12:37:42.195287Z",
    "lead_time": 3.543
  },
  {
    "text": "这种处理方法被称为舍入处理",
    "id": 4323,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5756,
    "created_at": "2024-08-01T12:37:43.176271Z",
    "updated_at": "2024-08-01T12:37:43.176271Z",
    "lead_time": 0.056
  },
  {
    "text": "总线控制逻辑在T的前沿检测READY引脚是否有效：如果READY有效，则在T时钟周期后进入T时钟周期；如果READY无效，则在T和T之间插入一个等待周期Tw，并在Tw前沿再次检测READY引脚是否有效，直到READY有效后才进入T时钟周期",
    "id": 4324,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "总线控制逻辑",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 115,
        "end": 119,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 94,
        "end": 96,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5757,
    "created_at": "2024-08-01T12:37:44.520290Z",
    "updated_at": "2024-08-01T12:37:44.520290Z",
    "lead_time": 0.065
  },
  {
    "text": "为了克服这一缺陷，一些高级语言如C，FORTRAN等提供了与汇编语言之间的调用接口",
    "id": 4325,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5758,
    "created_at": "2024-08-01T12:37:45.452772Z",
    "updated_at": "2024-08-01T12:37:45.452772Z",
    "lead_time": 0.061
  },
  {
    "text": "线性地址空间的最大长度为B",
    "id": 4326,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "线性地址空间",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5759,
    "created_at": "2024-08-01T12:37:46.515389Z",
    "updated_at": "2024-08-01T12:37:46.515389Z",
    "lead_time": 0.062
  },
  {
    "text": "这里称“宿主”总线，也许更全面，因为HOST总线不仅连接主存，还可以连接多个CPU",
    "id": 4327,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 24,
        "text": "HOST总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5760,
    "created_at": "2024-08-01T12:37:47.305113Z",
    "updated_at": "2024-08-01T12:37:47.305113Z",
    "lead_time": 0.046
  },
  {
    "text": "每取出一条指令，控制器中的指令计数器就加，从而为取下一条指令做好准备，这也就是指令在存储器中顺序存放的原因",
    "id": 4328,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "指令计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5761,
    "created_at": "2024-08-01T12:37:48.263996Z",
    "updated_at": "2024-08-01T12:37:48.263996Z",
    "lead_time": 0.093
  },
  {
    "text": "显然，采用这种用一系列的级来组成计算机的概念和技术，对了解计算机如何组成提供了一种好的结构和体制",
    "id": 4329,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5762,
    "created_at": "2024-08-01T12:37:49.509221Z",
    "updated_at": "2024-08-01T12:37:49.509221Z",
    "lead_time": 0.061
  },
  {
    "text": "图a表示MCCPU超标量流水线正常运行情况",
    "id": 4330,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "超标量流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5763,
    "created_at": "2024-08-01T12:37:50.404015Z",
    "updated_at": "2024-08-01T12:37:50.404015Z",
    "lead_time": 0.055
  },
  {
    "text": "顾名思义，磁光盘MO存储设备是采用磁场技术和激光技术相结合的产物",
    "id": 4331,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "磁光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5764,
    "created_at": "2024-08-01T12:37:51.668193Z",
    "updated_at": "2024-08-01T12:37:51.668193Z",
    "lead_time": 0.04
  },
  {
    "text": "这种体制最明显的一个例子，就是当实现寄存器之间的数据传送时，数据加在触发器的电位输入端，而打入数据的控制信号加在触发器的时钟输入端",
    "id": 4332,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5765,
    "created_at": "2024-08-01T12:37:52.659162Z",
    "updated_at": "2024-08-01T12:37:52.659162Z",
    "lead_time": 0.077
  },
  {
    "text": "系统总线是构成计算机系统的骨架，是多个系统部件之间进行数据传送的公共通路",
    "id": 4333,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5766,
    "created_at": "2024-08-01T12:37:53.844512Z",
    "updated_at": "2024-08-01T12:37:53.844512Z",
    "lead_time": 0.073
  },
  {
    "text": "实地址模式存储器模型realaddressmodememorymodel是为保持与早期的处理机兼容的存储器模式",
    "id": 4334,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "实地址模式存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5767,
    "created_at": "2024-08-01T12:37:54.724401Z",
    "updated_at": "2024-08-01T12:37:54.724401Z",
    "lead_time": 0.067
  },
  {
    "text": "如果用D表示操作数，那么直接寻址的表达式为DA",
    "id": 4335,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5768,
    "created_at": "2024-08-01T12:37:55.604213Z",
    "updated_at": "2024-08-01T12:37:55.604213Z",
    "lead_time": 0.05
  },
  {
    "text": "例如，对引起一次主存读操作的控制信号C来说，当节拍电位M，取指令时被激活；而节拍电位M，三条指令LAD，ADD，AND取操作数时也被激活，此时指令译码器的LAD，ADD，AND输出均为，因此C的逻辑表达式可由下式确定：CMMLADADDAND一般来说，还要考虑节拍脉冲和状态条件的约束，所以每一控制信号Cn可以由以下形式的布尔代数表达式来确定：与微程序控制相比，硬布线控制的速度较快",
    "id": 4336,
    "label": [
      {
        "start": 60,
        "end": 63,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 173,
        "end": 176,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 161,
        "end": 165,
        "text": "布尔代数",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 97,
        "end": 102,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 181,
        "end": 186,
        "text": "硬布线控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 130,
        "end": 134,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 71,
        "end": 76,
        "text": "指令译码器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 147,
        "end": 151,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 85,
        "end": 88,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 118,
        "end": 121,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 77,
        "end": 80,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 112,
        "end": 115,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 81,
        "end": 84,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 115,
        "end": 118,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5769,
    "created_at": "2024-08-01T12:37:57.317102Z",
    "updated_at": "2024-08-01T12:38:13.968343Z",
    "lead_time": 13.433
  },
  {
    "text": "显然，此时指令中给出的操作数地址不是内存的地址单元号，而是通用寄存器的编号，EAR",
    "id": 4337,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "地址单元号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5770,
    "created_at": "2024-08-01T12:38:16.501619Z",
    "updated_at": "2024-08-01T12:38:16.501619Z",
    "lead_time": 0.678
  },
  {
    "text": "根据外设工作速度的不同，IO接口与外设间的数据传送方式有以下三种",
    "id": 4338,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5771,
    "created_at": "2024-08-01T12:38:17.630663Z",
    "updated_at": "2024-08-01T12:38:17.630663Z",
    "lead_time": 0.334
  },
  {
    "text": "InfiniBand标准InfiniBand通信协议栈总线仲裁是总线系统的核心问题之一",
    "id": 4339,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "通信协议栈",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5772,
    "created_at": "2024-08-01T12:38:19.311414Z",
    "updated_at": "2024-08-01T12:38:19.311414Z",
    "lead_time": 1.002
  },
  {
    "text": "图像显示器的灰度级一般在级以上",
    "id": 4340,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "图像显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5773,
    "created_at": "2024-08-01T12:38:23.057368Z",
    "updated_at": "2024-08-01T12:38:23.057368Z",
    "lead_time": 3.08
  },
  {
    "text": "乘积符号的运算法则是：同号相乘为正，异号相乘为负",
    "id": 4341,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5774,
    "created_at": "2024-08-01T12:38:25.936702Z",
    "updated_at": "2024-08-01T12:38:25.936702Z",
    "lead_time": 2.13
  },
  {
    "text": "一个块由若干字组成，是定长的",
    "id": 4342,
    "label": [
      {
        "start": 6,
        "end": 7,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5775,
    "created_at": "2024-08-01T12:38:27.207852Z",
    "updated_at": "2024-08-01T12:38:27.207852Z",
    "lead_time": 0.647
  },
  {
    "text": "例如，可以表示成、、等多种形式",
    "id": 4343,
    "annotator": 1,
    "annotation_id": 5776,
    "created_at": "2024-08-01T12:38:28.304642Z",
    "updated_at": "2024-08-01T12:38:28.304642Z",
    "lead_time": 0.38
  },
  {
    "text": "在顺序执行微指令时，后继微地址由现行微地址加上一个增量来产生；在非顺序执行微指令时，必须通过转移方式，使现行微指令执行后，转去执行指定后继微地址的下一条微指令",
    "id": 4344,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 76,
        "end": 79,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5777,
    "created_at": "2024-08-01T12:38:30.631804Z",
    "updated_at": "2024-08-01T12:38:30.631804Z",
    "lead_time": 1.61
  },
  {
    "text": "VESA保留了这种方式，将VGA类显示器及适配器所能支持的新的显示方式进行定义，并为新的显示方式指定了位的方式码",
    "id": 4345,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 51,
        "end": 52,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5778,
    "created_at": "2024-08-01T12:38:31.773615Z",
    "updated_at": "2024-08-01T12:38:31.773615Z",
    "lead_time": 0.299
  },
  {
    "text": "虽然庞大昂贵的计算机仍然存在，但计算机已经走向了个人电脑时代",
    "id": 4346,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5779,
    "created_at": "2024-08-01T12:38:32.798737Z",
    "updated_at": "2024-08-01T12:38:32.798737Z",
    "lead_time": 0.189
  },
  {
    "text": "在T时钟的上升沿，控制器发出存储体A的激活命令",
    "id": 4347,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5780,
    "created_at": "2024-08-01T12:38:34.117565Z",
    "updated_at": "2024-08-01T12:38:34.117565Z",
    "lead_time": 0.582
  },
  {
    "text": "个人计算机中广泛使用微软公司的“视窗”操作系统",
    "id": 4348,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "微软公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5781,
    "created_at": "2024-08-01T12:38:36.690095Z",
    "updated_at": "2024-08-01T12:38:36.690095Z",
    "lead_time": 1.823
  },
  {
    "text": "目前的CPU包含了存储器，因此称为中央处理机",
    "id": 4349,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "中央处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5782,
    "created_at": "2024-08-01T12:38:43.271570Z",
    "updated_at": "2024-08-01T12:38:43.271570Z",
    "lead_time": 5.8
  },
  {
    "text": "CDRW光盘CDRW表示可重复写光盘，用于反复读写数据",
    "id": 4350,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "CDRW光盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5783,
    "created_at": "2024-08-01T12:38:53.971831Z",
    "updated_at": "2024-08-01T12:38:53.971831Z",
    "lead_time": 9.899
  },
  {
    "text": "所需芯片数为：d设计要求的存储器容量已知芯片存储容量",
    "id": 4351,
    "label": [
      {
        "start": 20,
        "end": 26,
        "text": "芯片存储容量",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5784,
    "created_at": "2024-08-01T12:39:00.169700Z",
    "updated_at": "2024-08-01T12:39:00.169700Z",
    "lead_time": 5.569
  },
  {
    "text": "主存块存放到哪个组是固定的，取决于主存块在主存区中是第几块",
    "id": 4352,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5785,
    "created_at": "2024-08-01T12:39:06.967231Z",
    "updated_at": "2024-08-01T12:39:06.967231Z",
    "lead_time": 6.106
  },
  {
    "text": "常用的打印设备有激光打印机、彩色喷墨打印机等，它们都属于硬拷贝输出设备",
    "id": 4353,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "激光打印机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 28,
        "end": 35,
        "text": "硬拷贝输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "打印设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 14,
        "end": 21,
        "text": "彩色喷墨打印机",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5786,
    "created_at": "2024-08-01T12:39:07.934977Z",
    "updated_at": "2024-08-01T12:39:07.934977Z",
    "lead_time": 0.306
  },
  {
    "text": "但顺序方式的缺点是各模块一个接一个串行工作，因此存储器的带宽受到了限制",
    "id": 4354,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5787,
    "created_at": "2024-08-01T12:39:08.638300Z",
    "updated_at": "2024-08-01T12:39:08.638300Z",
    "lead_time": 0.049
  },
  {
    "text": "它本身就是一个具有并行处理功能的专用计算机，不仅能完成显示操作，同时由于子系统内部有容量很大的存储器和高速处理器",
    "id": 4355,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "专用计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 56,
        "text": "高速处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5788,
    "created_at": "2024-08-01T12:39:09.821266Z",
    "updated_at": "2024-08-01T12:39:09.821266Z",
    "lead_time": 0.071
  },
  {
    "text": "对一个cache行的多次写命中都在cache中快速完成，只是需要替换时才写回速度较慢的主存，减少了访问主存的次数",
    "id": 4356,
    "label": [
      {
        "start": 43,
        "end": 45,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5789,
    "created_at": "2024-08-01T12:39:10.746670Z",
    "updated_at": "2024-08-01T12:39:10.746670Z",
    "lead_time": 0.058
  },
  {
    "text": "毫无疑问，随着科学技术的发展，提供人机联系的外围设备将会变成计算机真正的“五官四肢”",
    "id": 4357,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "科学技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5790,
    "created_at": "2024-08-01T12:39:11.834235Z",
    "updated_at": "2024-08-01T12:39:11.834235Z",
    "lead_time": 0.072
  },
  {
    "text": "击打式设备的成本低，缺点是噪声大，速度慢",
    "id": 4358,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "噪声",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5791,
    "created_at": "2024-08-01T12:39:12.768030Z",
    "updated_at": "2024-08-01T12:39:12.768030Z",
    "lead_time": 0.045
  },
  {
    "text": "为了说明原理，设存储器容量为字，分成M、M、M、M四个模块，每个模块存储个字",
    "id": 4359,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5792,
    "created_at": "2024-08-01T12:39:13.631364Z",
    "updated_at": "2024-08-01T12:39:13.631364Z",
    "lead_time": 0.06
  },
  {
    "text": "这样就可用访问内存的指令读、写指令去访问IO设备接口内的某个寄存器，因而不需要专门的IO指令组",
    "id": 4360,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "IO指令组",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 26,
        "text": "IO设备接口",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5793,
    "created_at": "2024-08-01T12:39:14.650938Z",
    "updated_at": "2024-08-01T12:39:14.650938Z",
    "lead_time": 0.068
  },
  {
    "text": "图对比了异步DRAM和SDRAM的读操作时序",
    "id": 4361,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "异步DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5794,
    "created_at": "2024-08-01T12:39:15.660072Z",
    "updated_at": "2024-08-01T12:39:15.660072Z",
    "lead_time": 0.061
  },
  {
    "text": "假设给一个算盘、一张带横格的纸和一支笔，要求计算yaxbc这样一个题目",
    "id": 4362,
    "annotator": 1,
    "annotation_id": 5795,
    "created_at": "2024-08-01T12:39:16.703186Z",
    "updated_at": "2024-08-01T12:39:16.703186Z",
    "lead_time": 0.038
  },
  {
    "text": "HOST总线是连接“北桥”芯片与CPU之间的信息通路，它是一个位数据线和位地址线的同步总线",
    "id": 4363,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "北桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "HOST总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "信息通路",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5796,
    "created_at": "2024-08-01T12:39:17.648392Z",
    "updated_at": "2024-08-01T12:39:17.648392Z",
    "lead_time": 0.091
  },
  {
    "text": "M是尾数，放在低位部分，占用位，小数点位置放在尾数域最左最高有效位的右边",
    "id": 4364,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5797,
    "created_at": "2024-08-01T12:39:30.466292Z",
    "updated_at": "2024-08-01T12:39:30.466292Z",
    "lead_time": 11.75
  },
  {
    "text": "它可以预先固定，如BR优先级最高，BR次之BRn最低；也可以通过程序来改变优先次序；还可以用屏蔽禁止某个请求的办法，不响应来自无效设备的请求",
    "id": 4365,
    "label": [
      {
        "start": 46,
        "end": 48,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5798,
    "created_at": "2024-08-01T12:40:00.250510Z",
    "updated_at": "2024-08-01T12:40:00.250510Z",
    "lead_time": 29.002
  },
  {
    "text": "其他指令除以上各类指令外，还有状态寄存器置位、复位指令、测试指令、暂停指令、空操作指令，以及其他一些系统控制用的特殊指令",
    "id": 4366,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "状态寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "测试指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "暂停指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "空操作指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5799,
    "created_at": "2024-08-01T12:40:23.055003Z",
    "updated_at": "2024-08-01T12:40:23.055003Z",
    "lead_time": 22.027
  },
  {
    "text": "偏移量寻址：也称直接寻址，偏移量就是操作数距段起点的位移",
    "id": 4367,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "偏移量寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5800,
    "created_at": "2024-08-01T12:40:31.178087Z",
    "updated_at": "2024-08-01T12:40:31.178087Z",
    "lead_time": 2.522
  },
  {
    "text": "块传送操作只需给出块的起始地址，然后对固定块长度的数据一个接一个地读出或写入",
    "id": 4368,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "块传送操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "起始地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5801,
    "created_at": "2024-08-01T12:40:33.118655Z",
    "updated_at": "2024-08-01T12:40:33.118655Z",
    "lead_time": 0.987
  },
  {
    "text": "应当指出，执行“JMP”指令时，我们此处所给的五条指令组成的程序进入了死循环，除非人为停机，否则这个程序将无休止地运行下去",
    "id": 4369,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "死循环",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "JMP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5802,
    "created_at": "2024-08-01T12:40:34.376369Z",
    "updated_at": "2024-08-01T12:40:34.376369Z",
    "lead_time": 0.083
  },
  {
    "text": "非格式化容量是磁记录表面可以利用的磁化单元总数",
    "id": 4370,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "磁记录",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "格式化容量",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5803,
    "created_at": "2024-08-01T12:40:35.741976Z",
    "updated_at": "2024-08-01T12:40:35.741976Z",
    "lead_time": 0.353
  },
  {
    "text": "当部分余数不改变它的符号时，即产生商位“”，下一行的操作应该是减法",
    "id": 4371,
    "label": [
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5804,
    "created_at": "2024-08-01T12:40:36.870419Z",
    "updated_at": "2024-08-01T12:40:36.870419Z",
    "lead_time": 0.044
  },
  {
    "text": "如同英汉之间对话需要“翻译”一样，汇编器的作用相当于一个“翻译员”",
    "id": 4372,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "汇编器",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5805,
    "created_at": "2024-08-01T12:40:37.693403Z",
    "updated_at": "2024-08-01T12:40:37.693403Z",
    "lead_time": 0.049
  },
  {
    "text": "CISC的指令系统一般多达二三百条，如VAX计算机有条指令，种寻址方式",
    "id": 4373,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "VAX计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5806,
    "created_at": "2024-08-01T12:40:38.846169Z",
    "updated_at": "2024-08-01T12:40:38.846169Z",
    "lead_time": 0.072
  },
  {
    "text": "掩模ROM一般用于存储广泛使用的具有标准功能的程序或数据，或用户定做的具有特殊功能的程序或数据，当然这些程序或数据均转换成二进制码",
    "id": 4374,
    "label": [
      {
        "start": 61,
        "end": 64,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "掩模ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5807,
    "created_at": "2024-08-01T12:40:41.143258Z",
    "updated_at": "2024-08-01T12:40:41.143258Z",
    "lead_time": 1.24
  },
  {
    "text": "为此，顺序执行的微指令序列就必须安排在控制存储器的连续单元中",
    "id": 4375,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "微指令序列",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5808,
    "created_at": "2024-08-01T12:40:42.248354Z",
    "updated_at": "2024-08-01T12:40:42.248354Z",
    "lead_time": 0.125
  },
  {
    "text": "尽管各种计算机的运算器结构可能有这样或那样的不同，但是它们的最基本的结构中必须有算术逻辑运算单元、数据缓冲寄存器、通用寄存器、多路转换器和数据总线等逻辑构件",
    "id": 4376,
    "label": [
      {
        "start": 40,
        "end": 48,
        "text": "算术逻辑运算单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 56,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 62,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 69,
        "end": 73,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "转换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5809,
    "created_at": "2024-08-01T12:40:43.786115Z",
    "updated_at": "2024-08-01T12:40:43.786115Z",
    "lead_time": 0.227
  },
  {
    "text": "MOV、ADD和JMP指令只需一个节拍M即可完成",
    "id": 4377,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "JMP指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "MOV",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5810,
    "created_at": "2024-08-01T12:40:45.240990Z",
    "updated_at": "2024-08-01T12:40:45.240990Z",
    "lead_time": 0.301
  },
  {
    "text": "cache的功能cache是一种高速缓冲存储器，是为了解决CPU和主存之间速度不匹配而采用的一项重要技术",
    "id": 4378,
    "label": [
      {
        "start": 16,
        "end": 23,
        "text": "高速缓冲存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5811,
    "created_at": "2024-08-01T12:40:48.860267Z",
    "updated_at": "2024-08-01T12:40:48.860267Z",
    "lead_time": 2.49
  },
  {
    "text": "时间控制对各种操作实施时间上的定时，称为时间控制",
    "id": 4379,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "时间控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "时间控制",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5812,
    "created_at": "2024-08-01T12:41:18.118888Z",
    "updated_at": "2024-08-01T12:41:18.118888Z",
    "lead_time": 28.36
  },
  {
    "text": "段页式虚拟存储器段页式虚拟存储器是段式虚拟存储器和页式虚拟存储器的结合",
    "id": 4380,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "段页式虚拟存储器",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 23,
        "text": "段式虚拟存储",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 16,
        "text": "段页式虚拟存储器",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 32,
        "text": "页式虚拟存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5813,
    "created_at": "2024-08-01T12:41:38.241121Z",
    "updated_at": "2024-08-01T12:41:38.241121Z",
    "lead_time": 19.454
  },
  {
    "text": "目前，几乎所有的高性能计算机都采用了指令流水线",
    "id": 4381,
    "label": [
      {
        "start": 8,
        "end": 14,
        "text": "高性能计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5814,
    "created_at": "2024-08-01T12:41:40.136660Z",
    "updated_at": "2024-08-01T12:41:40.136660Z",
    "lead_time": 0.841
  },
  {
    "text": "图示出了用正逻辑表示的位算术逻辑运算单元ALU的逻辑电路图，它是根据上面的原始推导公式用TTL电路实现的",
    "id": 4382,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 20,
        "text": "算术逻辑运算单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "TTL",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5815,
    "created_at": "2024-08-01T12:41:42.555761Z",
    "updated_at": "2024-08-01T12:41:42.555761Z",
    "lead_time": 1.402
  },
  {
    "text": "假设指令周期包含四个子过程：取指令IF、指令译码ID、执行运算EX、结果写回WB，每个子过程称为过程段Si，这样，一个流水线由一系列串联的过程段组成",
    "id": 4383,
    "label": [
      {
        "start": 59,
        "end": 62,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "指令译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5816,
    "created_at": "2024-08-01T12:41:45.431968Z",
    "updated_at": "2024-08-01T12:41:45.431968Z",
    "lead_time": 1.793
  },
  {
    "text": "如果判知两个操作数x或y中有一个数为，即可得知运算结果而没有必要再进行后续的一系列操作，以节省运算时间",
    "id": 4384,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5817,
    "created_at": "2024-08-01T12:41:47.118825Z",
    "updated_at": "2024-08-01T12:41:47.118825Z",
    "lead_time": 0.693
  },
  {
    "text": "例如，当利用计算机做过程控制时，我们可以利用逻辑运算对一组输入的开关量做出判断，以确定哪些开关是闭合的，哪些开关是断开的",
    "id": 4385,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5818,
    "created_at": "2024-08-01T12:41:48.223740Z",
    "updated_at": "2024-08-01T12:41:48.223740Z",
    "lead_time": 0.179
  },
  {
    "text": "图形显示图形显示是指用计算机手段表示现实世界的各种事物，并形象逼真地加以显示",
    "id": 4386,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5819,
    "created_at": "2024-08-01T12:41:49.618675Z",
    "updated_at": "2024-08-01T12:41:49.618675Z",
    "lead_time": 0.089
  },
  {
    "text": "为了节省页表本身占用的主存空间，一些系统把页表安排存储在虚存空间，因而页表本身也要进行分页",
    "id": 4387,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "虚存空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5820,
    "created_at": "2024-08-01T12:41:50.813838Z",
    "updated_at": "2024-08-01T12:41:50.813838Z",
    "lead_time": 0.072
  },
  {
    "text": "外围设备本身带有自己的设备控制器，它是控制外围设备进行操作的控制部件",
    "id": 4388,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5821,
    "created_at": "2024-08-01T12:41:52.223846Z",
    "updated_at": "2024-08-01T12:41:52.223846Z",
    "lead_time": 0.101
  },
  {
    "text": "一地址指令只有一个地址码，它指定一个操作数，另一个操作数地址是隐含的",
    "id": 4389,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "一地址指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5822,
    "created_at": "2024-08-01T12:41:53.313623Z",
    "updated_at": "2024-08-01T12:41:53.313623Z",
    "lead_time": 0.067
  },
  {
    "text": "“只读”的意思是在其工作时只能读出，不能写入",
    "id": 4390,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "只读",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5823,
    "created_at": "2024-08-01T12:41:54.659642Z",
    "updated_at": "2024-08-01T12:41:54.659642Z",
    "lead_time": 0.357
  },
  {
    "text": "电子的质量g和太阳的质量g相差甚远，在定点计算机中无法直接来表示这个数值范围",
    "id": 4391,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "定点计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5824,
    "created_at": "2024-08-01T12:41:56.053446Z",
    "updated_at": "2024-08-01T12:41:56.053446Z",
    "lead_time": 0.429
  },
  {
    "text": "分辨率和灰度级分辨率是指显示器所能表示的像素个数",
    "id": 4392,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5825,
    "created_at": "2024-08-01T12:41:57.187754Z",
    "updated_at": "2024-08-01T12:41:57.187754Z",
    "lead_time": 0.364
  },
  {
    "text": "段表中的每个表项对应一个段，每个表项有一个指针指向该段的页表",
    "id": 4393,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5826,
    "created_at": "2024-08-01T12:41:58.317018Z",
    "updated_at": "2024-08-01T12:41:58.317018Z",
    "lead_time": 0.388
  },
  {
    "text": "由图看到，在必要的求补操作以后，A和B的码值输送给n位n位不带符号的阵列乘法器，并由此产生n位乘积为ABPpnpppnanbn其中，pn为符号位",
    "id": 4394,
    "label": [
      {
        "start": 34,
        "end": 39,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 47,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5827,
    "created_at": "2024-08-01T12:41:59.673661Z",
    "updated_at": "2024-08-01T12:41:59.673661Z",
    "lead_time": 0.57
  },
  {
    "text": "这样，对MOV、ADD、JMP三条指令来讲，在M节拍中没有什么操作",
    "id": 4395,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "JMP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "MOV",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5828,
    "created_at": "2024-08-01T12:42:00.811873Z",
    "updated_at": "2024-08-01T12:42:00.811873Z",
    "lead_time": 0.248
  },
  {
    "text": "硬布线控制器的基本思想是：某一微操作控制信号是指令操作码译码输出、时序信号和状态条件信号的逻辑函数，即用布尔代数写出逻辑表达式，然后用门电路、触发器等器件实现",
    "id": 4396,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "布尔代数",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 44,
        "text": "状态条件信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 63,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "门电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "指令操作码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5829,
    "created_at": "2024-08-01T12:42:02.059686Z",
    "updated_at": "2024-08-01T12:42:02.059686Z",
    "lead_time": 0.116
  },
  {
    "text": "程序进行虚地址到实地址转换的过程称为程序的再定位",
    "id": 4397,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "再定位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5830,
    "created_at": "2024-08-01T12:42:03.353575Z",
    "updated_at": "2024-08-01T12:42:03.354123Z",
    "lead_time": 0.198
  },
  {
    "text": "通常是新机种在性能和价格方面比旧机种优越",
    "id": 4398,
    "annotator": 1,
    "annotation_id": 5831,
    "created_at": "2024-08-01T12:42:04.790095Z",
    "updated_at": "2024-08-01T12:42:04.790095Z",
    "lead_time": 0.049
  },
  {
    "text": "因而发生了SUB、ADD两条指令间先读后写的数据相关冲突；AND、ADD两条指令间发生了同时读写数据的相关冲突",
    "id": 4399,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "SUB",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 28,
        "text": "数据相关冲突",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5832,
    "created_at": "2024-08-01T12:42:05.911067Z",
    "updated_at": "2024-08-01T12:42:05.911067Z",
    "lead_time": 0.09
  },
  {
    "text": "图中，两条总线各自把其数据送至ALU的输入端",
    "id": 4400,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5833,
    "created_at": "2024-08-01T12:42:07.392921Z",
    "updated_at": "2024-08-01T12:42:07.392921Z",
    "lead_time": 0.075
  },
  {
    "text": "分配给cache的地址存放在一个相联存储器CAM中，它是按内容寻址的存储器",
    "id": 4401,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "相联存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5834,
    "created_at": "2024-08-01T12:42:10.219211Z",
    "updated_at": "2024-08-01T12:42:10.219211Z",
    "lead_time": 1.841
  },
  {
    "text": "为了与CPU交互信息的方便，在接口内部一般要设置一些可以被CPU直接访问的寄存器",
    "id": 4402,
    "label": [
      {
        "start": 37,
        "end": 40,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5835,
    "created_at": "2024-08-01T12:42:18.556893Z",
    "updated_at": "2024-08-01T12:42:18.556893Z",
    "lead_time": 7.457
  },
  {
    "text": "若r表示磁盘旋转速率，单位是转秒，则平均等待时间为r",
    "id": 4403,
    "label": [
      {
        "start": 18,
        "end": 24,
        "text": "平均等待时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "磁盘旋转速率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5836,
    "created_at": "2024-08-01T12:42:19.703737Z",
    "updated_at": "2024-08-01T12:42:19.703737Z",
    "lead_time": 0.343
  },
  {
    "text": "实存被等分成页",
    "id": 4404,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5837,
    "created_at": "2024-08-01T12:42:20.746599Z",
    "updated_at": "2024-08-01T12:42:20.746599Z",
    "lead_time": 0.327
  },
  {
    "text": "IEEE标准规定的位短浮点数和位长浮点数的标准格式为不论是位浮点数还是位浮点数，由于基数是固定常数，对每一个浮点数都一样，所以不必用显式方式来表示它",
    "id": 4405,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5838,
    "created_at": "2024-08-01T12:42:30.363263Z",
    "updated_at": "2024-08-01T12:42:30.363263Z",
    "lead_time": 8.763
  },
  {
    "text": "每个程序设置一个段表，段表的每一个表项对应一个段",
    "id": 4406,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5839,
    "created_at": "2024-08-01T12:42:31.498106Z",
    "updated_at": "2024-08-01T12:42:31.498106Z",
    "lead_time": 0.417
  },
  {
    "text": "后者通常出现在多用户或多任务系统中：实存空间较大，而单个任务并不需要很大的地址空间，较小的虚存空间则可以缩短指令中地址字段的长度",
    "id": 4407,
    "label": [
      {
        "start": 54,
        "end": 56,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5840,
    "created_at": "2024-08-01T12:42:34.418856Z",
    "updated_at": "2024-08-01T12:42:34.418856Z",
    "lead_time": 2.012
  },
  {
    "text": "在第二个CPU周期开始时，按照这个微地址读出第二条微指令，它的二进制编码是在这条微指令中，操作控制部分发出如下四个微命令：RX，RY，，LDR，于是运算器完成RRR的操作，其数据通路如图所示",
    "id": 4408,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 51,
        "text": "操作控制部分",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 87,
        "end": 91,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5841,
    "created_at": "2024-08-01T12:42:35.325866Z",
    "updated_at": "2024-08-01T12:42:35.325866Z",
    "lead_time": 0.167
  },
  {
    "text": "HOST总线该总线有CPU总线、系统总线、主存总线、前端总线等多种名称，各自反映了总线功能的一个方面",
    "id": 4409,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "HOST总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "主存总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "前端总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5842,
    "created_at": "2024-08-01T12:42:36.181678Z",
    "updated_at": "2024-08-01T12:42:36.181678Z",
    "lead_time": 0.062
  },
  {
    "text": "表列出了各种IO设备名称、功能及数据传输速率",
    "id": 4410,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 22,
        "text": "数据传输速率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5843,
    "created_at": "2024-08-01T12:42:48.739037Z",
    "updated_at": "2024-08-01T12:42:48.739037Z",
    "lead_time": 11.384
  },
  {
    "text": "光存储器是指只读光盘或者读写光盘",
    "id": 4411,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "光存储器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "只读",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5844,
    "created_at": "2024-08-01T12:42:49.537267Z",
    "updated_at": "2024-08-01T12:42:49.537267Z",
    "lead_time": 0.07
  },
  {
    "text": "随着技术发展，指令字长度逐渐变成多于位的固定长度",
    "id": 4412,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5845,
    "created_at": "2024-08-01T12:42:50.667647Z",
    "updated_at": "2024-08-01T12:42:50.667647Z",
    "lead_time": 0.079
  },
  {
    "text": "这样，对每一个存储模块来说，从CPU给出访存命令直到读出信息仍然使用了一个存取周期时间；而对CPU来说，它可以在一个存取周期内连续访问四个模块",
    "id": 4413,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存储模块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 58,
        "end": 62,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5846,
    "created_at": "2024-08-01T12:42:51.876013Z",
    "updated_at": "2024-08-01T12:42:51.876013Z",
    "lead_time": 0.088
  },
  {
    "text": "分页模式下的地址转换在分页模式下，有两种页大小，其地址映射方式不同：一种是兼容早期的和的KB的页大小，使用页目录表和页表两级结构进行地址转换；另一种是从奔腾处理机开始采用的MB页大小，使用单级页表结构",
    "id": 4414,
    "label": [
      {
        "start": 53,
        "end": 57,
        "text": "页目录表",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 94,
        "end": 98,
        "text": "单级页表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 66,
        "end": 70,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 78,
        "end": 81,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 88,
        "end": 89,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5847,
    "created_at": "2024-08-01T12:42:53.340461Z",
    "updated_at": "2024-08-01T12:42:53.340461Z",
    "lead_time": 0.132
  },
  {
    "text": "存储管理部件MemoryManagementUnit，MMU是系统中进行虚实地址转换的核心部件",
    "id": 4415,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5848,
    "created_at": "2024-08-01T12:42:54.451315Z",
    "updated_at": "2024-08-01T12:42:54.451315Z",
    "lead_time": 0.058
  },
  {
    "text": "数的真值变成机器码时有四种表示方法：原码表示法、反码表示法、补码表示法、移码表示法",
    "id": 4416,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "机器码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5849,
    "created_at": "2024-08-01T12:42:55.692192Z",
    "updated_at": "2024-08-01T12:42:55.692192Z",
    "lead_time": 0.076
  },
  {
    "text": "加减交替的阵列除法器现在转入讨论加减交替的阵列除法器，假定所有被处理的数都是正小数",
    "id": 4417,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5850,
    "created_at": "2024-08-01T12:42:56.587935Z",
    "updated_at": "2024-08-01T12:42:56.587935Z",
    "lead_time": 0.066
  },
  {
    "text": "当地址线上行地址有效后，用行选通信号RAS打入行地址锁存器；接着地址线上传送列地址，并用列选通信号CAS打入列地址锁存器",
    "id": 4418,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "列选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "行选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5851,
    "created_at": "2024-08-01T12:42:57.470265Z",
    "updated_at": "2024-08-01T12:42:57.470265Z",
    "lead_time": 0.071
  },
  {
    "text": "字符串处理指令字符串处理指令是一种非数值处理指令，一般包括字符串传送、字符串转换把一种编码的字符串转换成另一种编码的字符串、字符串比较、字符串查找查找字符串中某一子串、字符串抽取提取某一子串、字符串替换把某一字符串用另一字符串替换等",
    "id": 4419,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "字符串处理指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 14,
        "text": "字符串处理指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 47,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 59,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 63,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 69,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 75,
        "end": 76,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 84,
        "end": 85,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 96,
        "end": 97,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 104,
        "end": 105,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 110,
        "end": 111,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5852,
    "created_at": "2024-08-01T12:42:58.590084Z",
    "updated_at": "2024-08-01T12:42:58.590084Z",
    "lead_time": 0.088
  },
  {
    "text": "第章计算机系统概论Intel能完成两个位数相加，通过重复相加能完成乘法",
    "id": 4420,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5853,
    "created_at": "2024-08-01T12:43:30.549738Z",
    "updated_at": "2024-08-01T12:43:30.550688Z",
    "lead_time": 30.654
  },
  {
    "text": "在二地址指令格式中，从操作数的物理位置来说，又可归结为三种类型：第一种是访问内存的指令格式，我们称这类指令为存储器存储器SS型指令",
    "id": 4421,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "二地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 60,
        "end": 65,
        "text": "SS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5854,
    "created_at": "2024-08-01T12:44:19.545771Z",
    "updated_at": "2024-08-01T12:44:19.545771Z",
    "lead_time": 43.594
  },
  {
    "text": "磁盘存储器的每个扇区记录定长的数据，因此读写操作是以扇区为单位一位一位串行进行的",
    "id": 4422,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5855,
    "created_at": "2024-08-01T12:44:22.817949Z",
    "updated_at": "2024-08-01T12:44:22.817949Z",
    "lead_time": 0.292
  },
  {
    "text": "线性流水线的硬件基本结构如图所示",
    "id": 4423,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5856,
    "created_at": "2024-08-01T12:44:25.593775Z",
    "updated_at": "2024-08-01T12:44:25.593775Z",
    "lead_time": 0.16
  },
  {
    "text": "关于微程序控制器如何产生节拍电位信号，将留在节介绍",
    "id": 4424,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5857,
    "created_at": "2024-08-01T12:44:27.913739Z",
    "updated_at": "2024-08-01T12:44:27.913739Z",
    "lead_time": 0.104
  },
  {
    "text": "读操作如何读出记录在磁表面上的二进制代码信息呢也就是说，如何判断载磁体上信息的不同剩磁状态呢当磁头经过载磁体的磁化元时，由于磁头铁芯是良好的导磁材料，磁化元的磁力线很容易通过磁头而形成闭合磁通回路",
    "id": 4425,
    "label": [
      {
        "start": 47,
        "end": 49,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 87,
        "end": 89,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5858,
    "created_at": "2024-08-01T12:44:32.416960Z",
    "updated_at": "2024-08-01T12:44:32.416960Z",
    "lead_time": 2.605
  },
  {
    "text": "其次，目前在一片硅单晶芯片上制作复杂的逻辑电路已经是实际可行的，这就为扩大指令的功能提供了物质基础，因此本来通过软件手段来实现的某种功能，现在可以通过硬件来直接解释执行",
    "id": 4426,
    "label": [
      {
        "start": 8,
        "end": 9,
        "text": "硅",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5859,
    "created_at": "2024-08-01T12:44:35.356865Z",
    "updated_at": "2024-08-01T12:44:35.356865Z",
    "lead_time": 0.563
  },
  {
    "text": "要对阶，首先应求出两数阶码Ex和Ey之差，即EExEy若E，表示两数阶码相等，即ExEy；若E，表示ExEy；若E，表示ExEy",
    "id": 4427,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5860,
    "created_at": "2024-08-01T12:44:38.954556Z",
    "updated_at": "2024-08-01T12:44:38.954556Z",
    "lead_time": 1.228
  },
  {
    "text": "许多指令可用最基本的指令编程来实现",
    "id": 4428,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "指令编程",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5861,
    "created_at": "2024-08-01T12:44:43.083752Z",
    "updated_at": "2024-08-01T12:44:43.083752Z",
    "lead_time": 2.441
  },
  {
    "text": "读写周期时，它们分为行、列地址两部分送至芯片的位地址引脚",
    "id": 4429,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "地址引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5862,
    "created_at": "2024-08-01T12:44:45.997937Z",
    "updated_at": "2024-08-01T12:44:45.997937Z",
    "lead_time": 1.048
  },
  {
    "text": "外页表通常放在辅存中，在需要时可调入主存",
    "id": 4430,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5863,
    "created_at": "2024-08-01T12:44:48.981808Z",
    "updated_at": "2024-08-01T12:44:48.981808Z",
    "lead_time": 0.959
  },
  {
    "text": "通常，把编译程序和运行系统合称为编译器",
    "id": 4431,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "编译器",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5864,
    "created_at": "2024-08-01T12:44:51.146328Z",
    "updated_at": "2024-08-01T12:44:51.146328Z",
    "lead_time": 0.337
  },
  {
    "text": "两级先行进位的ALU前面说过，ALU设置了P和G两个本组先行进位输出端",
    "id": 4432,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5865,
    "created_at": "2024-08-01T12:44:53.412187Z",
    "updated_at": "2024-08-01T12:44:53.412187Z",
    "lead_time": 0.415
  },
  {
    "text": "存储介质，具有保存信息的物理特征",
    "id": 4433,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5866,
    "created_at": "2024-08-01T12:44:55.190446Z",
    "updated_at": "2024-08-01T12:44:55.190958Z",
    "lead_time": 0.071
  },
  {
    "text": "这种策略在硬件上容易实现，且速度也比前两种策略快",
    "id": 4434,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5867,
    "created_at": "2024-08-01T12:44:57.544264Z",
    "updated_at": "2024-08-01T12:44:57.544264Z",
    "lead_time": 0.099
  },
  {
    "text": "而算后求补器的作用则是：当两个输入操作数的符号不一致时，把运算结果变换成带符号的数",
    "id": 4435,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "算后求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5868,
    "created_at": "2024-08-01T12:44:59.630714Z",
    "updated_at": "2024-08-01T12:44:59.630714Z",
    "lead_time": 0.141
  },
  {
    "text": "MCCPU结构框图MCCPU是Motorola公司的产品，其目标是以较好的性能价格比作为PC和工作站的通用微处理器",
    "id": 4436,
    "label": [
      {
        "start": 15,
        "end": 23,
        "text": "Motorola",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5869,
    "created_at": "2024-08-01T12:45:02.425042Z",
    "updated_at": "2024-08-01T12:45:02.425042Z",
    "lead_time": 0.851
  },
  {
    "text": "为了形象直观，在我们的例子中，该字段为位，每一位表示一个微命令",
    "id": 4437,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5870,
    "created_at": "2024-08-01T12:45:04.077106Z",
    "updated_at": "2024-08-01T12:45:04.077106Z",
    "lead_time": 0.122
  },
  {
    "text": "在视窗环境下，它的大部分功能不被使用，而由后者的设备驱动程序建立操作系统与适配器硬件的衔接",
    "id": 4438,
    "label": [
      {
        "start": 32,
        "end": 36,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 30,
        "text": "设备驱动程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5871,
    "created_at": "2024-08-01T12:45:06.351200Z",
    "updated_at": "2024-08-01T12:45:06.351200Z",
    "lead_time": 0.123
  },
  {
    "text": "在设计cache结构时，必须解决几个问题：主存的内容调入cache时如何存放？访存时如何找到cache中的信息？当cache空间不足时如何替换cache中已有的内容？需要写操作时如何改写cache的内容？其中，前两个问题是相互关联的，即如何将主存信息定位在cache中，如何将主存地址变换为cache地址",
    "id": 4439,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 138,
        "end": 142,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 85,
        "end": 88,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 57,
        "end": 62,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 71,
        "end": 76,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 93,
        "end": 98,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 121,
        "end": 123,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 128,
        "end": 133,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 145,
        "end": 150,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 150,
        "end": 152,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 126,
        "end": 127,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5872,
    "created_at": "2024-08-01T12:45:08.474104Z",
    "updated_at": "2024-08-01T12:45:08.474104Z",
    "lead_time": 0.154
  },
  {
    "text": "页表则指明该段各页在主存中的位置，以及是否已装入、是否已修改等状态信息",
    "id": 4440,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5873,
    "created_at": "2024-08-01T12:45:10.869238Z",
    "updated_at": "2024-08-01T12:45:10.869238Z",
    "lead_time": 0.089
  },
  {
    "text": "浮点数的机器表示早期，各个计算机系统的浮点数使用不同的机器码表示阶和尾数，给数据的交换和比较带来很大麻烦",
    "id": 4441,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "机器码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "机器表示",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5874,
    "created_at": "2024-08-01T12:45:14.271504Z",
    "updated_at": "2024-08-01T12:45:14.271504Z",
    "lead_time": 1.757
  },
  {
    "text": "JMP指令是一条无条件转移指令，用来改变程序的执行顺序",
    "id": 4442,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "JMP指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5875,
    "created_at": "2024-08-01T12:45:18.791595Z",
    "updated_at": "2024-08-01T12:45:18.791595Z",
    "lead_time": 2.816
  },
  {
    "text": "CPU拥有HOST总线的控制权，但在必要情况下可放弃总线控制权",
    "id": 4443,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 11,
        "text": "HOST总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5876,
    "created_at": "2024-08-01T12:45:20.596896Z",
    "updated_at": "2024-08-01T12:45:20.596896Z",
    "lead_time": 0.133
  },
  {
    "text": "图b画出了指令跳跃寻址方式的示意图",
    "id": 4444,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 13,
        "text": "跳跃寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5877,
    "created_at": "2024-08-01T12:45:22.696834Z",
    "updated_at": "2024-08-01T12:45:22.696834Z",
    "lead_time": 0.135
  },
  {
    "text": "和打算盘不同的是，以上这些部分都是由电子线路和其他设备自动进行的",
    "id": 4445,
    "annotator": 1,
    "annotation_id": 5878,
    "created_at": "2024-08-01T12:45:24.467583Z",
    "updated_at": "2024-08-01T12:45:24.467583Z",
    "lead_time": 0.081
  },
  {
    "text": "超时时，数据线上的DQ输出为，表示编程或擦除操作失败",
    "id": 4446,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5879,
    "created_at": "2024-08-01T12:45:26.500587Z",
    "updated_at": "2024-08-01T12:45:26.501602Z",
    "lead_time": 0.09
  },
  {
    "text": "隐藏式仲裁使裁决过程或在总线空闲期进行或在当前总线周期内进行，不需要单独的仲裁总线周期，提高了总线利用率",
    "id": 4447,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "隐藏式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 43,
        "text": "仲裁总线周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "总线利用率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5880,
    "created_at": "2024-08-01T12:45:28.271464Z",
    "updated_at": "2024-08-01T12:45:28.271464Z",
    "lead_time": 0.127
  },
  {
    "text": "就目前而言，一些计算机的特点是，把原来明显地在一般机器级通过编制程序实现的操作，如整数乘除法指令、浮点运算指令、处理字符串指令等，改为直接由硬件完成",
    "id": 4448,
    "label": [
      {
        "start": 70,
        "end": 72,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 58,
        "end": 59,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5881,
    "created_at": "2024-08-01T12:45:30.491592Z",
    "updated_at": "2024-08-01T12:45:30.492639Z",
    "lead_time": 0.211
  },
  {
    "text": "如奔腾CPU是流水CPU，但奔腾机是CISC机器",
    "id": 4449,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "流水CPU",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5882,
    "created_at": "2024-08-01T12:45:32.149292Z",
    "updated_at": "2024-08-01T12:45:32.149292Z",
    "lead_time": 0.107
  },
  {
    "text": "思考题可否将第区的所有页映射到cache第行？可否将第区的所有页映射到cache第行？请与上面的映射方式对比",
    "id": 4450,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5883,
    "created_at": "2024-08-01T12:45:34.459779Z",
    "updated_at": "2024-08-01T12:45:34.459779Z",
    "lead_time": 0.136
  },
  {
    "text": "于是下一条指令不是从号单元取出，而是转移到号单元取出",
    "id": 4451,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5884,
    "created_at": "2024-08-01T12:45:36.172489Z",
    "updated_at": "2024-08-01T12:45:36.172489Z",
    "lead_time": 0.097
  },
  {
    "text": "由于虚存地址空间可以很大，因而每个进程的页表有可能非常长",
    "id": 4452,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "虚存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5885,
    "created_at": "2024-08-01T12:45:38.542324Z",
    "updated_at": "2024-08-01T12:45:38.542324Z",
    "lead_time": 0.124
  },
  {
    "text": "在磁盘存储器盘片上读写数据的速率则称为内部数据传输率，即磁头找到要访问的位置后，单位时间读写的字节数，等于每个磁道上的字节数磁盘旋转一周的时间",
    "id": 4453,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 26,
        "text": "内部数据传输率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5886,
    "created_at": "2024-08-01T12:45:40.312435Z",
    "updated_at": "2024-08-01T12:45:40.312435Z",
    "lead_time": 0.16
  },
  {
    "text": "一个较完善的指令系统应当包含数据传送类指令、算术运算类指令、逻辑运算类指令、程序控制类指令、IO类指令、字符串类指令、系统控制类指令",
    "id": 4454,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 66,
        "text": "系统控制类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 21,
        "text": "数据传送类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 29,
        "text": "算术运算类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 37,
        "text": "逻辑运算类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 45,
        "text": "程序控制类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "IO类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 52,
        "end": 58,
        "text": "字符串类指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5887,
    "created_at": "2024-08-01T12:45:43.429237Z",
    "updated_at": "2024-08-01T12:45:43.429237Z",
    "lead_time": 0.146
  },
  {
    "text": "相加两数都是负数，则其和也一定是负数",
    "id": 4455,
    "annotator": 1,
    "annotation_id": 5888,
    "created_at": "2024-08-01T12:45:46.126189Z",
    "updated_at": "2024-08-01T12:45:46.126189Z",
    "lead_time": 0.089
  },
  {
    "text": "将磁盘存储器用于某计算机系统中，必须首先进行格式化操作，然后才能供用户记录信息",
    "id": 4456,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5889,
    "created_at": "2024-08-01T12:45:48.419410Z",
    "updated_at": "2024-08-01T12:45:48.419410Z",
    "lead_time": 0.093
  },
  {
    "text": "由于数据是一位一位串行读出的，故要送至串并变换寄存器变换为并行数据，再并行送至计算机",
    "id": 4457,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5890,
    "created_at": "2024-08-01T12:45:51.020739Z",
    "updated_at": "2024-08-01T12:45:51.020739Z",
    "lead_time": 0.125
  },
  {
    "text": "因此，如果设计两个独立的存储体组，相当于将内存预取值提高到了n；如果是四个独立的存储体组，则预取值提高到了n",
    "id": 4458,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5891,
    "created_at": "2024-08-01T12:45:54.127172Z",
    "updated_at": "2024-08-01T12:45:54.127172Z",
    "lead_time": 0.719
  },
  {
    "text": "因此从教学目的考虑，下面给出一个基本指令系统的操作，如表所示",
    "id": 4459,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5892,
    "created_at": "2024-08-01T12:45:55.675855Z",
    "updated_at": "2024-08-01T12:45:55.675855Z",
    "lead_time": 0.085
  },
  {
    "text": "总线定时是总线系统的核心问题之一",
    "id": 4460,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "总线系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5893,
    "created_at": "2024-08-01T12:45:57.675912Z",
    "updated_at": "2024-08-01T12:45:57.675912Z",
    "lead_time": 0.108
  },
  {
    "text": "周期性的刷新操作是与读写操作交替进行的，所以通过选多路开关选择刷新行地址或正常读写的行地址",
    "id": 4461,
    "label": [
      {
        "start": 33,
        "end": 36,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5894,
    "created_at": "2024-08-01T12:45:59.424800Z",
    "updated_at": "2024-08-01T12:45:59.424800Z",
    "lead_time": 0.084
  },
  {
    "text": "通常，存储周期略大于存取时间",
    "id": 4462,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5895,
    "created_at": "2024-08-01T12:46:01.349978Z",
    "updated_at": "2024-08-01T12:46:01.349978Z",
    "lead_time": 0.101
  },
  {
    "text": "但是并行总线通常需要在系统底板上进行复杂的走线，随着信号传输速度的提高，不同长度或在PCB板不同层布放的导线引起的定时偏差的影响和并行导线之间存在的相互干扰变得越来越严重，限制了信号传输的最高速率",
    "id": 4463,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "并行总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5896,
    "created_at": "2024-08-01T12:46:03.288850Z",
    "updated_at": "2024-08-01T12:46:03.288850Z",
    "lead_time": 0.092
  },
  {
    "text": "通常把组成一个字的二进制位数叫做字长",
    "id": 4464,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5897,
    "created_at": "2024-08-01T12:46:05.365483Z",
    "updated_at": "2024-08-01T12:46:05.365483Z",
    "lead_time": 0.103
  },
  {
    "text": "而分页部件则将线性地址转换为物理地址",
    "id": 4465,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "分页部件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5898,
    "created_at": "2024-08-01T12:46:07.320839Z",
    "updated_at": "2024-08-01T12:46:07.320839Z",
    "lead_time": 0.124
  },
  {
    "text": "e是比例因子的指数，称为浮点数的指数，是一个整数",
    "id": 4466,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5899,
    "created_at": "2024-08-01T12:46:09.144561Z",
    "updated_at": "2024-08-01T12:46:09.144561Z",
    "lead_time": 0.084
  },
  {
    "text": "对指令进行译码或测试，并产生相应的操作控制信号，以便启动规定的动作",
    "id": 4467,
    "label": [
      {
        "start": 17,
        "end": 23,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5900,
    "created_at": "2024-08-01T12:46:11.047101Z",
    "updated_at": "2024-08-01T12:46:11.047101Z",
    "lead_time": 0.083
  },
  {
    "text": "以CRT荧光屏对角线的长度分类，有英寸、英寸、英寸等多种",
    "id": 4468,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "CRT荧光屏",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5901,
    "created_at": "2024-08-01T12:46:13.028856Z",
    "updated_at": "2024-08-01T12:46:13.028856Z",
    "lead_time": 0.093
  },
  {
    "text": "计算机的性能指标主要是CPU性能指标、存储器性能指标和IO吞吐率",
    "id": 4469,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "性能指标",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "IO吞吐率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 19,
        "end": 26,
        "text": "存储器性能指标",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "CPU性能指标",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5902,
    "created_at": "2024-08-01T12:46:14.896014Z",
    "updated_at": "2024-08-01T12:46:14.896014Z",
    "lead_time": 0.107
  },
  {
    "text": "一般采用的方法包括：将执行部件分为定点执行部件和浮点执行部件两个可并行执行的部分，分别处理定点运算指令和浮点运算指令；在浮点执行部件中，又有浮点加法部件和浮点乘除部件，它们也可以同时执行不同的指令；浮点运算部件都以流水线方式工作",
    "id": 4470,
    "label": [
      {
        "start": 17,
        "end": 23,
        "text": "定点执行部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 30,
        "text": "浮点执行部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 77,
        "end": 83,
        "text": "浮点乘除部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 107,
        "end": 110,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 70,
        "end": 76,
        "text": "浮点加法部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 66,
        "text": "浮点执行部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 99,
        "end": 105,
        "text": "浮点运算部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 96,
        "end": 98,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5903,
    "created_at": "2024-08-01T12:46:18.478556Z",
    "updated_at": "2024-08-01T12:46:18.478556Z",
    "lead_time": 2.099
  },
  {
    "text": "为了区别一般书写表示的数和机器中这些编码表示的数，通常将前者称为真值，后者称为机器数或机器码",
    "id": 4471,
    "label": [
      {
        "start": 43,
        "end": 46,
        "text": "机器码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "机器数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5904,
    "created_at": "2024-08-01T12:46:20.685899Z",
    "updated_at": "2024-08-01T12:46:20.685899Z",
    "lead_time": 0.732
  },
  {
    "text": "机器启动时，只要给出控制存储器的首地址，就可以调出所需要的微程序",
    "id": 4472,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5905,
    "created_at": "2024-08-01T12:46:22.891061Z",
    "updated_at": "2024-08-01T12:46:22.891061Z",
    "lead_time": 0.656
  },
  {
    "text": "当一个新的主存块需要拷贝到cache，而允许存放此块的行位置都被其他主存块占满时，就要产生替换",
    "id": 4473,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5906,
    "created_at": "2024-08-01T12:46:26.608839Z",
    "updated_at": "2024-08-01T12:46:26.608839Z",
    "lead_time": 2.418
  },
  {
    "text": "否则，主设备中止总线周期",
    "id": 4474,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5907,
    "created_at": "2024-08-01T12:46:29.340193Z",
    "updated_at": "2024-08-01T12:46:29.340193Z",
    "lead_time": 1.274
  },
  {
    "text": "我们称这些计算机为复杂指令系统计算机，简称CISC",
    "id": 4475,
    "label": [
      {
        "start": 9,
        "end": 18,
        "text": "复杂指令系统计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5908,
    "created_at": "2024-08-01T12:46:31.084200Z",
    "updated_at": "2024-08-01T12:46:31.084200Z",
    "lead_time": 0.097
  },
  {
    "text": "AA的位地址用于模块中K个存储字的选择",
    "id": 4476,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5909,
    "created_at": "2024-08-01T12:46:34.877815Z",
    "updated_at": "2024-08-01T12:46:34.877815Z",
    "lead_time": 2.244
  },
  {
    "text": "数据写到光盘后不可擦除但可多次读",
    "id": 4477,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5910,
    "created_at": "2024-08-01T12:46:36.379677Z",
    "updated_at": "2024-08-01T12:46:36.379677Z",
    "lead_time": 0.201
  },
  {
    "text": "由于硬件只能识别和，所以采用二进制操作码是必要的，但是我们用二进制来书写程序却非常麻烦",
    "id": 4478,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5911,
    "created_at": "2024-08-01T12:46:38.371359Z",
    "updated_at": "2024-08-01T12:46:38.371359Z",
    "lead_time": 0.123
  },
  {
    "text": "然后，内存地址的低位列地址在列选通信号CAS有效时经AA地址线输入，并被锁存到列地址锁存器中",
    "id": 4479,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "列选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5912,
    "created_at": "2024-08-01T12:46:40.763288Z",
    "updated_at": "2024-08-01T12:46:40.763288Z",
    "lead_time": 0.516
  },
  {
    "text": "主板上一般有个PCI总线扩充槽",
    "id": 4480,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5913,
    "created_at": "2024-08-01T12:46:43.139882Z",
    "updated_at": "2024-08-01T12:46:43.139882Z",
    "lead_time": 0.087
  },
  {
    "text": "机器指令与微指令的关系经过上面的讲述，应该说，我们能够透彻地了解机器指令与微指令的关系",
    "id": 4481,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5914,
    "created_at": "2024-08-01T12:46:45.740035Z",
    "updated_at": "2024-08-01T12:46:45.740035Z",
    "lead_time": 0.122
  },
  {
    "text": "按照总线仲裁电路的位置不同，仲裁方式分为集中式仲裁和分布式仲裁两类",
    "id": 4482,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "分布式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "仲裁方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5915,
    "created_at": "2024-08-01T12:46:48.097734Z",
    "updated_at": "2024-08-01T12:46:48.097734Z",
    "lead_time": 0.105
  },
  {
    "text": "例如，在多处理器系统中对各CPU模块的总线请求采用公平的原则来处理，而对IO模块的总线请求采用优先级策略",
    "id": 4483,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "多处理器",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5916,
    "created_at": "2024-08-01T12:46:50.110542Z",
    "updated_at": "2024-08-01T12:46:50.111543Z",
    "lead_time": 0.163
  },
  {
    "text": "这种显示器的优点是分辨率高可达像素，显示的曲线平滑",
    "id": 4484,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5917,
    "created_at": "2024-08-01T12:46:52.285777Z",
    "updated_at": "2024-08-01T12:46:52.285777Z",
    "lead_time": 0.891
  },
  {
    "text": "如果某字代表要处理的数据，则称为数据字；如果某字为一条指令，则称为指令字",
    "id": 4485,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5918,
    "created_at": "2024-08-01T12:46:54.333059Z",
    "updated_at": "2024-08-01T12:46:54.333059Z",
    "lead_time": 0.121
  },
  {
    "text": "与此同时可用T间隔读取下条微指令，经ns时间延迟，下条微指令又从只读存储器读出，并用T上升沿打入到微指令寄存器",
    "id": 4486,
    "label": [
      {
        "start": 49,
        "end": 55,
        "text": "微指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5919,
    "created_at": "2024-08-01T12:46:55.743155Z",
    "updated_at": "2024-08-01T12:46:55.743155Z",
    "lead_time": 0.064
  },
  {
    "text": "双地址周期用于主方指示它正在使用位地址",
    "id": 4487,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "双地址周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5920,
    "created_at": "2024-08-01T12:46:57.984856Z",
    "updated_at": "2024-08-01T12:46:57.984856Z",
    "lead_time": 0.139
  },
  {
    "text": "每个像素的间距为mm，水平方向的像素所占显示长度为mm，垂直方向像素是按的长宽比例分配",
    "id": 4488,
    "annotator": 1,
    "annotation_id": 5921,
    "created_at": "2024-08-01T12:46:59.622296Z",
    "updated_at": "2024-08-01T12:46:59.622296Z",
    "lead_time": 0.059
  },
  {
    "text": "假设采用定点整数表示，因此证明的先决条件是：xn，yn，xyn",
    "id": 4489,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "定点整数表示",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5922,
    "created_at": "2024-08-01T12:47:01.378715Z",
    "updated_at": "2024-08-01T12:47:01.378715Z",
    "lead_time": 0.069
  },
  {
    "text": "所谓单向总线，就是信息只能向一个方向传送",
    "id": 4490,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "单向总线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5923,
    "created_at": "2024-08-01T12:47:03.269424Z",
    "updated_at": "2024-08-01T12:47:03.269424Z",
    "lead_time": 0.072
  },
  {
    "text": "地址变换时，用逻辑页号作为页表内的偏移地址索引页表将虚页号看作页表数组下标并找到相应物理页号，用物理页号作为实存地址的高字段，再与虚地址的页内偏移量拼接，就构成了完整的物理地址",
    "id": 4491,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "索引页表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 84,
        "end": 88,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "偏移地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "虚页号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 69,
        "end": 74,
        "text": "页内偏移量",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "实存地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5924,
    "created_at": "2024-08-01T12:47:04.837310Z",
    "updated_at": "2024-08-01T12:47:04.837310Z",
    "lead_time": 0.138
  },
  {
    "text": "计算机的运算器大体有如下三种结构形式：单总线结构的运算器单总线结构的运算器如图a所示",
    "id": 4492,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5925,
    "created_at": "2024-08-01T12:47:06.883242Z",
    "updated_at": "2024-08-01T12:47:06.883242Z",
    "lead_time": 0.087
  },
  {
    "text": "Pentium机总线系统中有一个核心逻辑芯片组，简称PCI芯片组，它包括主存控制器和cache控制器芯片、北桥芯片和南桥芯片",
    "id": 4493,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "南桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "北桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 41,
        "text": "主存控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 50,
        "text": "cache控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5926,
    "created_at": "2024-08-01T12:47:08.645246Z",
    "updated_at": "2024-08-01T12:47:08.645246Z",
    "lead_time": 0.1
  },
  {
    "text": "由图可见，当执行部件正在执行第I条指令时，指令队列中存放着IIIk条指令，而与此同时，指令部件正在取第Ik条指令",
    "id": 4494,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "指令队列",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5927,
    "created_at": "2024-08-01T12:47:10.770513Z",
    "updated_at": "2024-08-01T12:47:10.770513Z",
    "lead_time": 0.105
  },
  {
    "text": "直接表示法采用直接表示法的微指令结构如图所示，其特点是操作控制字段中的每一位代表一个微命令",
    "id": 4495,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "直接表示法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "操作控制字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "直接表示法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5928,
    "created_at": "2024-08-01T12:47:12.382498Z",
    "updated_at": "2024-08-01T12:47:12.382498Z",
    "lead_time": 0.089
  },
  {
    "text": "这种以内存为中心的结构要求不仅CPU可以访问主存，而且其他部件如IO设备也可不经CPU而直接与主存交换信息",
    "id": 4496,
    "label": [
      {
        "start": 32,
        "end": 36,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5929,
    "created_at": "2024-08-01T12:47:14.396461Z",
    "updated_at": "2024-08-01T12:47:14.396461Z",
    "lead_time": 0.107
  },
  {
    "text": "但这个虚存是由主存和辅存以及辅存管理部件构成的概念模型，不是实际的物理存储器",
    "id": 4497,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "物理存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5930,
    "created_at": "2024-08-01T12:47:16.189529Z",
    "updated_at": "2024-08-01T12:47:16.189529Z",
    "lead_time": 0.087
  },
  {
    "text": "再根据段号S找到程序C段表的第S个表项，得到段S的页表起始地址b",
    "id": 4498,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "段号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "起始地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5931,
    "created_at": "2024-08-01T12:47:18.092027Z",
    "updated_at": "2024-08-01T12:47:18.092027Z",
    "lead_time": 0.118
  },
  {
    "text": "此逻辑表达式也可用异或门实现",
    "id": 4499,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "异或门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5932,
    "created_at": "2024-08-01T12:47:19.666283Z",
    "updated_at": "2024-08-01T12:47:19.666283Z",
    "lead_time": 0.066
  },
  {
    "text": "无论尾数是正数还是负数，截尾都使取值的绝对值比原值的绝对值小",
    "id": 4500,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "截尾",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5933,
    "created_at": "2024-08-01T12:47:21.422542Z",
    "updated_at": "2024-08-01T12:47:21.423051Z",
    "lead_time": 0.07
  },
  {
    "text": "立即寻址指令的地址字段指出的不是操作数的地址，而是操作数本身，这种寻址方式称为立即寻址，如图b所示",
    "id": 4501,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "立即寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "立即寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5934,
    "created_at": "2024-08-01T12:47:22.934429Z",
    "updated_at": "2024-08-01T12:47:22.935428Z",
    "lead_time": 0.142
  },
  {
    "text": "表中，reg表示中间的一个寄存器号，address表示一个位地址，而表示该格式中这个字段没有出现",
    "id": 4502,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5935,
    "created_at": "2024-08-01T12:47:25.366218Z",
    "updated_at": "2024-08-01T12:47:25.366218Z",
    "lead_time": 0.71
  },
  {
    "text": "所有PCI设备必须提供配置空间，而多功能设备要为每一实现功能提供一个配置空间",
    "id": 4503,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "多功能设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5936,
    "created_at": "2024-08-01T12:47:27.550530Z",
    "updated_at": "2024-08-01T12:47:27.550530Z",
    "lead_time": 0.744
  },
  {
    "text": "目前磁头小车的驱动方式主要采用步进电机和音圈电机两种",
    "id": 4504,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5937,
    "created_at": "2024-08-01T12:47:30.141694Z",
    "updated_at": "2024-08-01T12:47:30.141694Z",
    "lead_time": 1.246
  },
  {
    "text": "PCIe支持全双工通信，允许在同一时刻同时进行数据发送和接收",
    "id": 4505,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "全双工通信",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5938,
    "created_at": "2024-08-01T12:47:36.274722Z",
    "updated_at": "2024-08-01T12:47:36.274722Z",
    "lead_time": 4.917
  },
  {
    "text": "在早期的计算机中，人们是直接用机器语言即机器指令代码来编写程序的，这种方式编写的程序称为手编程序",
    "id": 4506,
    "label": [
      {
        "start": 44,
        "end": 48,
        "text": "手编程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5939,
    "created_at": "2024-08-01T12:47:38.652510Z",
    "updated_at": "2024-08-01T12:47:38.652510Z",
    "lead_time": 0.761
  },
  {
    "text": "之后CS、OE信号恢复高电平，tRC以后才允许地址总线发生改变",
    "id": 4507,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5940,
    "created_at": "2024-08-01T12:47:40.882799Z",
    "updated_at": "2024-08-01T12:47:40.882799Z",
    "lead_time": 0.722
  },
  {
    "text": "例如，在执行一次加法运算时，选择两个操作数分别放在两个寄存器相加，所得的结果送回其中一个寄存器如R中，而R中原有的内容随即被替换",
    "id": 4508,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5941,
    "created_at": "2024-08-01T12:47:42.932181Z",
    "updated_at": "2024-08-01T12:47:42.932181Z",
    "lead_time": 0.098
  },
  {
    "text": "年每位半导体存储器的价格低于磁芯",
    "id": 4509,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 9,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5942,
    "created_at": "2024-08-01T12:47:45.455335Z",
    "updated_at": "2024-08-01T12:47:45.455335Z",
    "lead_time": 0.478
  },
  {
    "text": "QIC磁带驱动器使用个磁头，即一个读磁头两侧各有一个写磁头，如图所示",
    "id": 4510,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "磁带驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "IC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5943,
    "created_at": "2024-08-01T12:47:48.410560Z",
    "updated_at": "2024-08-01T12:47:48.410560Z",
    "lead_time": 0.864
  },
  {
    "text": "主方持续控制总线的时间称为总线占用期",
    "id": 4511,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "总线占用期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5944,
    "created_at": "2024-08-01T12:47:56.992709Z",
    "updated_at": "2024-08-01T12:47:56.992709Z",
    "lead_time": 6.574
  },
  {
    "text": "一台计算机中最基本、必不可少的指令是不多的",
    "id": 4512,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5945,
    "created_at": "2024-08-01T12:48:01.275669Z",
    "updated_at": "2024-08-01T12:48:01.275669Z",
    "lead_time": 2.525
  },
  {
    "text": "若E且M，则NSM非规格化数",
    "id": 4513,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "规格化数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5946,
    "created_at": "2024-08-01T12:48:02.822700Z",
    "updated_at": "2024-08-01T12:48:02.822700Z",
    "lead_time": 0.081
  },
  {
    "text": "当某行被换出时，根据此行修改位是还是，来决定将该行内容写回主存还是简单弃去",
    "id": 4514,
    "label": [
      {
        "start": 29,
        "end": 31,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "修改位",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5947,
    "created_at": "2024-08-01T12:48:05.049409Z",
    "updated_at": "2024-08-01T12:48:05.049409Z",
    "lead_time": 0.088
  },
  {
    "text": "移位指令用来对寄存器的内容实现左移、右移或循环移位",
    "id": 4515,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "移位指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "左移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "循环移位",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5948,
    "created_at": "2024-08-01T12:48:08.330871Z",
    "updated_at": "2024-08-01T12:48:08.330871Z",
    "lead_time": 1.122
  },
  {
    "text": "若阶码数值部分为位，以e表示真值，则e移e，e例如，当正数e时，e移，；当负数e时，e移e，",
    "id": 4516,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5949,
    "created_at": "2024-08-01T12:48:10.596522Z",
    "updated_at": "2024-08-01T12:48:10.596522Z",
    "lead_time": 0.074
  },
  {
    "text": "按今天的标准，虽然过于简单，但是它却成为微处理器的能力和功能不断发展的奠基者",
    "id": 4517,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5950,
    "created_at": "2024-08-01T12:48:13.563419Z",
    "updated_at": "2024-08-01T12:48:13.563419Z",
    "lead_time": 1.611
  },
  {
    "text": "以下的寻址方式引用的是存储器位置，通过指定包含此位置的段和离段起点的位移来说明存储器位置",
    "id": 4518,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5951,
    "created_at": "2024-08-01T12:48:15.175405Z",
    "updated_at": "2024-08-01T12:48:15.176402Z",
    "lead_time": 0.097
  },
  {
    "text": "在模式寄存器中可以设置CAS延迟、突发类型、突发长度和测试模式等",
    "id": 4519,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "模式寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5952,
    "created_at": "2024-08-01T12:48:16.739131Z",
    "updated_at": "2024-08-01T12:48:16.739131Z",
    "lead_time": 0.126
  },
  {
    "text": "硬件实现的常用算法主要有以下三种",
    "id": 4520,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5953,
    "created_at": "2024-08-01T12:48:18.544976Z",
    "updated_at": "2024-08-01T12:48:18.544976Z",
    "lead_time": 0.072
  },
  {
    "text": "格式化容量是指按照某种特定的记录格式所能存储信息的总量，也就是用户可以真正使用的容量",
    "id": 4521,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "格式化容量",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5954,
    "created_at": "2024-08-01T12:48:20.058116Z",
    "updated_at": "2024-08-01T12:48:20.058116Z",
    "lead_time": 0.069
  },
  {
    "text": "设计微指令结构应当追求的目标是：有利于缩短微指令字长度；有利于减小控制存储器的容量；有利于提高微程序的执行速度；有利于对微指令的修改；有利于提高微程序设计的灵活性",
    "id": 4522,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "微指令字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 72,
        "end": 77,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5955,
    "created_at": "2024-08-01T12:48:21.734153Z",
    "updated_at": "2024-08-01T12:48:21.734153Z",
    "lead_time": 0.095
  },
  {
    "text": "下面通过时空图来证明这个结论",
    "id": 4523,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "时空图",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5956,
    "created_at": "2024-08-01T12:48:23.316077Z",
    "updated_at": "2024-08-01T12:48:23.316077Z",
    "lead_time": 0.061
  },
  {
    "text": "用今天的眼光来看，这台计算机耗费既大又不完善，但却是科学史上一次划时代的创新，它奠定了电子计算机的基础",
    "id": 4524,
    "label": [
      {
        "start": 43,
        "end": 48,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5957,
    "created_at": "2024-08-01T12:48:24.879732Z",
    "updated_at": "2024-08-01T12:48:24.879732Z",
    "lead_time": 0.091
  },
  {
    "text": "微指令寄存器微指令寄存器用来存放由控制存储器读出的一条微指令信息",
    "id": 4525,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "微指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "微指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5958,
    "created_at": "2024-08-01T12:48:26.572066Z",
    "updated_at": "2024-08-01T12:48:26.572066Z",
    "lead_time": 0.096
  },
  {
    "text": "这类第章指令系统指令在文字编辑中对大量字符串进行处理",
    "id": 4526,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5959,
    "created_at": "2024-08-01T12:48:30.549950Z",
    "updated_at": "2024-08-01T12:48:30.549950Z",
    "lead_time": 2.579
  },
  {
    "text": "与PCI的共享总线模式不同，PCIe链路使用端到端的数据传送方式，每一通道Lane只能连接两个设备，设备之间通过双向的链路相连接，每个传输通道独享带宽",
    "id": 4527,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "端到端",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5960,
    "created_at": "2024-08-01T12:48:32.932828Z",
    "updated_at": "2024-08-01T12:48:32.932828Z",
    "lead_time": 1.029
  },
  {
    "text": "根据补码定义，x补x，y补ny所以x补y补xnynxyxy补modnx，y，则xy或xy",
    "id": 4528,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5961,
    "created_at": "2024-08-01T12:48:36.829049Z",
    "updated_at": "2024-08-01T12:48:36.829049Z",
    "lead_time": 2.138
  },
  {
    "text": "指令控制程序的顺序控制，称为指令控制",
    "id": 4529,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "指令控制",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5962,
    "created_at": "2024-08-01T12:48:48.554069Z",
    "updated_at": "2024-08-01T12:48:48.555075Z",
    "lead_time": 9.843
  },
  {
    "text": "这样，连续读取m个字所需的时间为tTm而顺序方式存储器连续读取m个字所需时间为tmT图四模块交叉存储器结构框图图流水线方式存取示意图从以上定量分析可知，由于tt，交叉存储器的带宽确实大大提高了",
    "id": 4530,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "交叉存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 81,
        "end": 86,
        "text": "交叉存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 87,
        "end": 89,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5963,
    "created_at": "2024-08-01T12:48:51.080767Z",
    "updated_at": "2024-08-01T12:48:51.080767Z",
    "lead_time": 1.053
  },
  {
    "text": "在流水线处理中，当任务饱满时，任务源源不断地输入流水线，不论有多少级过程段，每隔一个时钟周期都能输出一个任务",
    "id": 4531,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5964,
    "created_at": "2024-08-01T12:48:53.198754Z",
    "updated_at": "2024-08-01T12:48:53.198754Z",
    "lead_time": 0.757
  },
  {
    "text": "同时刷新存储器要有与显示像素数相对应的存储空间，用来存储每个像素的信息",
    "id": 4532,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5965,
    "created_at": "2024-08-01T12:48:54.845165Z",
    "updated_at": "2024-08-01T12:48:54.845165Z",
    "lead_time": 0.38
  },
  {
    "text": "即使后来增加了具有简单仲裁逻辑的DMA控制器以支持DMA传送，但仍不能满足多CPU环境的要求",
    "id": 4533,
    "label": [
      {
        "start": 16,
        "end": 22,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "多CPU",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5966,
    "created_at": "2024-08-01T12:48:55.940429Z",
    "updated_at": "2024-08-01T12:48:55.940429Z",
    "lead_time": 0.061
  },
  {
    "text": "从年起，半导体存储器经历了代：单个芯片KB、KB、KB、KB、KB、MB、MB、MB、MB、MB和现在的GB",
    "id": 4534,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5967,
    "created_at": "2024-08-01T12:48:57.909165Z",
    "updated_at": "2024-08-01T12:48:57.909165Z",
    "lead_time": 0.132
  },
  {
    "text": "这些操作系统由机器指令和广义指令组成，广义指令是操作系统定义和解释的软件指令，所以这一级也称为混合级",
    "id": 4535,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "广义指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "广义指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "软件指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5968,
    "created_at": "2024-08-01T12:48:59.485751Z",
    "updated_at": "2024-08-01T12:48:59.485751Z",
    "lead_time": 0.079
  },
  {
    "text": "突发Burst，猝发访问指的是在存储器同一行中对相邻的存储单元进行连续访问的方式，突发长度可以从几字节到数千字节不等",
    "id": 4536,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "猝发访问",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5969,
    "created_at": "2024-08-01T12:49:01.085173Z",
    "updated_at": "2024-08-01T12:49:01.086175Z",
    "lead_time": 0.083
  },
  {
    "text": "另外，“AB”输出端可指示两个数相等，因此它与其他ALU的“AB”输出端按“与”逻辑连接后，可以检测两个数的相等条件",
    "id": 4537,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5970,
    "created_at": "2024-08-01T12:49:02.730296Z",
    "updated_at": "2024-08-01T12:49:02.730296Z",
    "lead_time": 0.071
  },
  {
    "text": "存储器模块进行地址译码并将数据放到数据线上",
    "id": 4538,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "存储器模块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5971,
    "created_at": "2024-08-01T12:49:04.048247Z",
    "updated_at": "2024-08-01T12:49:04.048247Z",
    "lead_time": 0.08
  },
  {
    "text": "为此，希望在编制程序时独立编址，既不考虑程序是否能在物理存储器中存放得下因为这与程序运行时的系统配置和当时其他程序的运行情况有关，在编程时一般无法确定，也不考虑程序应该存放在什么物理位置",
    "id": 4539,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "独立编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "物理存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 91,
        "end": 92,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5972,
    "created_at": "2024-08-01T12:49:05.703872Z",
    "updated_at": "2024-08-01T12:49:05.703872Z",
    "lead_time": 0.104
  },
  {
    "text": "替换问题与cache的组织方式紧密相关",
    "id": 4540,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5973,
    "created_at": "2024-08-01T12:49:07.384214Z",
    "updated_at": "2024-08-01T12:49:07.384214Z",
    "lead_time": 0.056
  },
  {
    "text": "例如，加法：，，，，最后一个加式中等号右边的“”表示向上一位的进位",
    "id": 4541,
    "label": [
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5974,
    "created_at": "2024-08-01T12:49:09.971507Z",
    "updated_at": "2024-08-01T12:49:09.972514Z",
    "lead_time": 1.324
  },
  {
    "text": "图是显示适配器的结构框图，它由刷新存储器、显示控制器、ROMBIOS三部分组成",
    "id": 4542,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "BIOS",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5975,
    "created_at": "2024-08-01T12:49:11.620282Z",
    "updated_at": "2024-08-01T12:49:11.620282Z",
    "lead_time": 0.411
  },
  {
    "text": "而动态随机存取存储器DRAM简化了每个存储元的结构，因而DRAM的存储密度很高，通常用作计算机的主存储器",
    "id": 4543,
    "label": [
      {
        "start": 1,
        "end": 10,
        "text": "动态随机存取存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5976,
    "created_at": "2024-08-01T12:49:13.224323Z",
    "updated_at": "2024-08-01T12:49:13.224323Z",
    "lead_time": 0.095
  },
  {
    "text": "所谓定时，是指事件出现在总线上的时序关系",
    "id": 4544,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5977,
    "created_at": "2024-08-01T12:49:45.116483Z",
    "updated_at": "2024-08-01T12:49:45.116483Z",
    "lead_time": 30.188
  },
  {
    "text": "采用字段译码的编码方法，可以用较小的二进制信息位表示较多的微命令信号",
    "id": 4545,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "字段译码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5978,
    "created_at": "2024-08-01T12:49:46.536656Z",
    "updated_at": "2024-08-01T12:49:46.536656Z",
    "lead_time": 0.087
  },
  {
    "text": "从定点机取比例因子中我们得到一个启示，在计算机中还可以这样来表示数据：把一个数的有效数字和数的范围在计算机的一个存储单元中分别予以表示",
    "id": 4546,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "定点机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 44,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5979,
    "created_at": "2024-08-01T12:53:28.832896Z",
    "updated_at": "2024-08-01T12:53:28.832896Z",
    "lead_time": 220.056
  },
  {
    "text": "而存放一字节的单元，称为字节存储单元，相应的地址称为字节地址",
    "id": 4547,
    "label": [
      {
        "start": 12,
        "end": 18,
        "text": "字节存储单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "字节地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5980,
    "created_at": "2024-08-01T12:53:30.141770Z",
    "updated_at": "2024-08-01T12:53:30.141770Z",
    "lead_time": 0.06
  },
  {
    "text": "事实上，一个IO接口模块有两个接口：一是和系统总线的接口",
    "id": 4548,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5981,
    "created_at": "2024-08-01T12:53:31.269602Z",
    "updated_at": "2024-08-01T12:53:31.269602Z",
    "lead_time": 0.047
  },
  {
    "text": "在Pentium系列中显示适配器大多作成插卡形式，插入一个PCI或VESAVL总线槽",
    "id": 4549,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5982,
    "created_at": "2024-08-01T12:54:02.341898Z",
    "updated_at": "2024-08-01T12:54:02.341898Z",
    "lead_time": 29.816
  },
  {
    "text": "采样发生在时钟信号的上跳沿",
    "id": 4550,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "上跳沿",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5983,
    "created_at": "2024-08-01T12:54:39.474230Z",
    "updated_at": "2024-08-01T12:54:39.474230Z",
    "lead_time": 35.482
  },
  {
    "text": "读操作时，桥可早于上层总线，直接在下层总线上进行预读",
    "id": 4551,
    "label": [
      {
        "start": 5,
        "end": 6,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5984,
    "created_at": "2024-08-01T12:54:41.927758Z",
    "updated_at": "2024-08-01T12:54:41.927758Z",
    "lead_time": 0.112
  },
  {
    "text": "在电子计算机里，相当于算盘功能的部件，我们称之为运算器；相当于纸那样具有“记忆”功能的部件，我们称之为存储器；相当于笔那样把原始解题信息送到计算机或把运算结果显示出来的设备，我们称之为输入设备或输出设备；而相当于人的大脑，能够自动控制整个计算过程的，称之为控制器",
    "id": 4552,
    "label": [
      {
        "start": 51,
        "end": 54,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 97,
        "end": 101,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 128,
        "end": 131,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 70,
        "end": 73,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 92,
        "end": 96,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5985,
    "created_at": "2024-08-01T12:54:45.042624Z",
    "updated_at": "2024-08-01T12:54:45.042624Z",
    "lead_time": 1.139
  },
  {
    "text": "先进的显示控制器具有图形加速能力，这样的控制器芯片称为AVGA芯片",
    "id": 4553,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5986,
    "created_at": "2024-08-01T12:54:47.795677Z",
    "updated_at": "2024-08-01T12:54:47.795677Z",
    "lead_time": 0.317
  },
  {
    "text": "数据进栈时使用PUSH指令，将数据压入栈顶地址，堆栈指示器减；数据退栈时，使用POP指令，数据从栈顶地址弹出，堆栈指示器加",
    "id": 4554,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "堆栈指示器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "堆栈指示器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "栈顶地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "栈顶地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5987,
    "created_at": "2024-08-01T12:54:50.911680Z",
    "updated_at": "2024-08-01T12:54:50.911680Z",
    "lead_time": 0.135
  },
  {
    "text": "系统程序用来简化程序设计，简化使用方法，提高计算机的使用效率，发挥和扩大计算机的功能和用途，它包括：各种服务性程序；语言类程序；操作系统；数据库管理系统",
    "id": 4555,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "系统程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 69,
        "end": 76,
        "text": "数据库管理系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5988,
    "created_at": "2024-08-01T12:54:53.641796Z",
    "updated_at": "2024-08-01T12:54:53.641796Z",
    "lead_time": 0.176
  },
  {
    "text": "写回法writebackcopyback写回法要求：当CPU写cache命中时，只修改cache的内容，而不立即写入主存；只有当此行被换出时才写回主存",
    "id": 4556,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "写回法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "写回法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5989,
    "created_at": "2024-08-01T12:54:56.412869Z",
    "updated_at": "2024-08-01T12:54:56.412869Z",
    "lead_time": 0.173
  },
  {
    "text": "定点运算器和浮点运算器的结构复杂程度有所不同",
    "id": 4557,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "定点运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "浮点运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5990,
    "created_at": "2024-08-01T12:54:59.900880Z",
    "updated_at": "2024-08-01T12:54:59.900880Z",
    "lead_time": 0.096
  },
  {
    "text": "为了要确定传送了多少个“”，必须采用某种时序格式，以便使接收设备能加以识别",
    "id": 4558,
    "annotator": 1,
    "annotation_id": 5991,
    "created_at": "2024-08-01T12:55:03.101690Z",
    "updated_at": "2024-08-01T12:55:03.101690Z",
    "lead_time": 0.097
  },
  {
    "text": "主存被分成个相互独立、容量相同的模块M、M、M、M，每个模块都有自己的读写控制电路、地址寄存器和数据寄存器，各自以等同的方式与CPU交换信息",
    "id": 4559,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 41,
        "text": "读写控制电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "数据寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5992,
    "created_at": "2024-08-01T12:55:06.424972Z",
    "updated_at": "2024-08-01T12:55:06.424972Z",
    "lead_time": 0.164
  },
  {
    "text": "刷新周期比读写周期有高的优先权，当对同一行进行读写与刷新操作时，存储控制器对读写请求予以暂存，延迟到此行刷新结束后再进行",
    "id": 4560,
    "label": [
      {
        "start": 32,
        "end": 37,
        "text": "存储控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5993,
    "created_at": "2024-08-01T12:55:09.769559Z",
    "updated_at": "2024-08-01T12:55:09.769559Z",
    "lead_time": 0.22
  },
  {
    "text": "本节只讨论内部总线",
    "id": 4561,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5994,
    "created_at": "2024-08-01T12:55:14.033753Z",
    "updated_at": "2024-08-01T12:55:14.033753Z",
    "lead_time": 0.133
  },
  {
    "text": "这种情况表明：一方面，在计算机的发展中，外围设备的发展占有重要地位；另一方面，外围设备的发展同主机的发展还不相适应",
    "id": 4562,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5995,
    "created_at": "2024-08-01T12:55:16.747725Z",
    "updated_at": "2024-08-01T12:55:16.747725Z",
    "lead_time": 0.069
  },
  {
    "text": "它们的作用是把人们所熟悉的某种信息形式变换为机器内部所能接收和识别的二进制信息形式",
    "id": 4563,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5996,
    "created_at": "2024-08-01T12:55:18.384915Z",
    "updated_at": "2024-08-01T12:55:18.384915Z",
    "lead_time": 0.097
  },
  {
    "text": "为进一步缩小现代处理器高时钟频率和访问DRAM相对较慢之间的差距，高性能微处理器可支持附加一级的cache",
    "id": 4564,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 40,
        "text": "高性能微处理器",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "时钟频率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5997,
    "created_at": "2024-08-01T12:55:19.930232Z",
    "updated_at": "2024-08-01T12:55:19.930232Z",
    "lead_time": 0.085
  },
  {
    "text": "存储器读写时序信号RD、WE用来进行存储器的读写操作",
    "id": 4565,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5998,
    "created_at": "2024-08-01T12:55:21.752023Z",
    "updated_at": "2024-08-01T12:55:21.752023Z",
    "lead_time": 0.07
  },
  {
    "text": "在总线周期期间nFRAME持续有效，但在最后一个数据期开始前撤除",
    "id": 4566,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "FRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "数据期",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 5999,
    "created_at": "2024-08-01T12:55:23.565903Z",
    "updated_at": "2024-08-01T12:55:23.565903Z",
    "lead_time": 0.091
  },
  {
    "text": "实际上，上述每个段表和页表的表项中都应设置一个有效位",
    "id": 4567,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6000,
    "created_at": "2024-08-01T12:55:25.059469Z",
    "updated_at": "2024-08-01T12:55:25.059469Z",
    "lead_time": 0.064
  },
  {
    "text": "总之，在非数值应用的广大领域中，逻辑运算是非常有用的",
    "id": 4568,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6001,
    "created_at": "2024-08-01T12:55:27.439400Z",
    "updated_at": "2024-08-01T12:55:27.439905Z",
    "lead_time": 0.745
  },
  {
    "text": "类似地，DDRSDRAM则采用n预取结构",
    "id": 4569,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "预取结构",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "DDR",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6002,
    "created_at": "2024-08-01T12:55:29.097867Z",
    "updated_at": "2024-08-01T12:55:29.097867Z",
    "lead_time": 0.059
  },
  {
    "text": "但磁盘驱动器的存取时间没有出现相应的下降，仍停留在毫秒ms级",
    "id": 4570,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6003,
    "created_at": "2024-08-01T12:55:30.695536Z",
    "updated_at": "2024-08-01T12:55:30.695536Z",
    "lead_time": 0.107
  },
  {
    "text": "下面以系统程序为例，简要说明软件的发展演变过程",
    "id": 4571,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "系统程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6004,
    "created_at": "2024-08-01T12:55:32.171882Z",
    "updated_at": "2024-08-01T12:55:32.171882Z",
    "lead_time": 0.052
  },
  {
    "text": "各种计算机的CPU可能有这样或那样的不同，但是在CPU中至少要有六类寄存器，如图所示",
    "id": 4572,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6005,
    "created_at": "2024-08-01T12:55:33.810840Z",
    "updated_at": "2024-08-01T12:55:33.811853Z",
    "lead_time": 0.06
  },
  {
    "text": "图a表示未编码的磁盘，如所有磁化点均存“”",
    "id": 4573,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6006,
    "created_at": "2024-08-01T12:55:35.174908Z",
    "updated_at": "2024-08-01T12:55:35.174908Z",
    "lead_time": 0.059
  },
  {
    "text": "Pentium增加了一个Lcache",
    "id": 4574,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6007,
    "created_at": "2024-08-01T12:55:36.970301Z",
    "updated_at": "2024-08-01T12:55:36.970301Z",
    "lead_time": 0.053
  },
  {
    "text": "第二代为年，晶体管计算机",
    "id": 4575,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "晶体管计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6008,
    "created_at": "2024-08-01T12:55:38.683198Z",
    "updated_at": "2024-08-01T12:55:38.683198Z",
    "lead_time": 0.051
  },
  {
    "text": "本节我们将讨论在一些典型的指令周期中，CPU的各部分是怎样工作的，从而能加深对这一问题的理解和体验",
    "id": 4576,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6009,
    "created_at": "2024-08-01T12:55:40.427036Z",
    "updated_at": "2024-08-01T12:55:40.427036Z",
    "lead_time": 0.117
  },
  {
    "text": "随着计算机在信息处理、情报检索及各种管理系统中应用的发展，要求大量处理某些数据，建立和检索大量的表格",
    "id": 4577,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6010,
    "created_at": "2024-08-01T12:55:42.123119Z",
    "updated_at": "2024-08-01T12:55:42.123119Z",
    "lead_time": 0.062
  },
  {
    "text": "此后根据控制电路输出的字符或图形，变换成数字信号来驱动激光器的打开与关闭",
    "id": 4578,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "控制电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "数字信号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6011,
    "created_at": "2024-08-01T12:55:43.950000Z",
    "updated_at": "2024-08-01T12:55:43.950000Z",
    "lead_time": 0.071
  },
  {
    "text": "图仅示出了除操作数检查之外的段流水线浮点加法器框图",
    "id": 4579,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 23,
        "text": "流水线浮点加法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6012,
    "created_at": "2024-08-01T12:55:45.877172Z",
    "updated_at": "2024-08-01T12:55:45.877172Z",
    "lead_time": 0.105
  },
  {
    "text": "操作数可放在专用寄存器、通用寄存器、内存和指令中",
    "id": 4580,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6013,
    "created_at": "2024-08-01T12:55:48.919543Z",
    "updated_at": "2024-08-01T12:55:48.919543Z",
    "lead_time": 1.451
  },
  {
    "text": "正数的补码和原码是一样的，根据数据补码定义可得x补y补xyxy补modnx，y，则xy或xy",
    "id": 4581,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6014,
    "created_at": "2024-08-01T12:55:51.565246Z",
    "updated_at": "2024-08-01T12:55:51.565246Z",
    "lead_time": 0.836
  },
  {
    "text": "如果用非流水线的硬件来处理这n个任务，时间上只能串行进行，则所需时钟周期数为TLnk当nk时，Ckk",
    "id": 4582,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6015,
    "created_at": "2024-08-01T12:55:53.394084Z",
    "updated_at": "2024-08-01T12:55:53.394084Z",
    "lead_time": 0.077
  },
  {
    "text": "为此出现了图所示的多总线系统结构",
    "id": 4583,
    "label": [
      {
        "start": 9,
        "end": 16,
        "text": "多总线系统结构",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6016,
    "created_at": "2024-08-01T12:55:55.258307Z",
    "updated_at": "2024-08-01T12:55:55.258307Z",
    "lead_time": 0.113
  },
  {
    "text": "为此人们又提出了便于VLSI技术实现的精简指令系统计算机，简称RISC",
    "id": 4584,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 19,
        "end": 28,
        "text": "精简指令系统计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "VLSI技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6017,
    "created_at": "2024-08-01T12:55:57.195519Z",
    "updated_at": "2024-08-01T12:55:57.195519Z",
    "lead_time": 0.084
  },
  {
    "text": "机器执行寄存器寄存器型指令的速度很快，因为执行这类指令，不需要访问内存",
    "id": 4585,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6018,
    "created_at": "2024-08-01T12:55:59.116246Z",
    "updated_at": "2024-08-01T12:55:59.116246Z",
    "lead_time": 0.072
  },
  {
    "text": "计算机系统中，传输信息一般采用串行传送或并行传送两种方式之一",
    "id": 4586,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "并行传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6019,
    "created_at": "2024-08-01T12:56:11.476350Z",
    "updated_at": "2024-08-01T12:56:11.476350Z",
    "lead_time": 2.244
  },
  {
    "text": "刷新存储器的存取周期必须满足刷新频率的要求",
    "id": 4587,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6020,
    "created_at": "2024-08-01T12:56:12.912455Z",
    "updated_at": "2024-08-01T12:56:12.912455Z",
    "lead_time": 0.732
  },
  {
    "text": "为了使计算机能直接处理十进制形式的数据，采用两种表示形式：字符串形式，主要用在非数值计算的应用领域；压缩的十进制数串形式，用于直接完成十进制数的算术运算",
    "id": 4588,
    "label": [
      {
        "start": 72,
        "end": 76,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6021,
    "created_at": "2024-08-01T12:56:14.140989Z",
    "updated_at": "2024-08-01T12:56:14.142016Z",
    "lead_time": 0.589
  },
  {
    "text": "从地址有效开始经tAQ读出时间，数据总线IO上出现了有效的读出数据",
    "id": 4589,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "读出时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6022,
    "created_at": "2024-08-01T12:56:15.249948Z",
    "updated_at": "2024-08-01T12:56:15.249948Z",
    "lead_time": 0.326
  },
  {
    "text": "但是随着新一代机器及VLSI技术的发展，硬布线逻辑设计思想又得到了重视",
    "id": 4590,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "VLSI技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6023,
    "created_at": "2024-08-01T12:56:16.303506Z",
    "updated_at": "2024-08-01T12:56:16.303506Z",
    "lead_time": 0.42
  },
  {
    "text": "这位地址分为位的行地址和位的列地址，分别在RAS和CAS有效时同时输入到个芯片的地址引脚端",
    "id": 4591,
    "label": [
      {
        "start": 37,
        "end": 39,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "地址引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6024,
    "created_at": "2024-08-01T12:56:17.228527Z",
    "updated_at": "2024-08-01T12:56:17.228527Z",
    "lead_time": 0.186
  },
  {
    "text": "闪存自世纪年代末出现以来，应用已经极为普遍，在很多情况下取代了传统的其他ROM",
    "id": 4592,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6025,
    "created_at": "2024-08-01T12:56:18.522623Z",
    "updated_at": "2024-08-01T12:56:18.522623Z",
    "lead_time": 0.433
  }
]